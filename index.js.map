{"version":3,"file":"index.js","sources":["../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/defineInspect.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql-tag/src/index.js","../src/generated/graphql.ts","../node_modules/universalify/index.js","../node_modules/graceful-fs/polyfills.js","../node_modules/graceful-fs/legacy-streams.js","../node_modules/graceful-fs/clone.js","../node_modules/graceful-fs/graceful-fs.js","../node_modules/fs-extra/lib/fs/index.js","../node_modules/at-least-node/index.js","../node_modules/fs-extra/lib/mkdirs/make-dir.js","../node_modules/fs-extra/lib/mkdirs/index.js","../node_modules/fs-extra/lib/util/utimes.js","../node_modules/fs-extra/lib/util/stat.js","../node_modules/fs-extra/lib/copy-sync/copy-sync.js","../node_modules/fs-extra/lib/copy-sync/index.js","../node_modules/fs-extra/lib/path-exists/index.js","../node_modules/fs-extra/lib/copy/copy.js","../node_modules/fs-extra/lib/copy/index.js","../node_modules/fs-extra/lib/remove/rimraf.js","../node_modules/fs-extra/lib/remove/index.js","../node_modules/fs-extra/lib/empty/index.js","../node_modules/fs-extra/lib/ensure/file.js","../node_modules/fs-extra/lib/ensure/link.js","../node_modules/fs-extra/lib/ensure/symlink-paths.js","../node_modules/fs-extra/lib/ensure/symlink-type.js","../node_modules/fs-extra/lib/ensure/symlink.js","../node_modules/fs-extra/lib/ensure/index.js","../node_modules/jsonfile/utils.js","../node_modules/jsonfile/index.js","../node_modules/fs-extra/lib/json/jsonfile.js","../node_modules/fs-extra/lib/output/index.js","../node_modules/fs-extra/lib/json/output-json.js","../node_modules/fs-extra/lib/json/output-json-sync.js","../node_modules/fs-extra/lib/json/index.js","../node_modules/fs-extra/lib/move-sync/move-sync.js","../node_modules/fs-extra/lib/move-sync/index.js","../node_modules/fs-extra/lib/move/move.js","../node_modules/fs-extra/lib/move/index.js","../node_modules/tunnel/lib/tunnel.js","../node_modules/fs-extra/lib/index.js","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/stringify.js","../node_modules/qs/lib/parse.js","../node_modules/typed-rest-client/Util.js","../node_modules/typed-rest-client/HttpClient.js","../node_modules/node-fetch/lib/index.js","../node_modules/cross-fetch/dist/node-ponyfill.js","../node_modules/cross-fetch/dist/node-polyfill.js","../src/client.ts","../node_modules/webidl-conversions/lib/index.js","../node_modules/whatwg-url/lib/utils.js","../node_modules/tr46/lib/regexes.js","../node_modules/tr46/lib/statusMapping.js","../node_modules/tr46/index.js","../node_modules/whatwg-url/lib/infra.js","../node_modules/whatwg-url/lib/urlencoded.js","../node_modules/whatwg-url/lib/url-state-machine.js","../node_modules/lodash.sortby/index.js","../node_modules/whatwg-url/lib/URLSearchParams-impl.js","../node_modules/whatwg-url/lib/URLSearchParams.js","../node_modules/whatwg-url/lib/URL-impl.js","../node_modules/whatwg-url/lib/URL.js","../node_modules/whatwg-url/webidl2js-wrapper.js","../node_modules/whatwg-url/index.js","../src/main.ts","../src/index.ts"],"sourcesContent":["// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from \"graphql\";\nimport gql from \"graphql-tag\";\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\nexport type RequireFields<T, K extends keyof T> = { [X in Exclude<keyof T, K>]?: T[X] } & { [P in K]-?: NonNullable<T[P]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n\tID: string;\n\tString: string;\n\tBoolean: boolean;\n\tInt: number;\n\tFloat: number;\n\t/** An ISO-8601 encoded date string. */\n\tDate: any;\n\t/** An ISO-8601 encoded UTC date string. */\n\tDateTime: any;\n\t/** A Git object ID. */\n\tGitObjectID: any;\n\t/** Git SSH string */\n\tGitSSHRemote: any;\n\t/** An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC. */\n\tGitTimestamp: any;\n\t/** A string containing HTML code. */\n\tHTML: any;\n\t/** An ISO-8601 encoded UTC date string with millisecond precison. */\n\tPreciseDateTime: any;\n\t/** An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string. */\n\tURI: any;\n\t/** A valid x509 certificate string */\n\tX509Certificate: any;\n};\n\n/** Autogenerated input type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationInput = {\n\t/** The id of the invitation being accepted */\n\tinvitationId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AcceptEnterpriseAdministratorInvitation */\nexport type AcceptEnterpriseAdministratorInvitationPayload = {\n\t__typename?: \"AcceptEnterpriseAdministratorInvitationPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The invitation that was accepted. */\n\tinvitation?: Maybe<EnterpriseAdministratorInvitation>;\n\t/** A message confirming the result of accepting an administrator invitation. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionInput = {\n\t/** The Node ID of the repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The name of the suggested topic. */\n\tname: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AcceptTopicSuggestion */\nexport type AcceptTopicSuggestionPayload = {\n\t__typename?: \"AcceptTopicSuggestionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The accepted topic. */\n\ttopic?: Maybe<Topic>;\n};\n\n/** The possible capabilities for action executions setting. */\nexport enum ActionExecutionCapabilitySetting {\n\t/** All action executions are disabled. */\n\tDisabled = \"DISABLED\",\n\t/** All action executions are enabled. */\n\tAllActions = \"ALL_ACTIONS\",\n\t/** Only actions defined within the repo are allowed. */\n\tLocalActionsOnly = \"LOCAL_ACTIONS_ONLY\",\n\t/** Organization administrators action execution capabilities. */\n\tNoPolicy = \"NO_POLICY\",\n}\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type Actor = {\n\t/** A URL pointing to the actor's public avatar. */\n\tavatarUrl: Scalars[\"URI\"];\n\t/** The username of the actor. */\n\tlogin: Scalars[\"String\"];\n\t/** The HTTP path for this actor. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this actor. */\n\turl: Scalars[\"URI\"];\n};\n\n/** Represents an object which can take actions on GitHub. Typically a User or Bot. */\nexport type ActorAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Location information for an actor */\nexport type ActorLocation = {\n\t__typename?: \"ActorLocation\";\n\t/** City */\n\tcity?: Maybe<Scalars[\"String\"]>;\n\t/** Country name */\n\tcountry?: Maybe<Scalars[\"String\"]>;\n\t/** Country code */\n\tcountryCode?: Maybe<Scalars[\"String\"]>;\n\t/** Region name */\n\tregion?: Maybe<Scalars[\"String\"]>;\n\t/** Region or state code */\n\tregionCode?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignableInput = {\n\t/** The id of the assignable object to add assignees to. */\n\tassignableId: Scalars[\"ID\"];\n\t/** The id of users to add as assignees. */\n\tassigneeIds: Array<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddAssigneesToAssignable */\nexport type AddAssigneesToAssignablePayload = {\n\t__typename?: \"AddAssigneesToAssignablePayload\";\n\t/** The item that was assigned. */\n\tassignable?: Maybe<Assignable>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of AddComment */\nexport type AddCommentInput = {\n\t/** The Node ID of the subject to modify. */\n\tsubjectId: Scalars[\"ID\"];\n\t/** The contents of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddComment */\nexport type AddCommentPayload = {\n\t__typename?: \"AddCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The edge from the subject's comment connection. */\n\tcommentEdge?: Maybe<IssueCommentEdge>;\n\t/** The subject */\n\tsubject?: Maybe<Node>;\n\t/** The edge from the subject's timeline connection. */\n\ttimelineEdge?: Maybe<IssueTimelineItemEdge>;\n};\n\n/** Autogenerated input type of AddLabelsToLabelable */\nexport type AddLabelsToLabelableInput = {\n\t/** The id of the labelable object to add labels to. */\n\tlabelableId: Scalars[\"ID\"];\n\t/** The ids of the labels to add. */\n\tlabelIds: Array<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddLabelsToLabelable */\nexport type AddLabelsToLabelablePayload = {\n\t__typename?: \"AddLabelsToLabelablePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The item that was labeled. */\n\tlabelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of AddProjectCard */\nexport type AddProjectCardInput = {\n\t/** The Node ID of the ProjectColumn. */\n\tprojectColumnId: Scalars[\"ID\"];\n\t/** The content of the card. Must be a member of the ProjectCardItem union */\n\tcontentId?: Maybe<Scalars[\"ID\"]>;\n\t/** The note on the card. */\n\tnote?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddProjectCard */\nexport type AddProjectCardPayload = {\n\t__typename?: \"AddProjectCardPayload\";\n\t/** The edge from the ProjectColumn's card connection. */\n\tcardEdge?: Maybe<ProjectCardEdge>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The ProjectColumn */\n\tprojectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of AddProjectColumn */\nexport type AddProjectColumnInput = {\n\t/** The Node ID of the project. */\n\tprojectId: Scalars[\"ID\"];\n\t/** The name of the column. */\n\tname: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddProjectColumn */\nexport type AddProjectColumnPayload = {\n\t__typename?: \"AddProjectColumnPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The edge from the project's column connection. */\n\tcolumnEdge?: Maybe<ProjectColumnEdge>;\n\t/** The project */\n\tproject?: Maybe<Project>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentInput = {\n\t/** The node ID of the pull request reviewing */\n\tpullRequestId?: Maybe<Scalars[\"ID\"]>;\n\t/** The Node ID of the review to modify. */\n\tpullRequestReviewId?: Maybe<Scalars[\"ID\"]>;\n\t/** The SHA of the commit to comment on. */\n\tcommitOID?: Maybe<Scalars[\"GitObjectID\"]>;\n\t/** The text of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** The relative path of the file to comment on. */\n\tpath?: Maybe<Scalars[\"String\"]>;\n\t/** The line index in the diff to comment on. */\n\tposition?: Maybe<Scalars[\"Int\"]>;\n\t/** The comment id to reply to. */\n\tinReplyTo?: Maybe<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewComment */\nexport type AddPullRequestReviewCommentPayload = {\n\t__typename?: \"AddPullRequestReviewCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The newly created comment. */\n\tcomment?: Maybe<PullRequestReviewComment>;\n\t/** The edge from the review's comment connection. */\n\tcommentEdge?: Maybe<PullRequestReviewCommentEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReview */\nexport type AddPullRequestReviewInput = {\n\t/** The Node ID of the pull request to modify. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** The commit OID the review pertains to. */\n\tcommitOID?: Maybe<Scalars[\"GitObjectID\"]>;\n\t/** The contents of the review body comment. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The event to perform on the pull request review. */\n\tevent?: Maybe<PullRequestReviewEvent>;\n\t/** The review line comments. */\n\tcomments?: Maybe<Array<Maybe<DraftPullRequestReviewComment>>>;\n\t/** The review line comment threads. */\n\tthreads?: Maybe<Array<Maybe<DraftPullRequestReviewThread>>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddPullRequestReview */\nexport type AddPullRequestReviewPayload = {\n\t__typename?: \"AddPullRequestReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The newly created pull request review. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n\t/** The edge from the pull request's review connection. */\n\treviewEdge?: Maybe<PullRequestReviewEdge>;\n};\n\n/** Autogenerated input type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadInput = {\n\t/** Path to the file being commented on. */\n\tpath: Scalars[\"String\"];\n\t/** Body of the thread's first comment. */\n\tbody: Scalars[\"String\"];\n\t/** The Node ID of the review to modify. */\n\tpullRequestReviewId: Scalars[\"ID\"];\n\t/** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */\n\tline: Scalars[\"Int\"];\n\t/** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n\tside?: Maybe<DiffSide>;\n\t/** The first line of the range to which the comment refers. */\n\tstartLine?: Maybe<Scalars[\"Int\"]>;\n\t/** The side of the diff on which the start line resides. */\n\tstartSide?: Maybe<DiffSide>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddPullRequestReviewThread */\nexport type AddPullRequestReviewThreadPayload = {\n\t__typename?: \"AddPullRequestReviewThreadPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The newly created thread. */\n\tthread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Autogenerated input type of AddReaction */\nexport type AddReactionInput = {\n\t/** The Node ID of the subject to modify. */\n\tsubjectId: Scalars[\"ID\"];\n\t/** The name of the emoji to react with. */\n\tcontent: ReactionContent;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddReaction */\nexport type AddReactionPayload = {\n\t__typename?: \"AddReactionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The reaction object. */\n\treaction?: Maybe<Reaction>;\n\t/** The reactable subject. */\n\tsubject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of AddStar */\nexport type AddStarInput = {\n\t/** The Starrable ID to star. */\n\tstarrableId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of AddStar */\nexport type AddStarPayload = {\n\t__typename?: \"AddStarPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The starrable. */\n\tstarrable?: Maybe<Starrable>;\n};\n\n/** Represents a 'added_to_project' event on a given issue or pull request. */\nexport type AddedToProjectEvent = Node & {\n\t__typename?: \"AddedToProjectEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** A GitHub App. */\nexport type App = Node & {\n\t__typename?: \"App\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** The description of the app. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The hex color code, without the leading '#', for the logo background. */\n\tlogoBackgroundColor: Scalars[\"String\"];\n\t/** A URL pointing to the app's logo. */\n\tlogoUrl: Scalars[\"URI\"];\n\t/** The name of the app. */\n\tname: Scalars[\"String\"];\n\t/** A slug based on the name of the app for use in URLs. */\n\tslug: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The URL to the app's homepage. */\n\turl: Scalars[\"URI\"];\n};\n\n/** A GitHub App. */\nexport type AppLogoUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated input type of ArchiveRepository */\nexport type ArchiveRepositoryInput = {\n\t/** The ID of the repository to mark as archived. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ArchiveRepository */\nexport type ArchiveRepositoryPayload = {\n\t__typename?: \"ArchiveRepositoryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The repository that was marked as archived. */\n\trepository?: Maybe<Repository>;\n};\n\n/** An object that can have users assigned to it. */\nexport type Assignable = {\n\t/** A list of Users assigned to this object. */\n\tassignees: UserConnection;\n};\n\n/** An object that can have users assigned to it. */\nexport type AssignableAssigneesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents an 'assigned' event on any assignable object. */\nexport type AssignedEvent = Node & {\n\t__typename?: \"AssignedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the assignable associated with the event. */\n\tassignable: Assignable;\n\t/** Identifies the user or mannequin that was assigned. */\n\tassignee?: Maybe<Assignee>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/**\n\t * Identifies the user who was assigned.\n\t * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n\t */\n\tuser?: Maybe<User>;\n};\n\n/** Types that can be assigned to issues. */\nexport type Assignee = Bot | Mannequin | Organization | User;\n\n/** An entry in the audit log. */\nexport type AuditEntry = {\n\t/** The action name */\n\taction: Scalars[\"String\"];\n\t/** The user who initiated the action */\n\tactor?: Maybe<AuditEntryActor>;\n\t/** The IP address of the actor */\n\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t/** A readable representation of the actor's location */\n\tactorLocation?: Maybe<ActorLocation>;\n\t/** The username of the user who initiated the action */\n\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the actor. */\n\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the actor. */\n\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The time the action was initiated */\n\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t/** The corresponding operation type for the action */\n\toperationType?: Maybe<OperationType>;\n\t/** The user affected by the action */\n\tuser?: Maybe<User>;\n\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the user. */\n\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the user. */\n\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Types that can initiate an audit log event. */\nexport type AuditEntryActor = Bot | Organization | User;\n\n/** Ordering options for Audit Log connections. */\nexport type AuditLogOrder = {\n\t/** The field to order Audit Logs by. */\n\tfield?: Maybe<AuditLogOrderField>;\n\t/** The ordering direction. */\n\tdirection?: Maybe<OrderDirection>;\n};\n\n/** Properties by which Audit Log connections can be ordered. */\nexport enum AuditLogOrderField {\n\t/** Order audit log entries by timestamp */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a 'automatic_base_change_failed' event on a given pull request. */\nexport type AutomaticBaseChangeFailedEvent = Node & {\n\t__typename?: \"AutomaticBaseChangeFailedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** The new base for this PR */\n\tnewBase: Scalars[\"String\"];\n\t/** The old base for this PR */\n\toldBase: Scalars[\"String\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n};\n\n/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\nexport type AutomaticBaseChangeSucceededEvent = Node & {\n\t__typename?: \"AutomaticBaseChangeSucceededEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** The new base for this PR */\n\tnewBase: Scalars[\"String\"];\n\t/** The old base for this PR */\n\toldBase: Scalars[\"String\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n};\n\n/** Represents a 'base_ref_changed' event on a given issue or pull request. */\nexport type BaseRefChangedEvent = Node & {\n\t__typename?: \"BaseRefChangedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Represents a 'base_ref_force_pushed' event on a given pull request. */\nexport type BaseRefForcePushedEvent = Node & {\n\t__typename?: \"BaseRefForcePushedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the after commit SHA for the 'base_ref_force_pushed' event. */\n\tafterCommit?: Maybe<Commit>;\n\t/** Identifies the before commit SHA for the 'base_ref_force_pushed' event. */\n\tbeforeCommit?: Maybe<Commit>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n\t/** Identifies the fully qualified ref name for the 'base_ref_force_pushed' event. */\n\tref?: Maybe<Ref>;\n};\n\n/** Represents a Git blame. */\nexport type Blame = {\n\t__typename?: \"Blame\";\n\t/** The list of ranges from a Git blame. */\n\tranges: Array<BlameRange>;\n};\n\n/** Represents a range of information from a Git blame. */\nexport type BlameRange = {\n\t__typename?: \"BlameRange\";\n\t/** Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change. */\n\tage: Scalars[\"Int\"];\n\t/** Identifies the line author */\n\tcommit: Commit;\n\t/** The ending line for the range */\n\tendingLine: Scalars[\"Int\"];\n\t/** The starting line for the range */\n\tstartingLine: Scalars[\"Int\"];\n};\n\n/** Represents a Git blob. */\nexport type Blob = Node &\n\tGitObject & {\n\t\t__typename?: \"Blob\";\n\t\t/** An abbreviated version of the Git object ID */\n\t\tabbreviatedOid: Scalars[\"String\"];\n\t\t/** Byte size of Blob object */\n\t\tbyteSize: Scalars[\"Int\"];\n\t\t/** The HTTP path for this Git object */\n\t\tcommitResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this Git object */\n\t\tcommitUrl: Scalars[\"URI\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding. */\n\t\tisBinary?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** Indicates whether the contents is truncated */\n\t\tisTruncated: Scalars[\"Boolean\"];\n\t\t/** The Git object ID */\n\t\toid: Scalars[\"GitObjectID\"];\n\t\t/** The Repository the Git object belongs to */\n\t\trepository: Repository;\n\t\t/** UTF8 text data or null if the Blob is binary */\n\t\ttext?: Maybe<Scalars[\"String\"]>;\n\t};\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type Bot = Node &\n\tActor &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Bot\";\n\t\t/** A URL pointing to the GitHub App's public avatar. */\n\t\tavatarUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The username of the actor. */\n\t\tlogin: Scalars[\"String\"];\n\t\t/** The HTTP path for this bot */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this bot */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** A special type of user which takes actions on behalf of GitHub Apps. */\nexport type BotAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRule = Node & {\n\t__typename?: \"BranchProtectionRule\";\n\t/** A list of conflicts matching branches protection rule and other branch protection rules */\n\tbranchProtectionRuleConflicts: BranchProtectionRuleConflictConnection;\n\t/** The actor who created this branch protection rule. */\n\tcreator?: Maybe<Actor>;\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** Will new commits pushed to matching branches dismiss pull request review approvals. */\n\tdismissesStaleReviews: Scalars[\"Boolean\"];\n\tid: Scalars[\"ID\"];\n\t/** Can admins overwrite branch protection. */\n\tisAdminEnforced: Scalars[\"Boolean\"];\n\t/** Repository refs that are protected by this rule */\n\tmatchingRefs: RefConnection;\n\t/** Identifies the protection rule pattern. */\n\tpattern: Scalars[\"String\"];\n\t/** A list push allowances for this branch protection rule. */\n\tpushAllowances: PushAllowanceConnection;\n\t/** The repository associated with this branch protection rule. */\n\trepository?: Maybe<Repository>;\n\t/** Number of approving reviews required to update matching branches. */\n\trequiredApprovingReviewCount?: Maybe<Scalars[\"Int\"]>;\n\t/** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n\trequiredStatusCheckContexts?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\t/** Are approving reviews required to update matching branches. */\n\trequiresApprovingReviews: Scalars[\"Boolean\"];\n\t/** Are reviews from code owners required to update matching branches. */\n\trequiresCodeOwnerReviews: Scalars[\"Boolean\"];\n\t/** Are commits required to be signed. */\n\trequiresCommitSignatures: Scalars[\"Boolean\"];\n\t/** Are status checks required to update matching branches. */\n\trequiresStatusChecks: Scalars[\"Boolean\"];\n\t/** Are branches required to be up to date before merging. */\n\trequiresStrictStatusChecks: Scalars[\"Boolean\"];\n\t/** Is pushing to matching branches restricted. */\n\trestrictsPushes: Scalars[\"Boolean\"];\n\t/** Is dismissal of pull request reviews restricted. */\n\trestrictsReviewDismissals: Scalars[\"Boolean\"];\n\t/** A list review dismissal allowances for this branch protection rule. */\n\treviewDismissalAllowances: ReviewDismissalAllowanceConnection;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleBranchProtectionRuleConflictsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleMatchingRefsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRulePushAllowancesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A branch protection rule. */\nexport type BranchProtectionRuleReviewDismissalAllowancesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A conflict between two branch protection rules. */\nexport type BranchProtectionRuleConflict = {\n\t__typename?: \"BranchProtectionRuleConflict\";\n\t/** Identifies the branch protection rule. */\n\tbranchProtectionRule?: Maybe<BranchProtectionRule>;\n\t/** Identifies the conflicting branch protection rule. */\n\tconflictingBranchProtectionRule?: Maybe<BranchProtectionRule>;\n\t/** Identifies the branch ref that has conflicting rules */\n\tref?: Maybe<Ref>;\n};\n\n/** The connection type for BranchProtectionRuleConflict. */\nexport type BranchProtectionRuleConflictConnection = {\n\t__typename?: \"BranchProtectionRuleConflictConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<BranchProtectionRuleConflictEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<BranchProtectionRuleConflict>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleConflictEdge = {\n\t__typename?: \"BranchProtectionRuleConflictEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<BranchProtectionRuleConflict>;\n};\n\n/** The connection type for BranchProtectionRule. */\nexport type BranchProtectionRuleConnection = {\n\t__typename?: \"BranchProtectionRuleConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<BranchProtectionRuleEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<BranchProtectionRule>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type BranchProtectionRuleEdge = {\n\t__typename?: \"BranchProtectionRuleEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<BranchProtectionRule>;\n};\n\n/** Autogenerated input type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationInput = {\n\t/** The Node ID of the pending enterprise administrator invitation. */\n\tinvitationId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CancelEnterpriseAdminInvitation */\nexport type CancelEnterpriseAdminInvitationPayload = {\n\t__typename?: \"CancelEnterpriseAdminInvitationPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The invitation that was canceled. */\n\tinvitation?: Maybe<EnterpriseAdministratorInvitation>;\n\t/** A message confirming the result of canceling an administrator invitation. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of ChangeUserStatus */\nexport type ChangeUserStatusInput = {\n\t/** The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:. */\n\temoji?: Maybe<Scalars[\"String\"]>;\n\t/** A short description of your current status. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n\t/** The ID of the organization whose members will be allowed to see the status. If omitted, the status will be publicly visible. */\n\torganizationId?: Maybe<Scalars[\"ID\"]>;\n\t/** Whether this status should indicate you are not fully available on GitHub, e.g., you are away. */\n\tlimitedAvailability?: Maybe<Scalars[\"Boolean\"]>;\n\t/** If set, the user status will not be shown after this date. */\n\texpiresAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ChangeUserStatus */\nexport type ChangeUserStatusPayload = {\n\t__typename?: \"ChangeUserStatusPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** Your updated status. */\n\tstatus?: Maybe<UserStatus>;\n};\n\n/** Autogenerated input type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelableInput = {\n\t/** The id of the labelable object to clear the labels from. */\n\tlabelableId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ClearLabelsFromLabelable */\nexport type ClearLabelsFromLabelablePayload = {\n\t__typename?: \"ClearLabelsFromLabelablePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The item that was unlabeled. */\n\tlabelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of CloneProject */\nexport type CloneProjectInput = {\n\t/** The owner ID to create the project under. */\n\ttargetOwnerId: Scalars[\"ID\"];\n\t/** The source project to clone. */\n\tsourceId: Scalars[\"ID\"];\n\t/** Whether or not to clone the source project's workflows. */\n\tincludeWorkflows: Scalars[\"Boolean\"];\n\t/** The name of the project. */\n\tname: Scalars[\"String\"];\n\t/** The description of the project. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The visibility of the project, defaults to false (private). */\n\tpublic?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CloneProject */\nexport type CloneProjectPayload = {\n\t__typename?: \"CloneProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The id of the JobStatus for populating cloned fields. */\n\tjobStatusId?: Maybe<Scalars[\"String\"]>;\n\t/** The new cloned project. */\n\tproject?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryInput = {\n\t/** The Node ID of the template repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The name of the new repository. */\n\tname: Scalars[\"String\"];\n\t/** The ID of the owner for the new repository. */\n\townerId: Scalars[\"ID\"];\n\t/** A short description of the new repository. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** Indicates the repository's visibility level. */\n\tvisibility: RepositoryVisibility;\n\t/** Whether to copy all branches from the template to the new repository. Defaults to copying only the default branch of the template. */\n\tincludeAllBranches?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CloneTemplateRepository */\nexport type CloneTemplateRepositoryPayload = {\n\t__typename?: \"CloneTemplateRepositoryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** An object that can be closed */\nexport type Closable = {\n\t/** `true` if the object is closed (definition of closed may depend on type) */\n\tclosed: Scalars[\"Boolean\"];\n\t/** Identifies the date and time when the object was closed. */\n\tclosedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** Autogenerated input type of CloseIssue */\nexport type CloseIssueInput = {\n\t/** ID of the issue to be closed. */\n\tissueId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CloseIssue */\nexport type CloseIssuePayload = {\n\t__typename?: \"CloseIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The issue that was closed. */\n\tissue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ClosePullRequest */\nexport type ClosePullRequestInput = {\n\t/** ID of the pull request to be closed. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ClosePullRequest */\nexport type ClosePullRequestPayload = {\n\t__typename?: \"ClosePullRequestPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request that was closed. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'closed' event on any `Closable`. */\nexport type ClosedEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"ClosedEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Object that was closed. */\n\t\tclosable: Closable;\n\t\t/** Object which triggered the creation of this event. */\n\t\tcloser?: Maybe<Closer>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The HTTP path for this closed event. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this closed event. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** The object which triggered a `ClosedEvent`. */\nexport type Closer = Commit | PullRequest;\n\n/** The Code of Conduct for a repository */\nexport type CodeOfConduct = Node & {\n\t__typename?: \"CodeOfConduct\";\n\t/** The body of the Code of Conduct */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The key for the Code of Conduct */\n\tkey: Scalars[\"String\"];\n\t/** The formal name of the Code of Conduct */\n\tname: Scalars[\"String\"];\n\t/** The HTTP path for this Code of Conduct */\n\tresourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for this Code of Conduct */\n\turl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Collaborators affiliation level with a subject. */\nexport enum CollaboratorAffiliation {\n\t/** All outside collaborators of an organization-owned subject. */\n\tOutside = \"OUTSIDE\",\n\t/** All collaborators with permissions to an organization-owned subject, regardless of organization membership status. */\n\tDirect = \"DIRECT\",\n\t/** All collaborators the authenticated user can see. */\n\tAll = \"ALL\",\n}\n\n/** Represents a comment. */\nexport type Comment = {\n\t/** The actor who authored the comment. */\n\tauthor?: Maybe<Actor>;\n\t/** Author's association with the subject of the comment. */\n\tauthorAssociation: CommentAuthorAssociation;\n\t/** The body as Markdown. */\n\tbody: Scalars[\"String\"];\n\t/** The body rendered to HTML. */\n\tbodyHTML: Scalars[\"HTML\"];\n\t/** The body rendered to text. */\n\tbodyText: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Check if this comment was created via an email reply. */\n\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t/** The actor who edited the comment. */\n\teditor?: Maybe<Actor>;\n\tid: Scalars[\"ID\"];\n\t/** Check if this comment was edited and includes an edit with the creation data */\n\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t/** The moment the editor made the last edit */\n\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** Identifies when the comment was published at. */\n\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** A list of edits to this content. */\n\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t/** Did the viewer author this comment. */\n\tviewerDidAuthor: Scalars[\"Boolean\"];\n};\n\n/** Represents a comment. */\nexport type CommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A comment author association with repository. */\nexport enum CommentAuthorAssociation {\n\t/** Author is a member of the organization that owns the repository. */\n\tMember = \"MEMBER\",\n\t/** Author is the owner of the repository. */\n\tOwner = \"OWNER\",\n\t/** Author has been invited to collaborate on the repository. */\n\tCollaborator = \"COLLABORATOR\",\n\t/** Author has previously committed to the repository. */\n\tContributor = \"CONTRIBUTOR\",\n\t/** Author has not previously committed to the repository. */\n\tFirstTimeContributor = \"FIRST_TIME_CONTRIBUTOR\",\n\t/** Author has not previously committed to GitHub. */\n\tFirstTimer = \"FIRST_TIMER\",\n\t/** Author has no association with the repository. */\n\tNone = \"NONE\",\n}\n\n/** The possible errors that will prevent a user from updating a comment. */\nexport enum CommentCannotUpdateReason {\n\t/** Unable to create comment because repository is archived. */\n\tArchived = \"ARCHIVED\",\n\t/** You must be the author or have write access to this repository to update this comment. */\n\tInsufficientAccess = \"INSUFFICIENT_ACCESS\",\n\t/** Unable to create comment because issue is locked. */\n\tLocked = \"LOCKED\",\n\t/** You must be logged in to update this comment. */\n\tLoginRequired = \"LOGIN_REQUIRED\",\n\t/** Repository is under maintenance. */\n\tMaintenance = \"MAINTENANCE\",\n\t/** At least one email address must be verified to update this comment. */\n\tVerifiedEmailRequired = \"VERIFIED_EMAIL_REQUIRED\",\n\t/** You cannot update this comment */\n\tDenied = \"DENIED\",\n}\n\n/** Represents a 'comment_deleted' event on a given issue or pull request. */\nexport type CommentDeletedEvent = Node & {\n\t__typename?: \"CommentDeletedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Represents a Git commit. */\nexport type Commit = Node &\n\tGitObject &\n\tSubscribable &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Commit\";\n\t\t/** An abbreviated version of the Git object ID */\n\t\tabbreviatedOid: Scalars[\"String\"];\n\t\t/** The number of additions in this commit. */\n\t\tadditions: Scalars[\"Int\"];\n\t\t/** The pull requests associated with a commit */\n\t\tassociatedPullRequests?: Maybe<PullRequestConnection>;\n\t\t/** Authorship details of the commit. */\n\t\tauthor?: Maybe<GitActor>;\n\t\t/** Check if the committer and the author match. */\n\t\tauthoredByCommitter: Scalars[\"Boolean\"];\n\t\t/** The datetime when this commit was authored. */\n\t\tauthoredDate: Scalars[\"DateTime\"];\n\t\t/** Fetches `git blame` information. */\n\t\tblame: Blame;\n\t\t/** The number of changed files in this commit. */\n\t\tchangedFiles: Scalars[\"Int\"];\n\t\t/** Comments made on the commit. */\n\t\tcomments: CommitCommentConnection;\n\t\t/** The HTTP path for this Git object */\n\t\tcommitResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this Git object */\n\t\tcommitUrl: Scalars[\"URI\"];\n\t\t/** The datetime when this commit was committed. */\n\t\tcommittedDate: Scalars[\"DateTime\"];\n\t\t/** Check if commited via GitHub web UI. */\n\t\tcommittedViaWeb: Scalars[\"Boolean\"];\n\t\t/** Committership details of the commit. */\n\t\tcommitter?: Maybe<GitActor>;\n\t\t/** The number of deletions in this commit. */\n\t\tdeletions: Scalars[\"Int\"];\n\t\t/** The deployments associated with a commit. */\n\t\tdeployments?: Maybe<DeploymentConnection>;\n\t\t/** The linear commit history starting from (and including) this commit, in the same order as `git log`. */\n\t\thistory: CommitHistoryConnection;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The Git commit message */\n\t\tmessage: Scalars[\"String\"];\n\t\t/** The Git commit message body */\n\t\tmessageBody: Scalars[\"String\"];\n\t\t/** The commit message body rendered to HTML. */\n\t\tmessageBodyHTML: Scalars[\"HTML\"];\n\t\t/** The Git commit message headline */\n\t\tmessageHeadline: Scalars[\"String\"];\n\t\t/** The commit message headline rendered to HTML. */\n\t\tmessageHeadlineHTML: Scalars[\"HTML\"];\n\t\t/** The Git object ID */\n\t\toid: Scalars[\"GitObjectID\"];\n\t\t/** The organization this commit was made on behalf of. */\n\t\tonBehalfOf?: Maybe<Organization>;\n\t\t/** The parents of a commit. */\n\t\tparents: CommitConnection;\n\t\t/** The datetime when this commit was pushed. */\n\t\tpushedDate?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** The Repository this commit belongs to */\n\t\trepository: Repository;\n\t\t/** The HTTP path for this commit */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Commit signing information, if present. */\n\t\tsignature?: Maybe<GitSignature>;\n\t\t/** Status information for this commit */\n\t\tstatus?: Maybe<Status>;\n\t\t/** Check and Status rollup information for this commit. */\n\t\tstatusCheckRollup?: Maybe<StatusCheckRollup>;\n\t\t/** Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file. */\n\t\tsubmodules: SubmoduleConnection;\n\t\t/**\n\t\t * Returns a URL to download a tarball archive for a repository.\n\t\t * Note: For private repositories, these links are temporary and expire after five minutes.\n\t\t */\n\t\ttarballUrl: Scalars[\"URI\"];\n\t\t/** Commit's root Tree */\n\t\ttree: Tree;\n\t\t/** The HTTP path for the tree of this commit */\n\t\ttreeResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for the tree of this commit */\n\t\ttreeUrl: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this commit */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t\t/**\n\t\t * Returns a URL to download a zipball archive for a repository.\n\t\t * Note: For private repositories, these links are temporary and expire after five minutes.\n\t\t */\n\t\tzipballUrl: Scalars[\"URI\"];\n\t};\n\n/** Represents a Git commit. */\nexport type CommitAssociatedPullRequestsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<PullRequestOrder>;\n};\n\n/** Represents a Git commit. */\nexport type CommitBlameArgs = {\n\tpath: Scalars[\"String\"];\n};\n\n/** Represents a Git commit. */\nexport type CommitCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitDeploymentsArgs = {\n\tenvironments?: Maybe<Array<Scalars[\"String\"]>>;\n\torderBy?: Maybe<DeploymentOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitHistoryArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tpath?: Maybe<Scalars[\"String\"]>;\n\tauthor?: Maybe<CommitAuthor>;\n\tsince?: Maybe<Scalars[\"GitTimestamp\"]>;\n\tuntil?: Maybe<Scalars[\"GitTimestamp\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitParentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Git commit. */\nexport type CommitSubmodulesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Specifies an author for filtering Git commits. */\nexport type CommitAuthor = {\n\t/** ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails. */\n\tid?: Maybe<Scalars[\"ID\"]>;\n\t/** Email addresses to filter by. Commits authored by any of the specified email addresses will be returned. */\n\temails?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Represents a comment on a given Commit. */\nexport type CommitComment = Node &\n\tComment &\n\tDeletable &\n\tMinimizable &\n\tUpdatable &\n\tUpdatableComment &\n\tReactable &\n\tRepositoryNode & {\n\t\t__typename?: \"CommitComment\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** Identifies the comment body. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** Identifies the commit associated with the comment, if the commit exists. */\n\t\tcommit?: Maybe<Commit>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not a comment has been minimized. */\n\t\tisMinimized: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Returns why the comment was minimized. */\n\t\tminimizedReason?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the file path associated with the comment. */\n\t\tpath?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the line position associated with the comment. */\n\t\tposition?: Maybe<Scalars[\"Int\"]>;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path permalink for this commit comment. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL permalink for this commit comment. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can minimize this object. */\n\t\tviewerCanMinimize: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** Represents a comment on a given Commit. */\nexport type CommitCommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for CommitComment. */\nexport type CommitCommentConnection = {\n\t__typename?: \"CommitCommentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CommitCommentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CommitComment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CommitCommentEdge = {\n\t__typename?: \"CommitCommentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CommitComment>;\n};\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThread = Node &\n\tRepositoryNode & {\n\t\t__typename?: \"CommitCommentThread\";\n\t\t/** The comments that exist in this thread. */\n\t\tcomments: CommitCommentConnection;\n\t\t/** The commit the comments were made on. */\n\t\tcommit?: Maybe<Commit>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The file the comments were made on. */\n\t\tpath?: Maybe<Scalars[\"String\"]>;\n\t\t/** The position in the diff for the commit that the comment was made on. */\n\t\tposition?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t};\n\n/** A thread of comments on a commit. */\nexport type CommitCommentThreadCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Commit. */\nexport type CommitConnection = {\n\t__typename?: \"CommitConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CommitEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Commit>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Ordering options for commit contribution connections. */\nexport type CommitContributionOrder = {\n\t/** The field by which to order commit contributions. */\n\tfield: CommitContributionOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which commit contribution connections can be ordered. */\nexport enum CommitContributionOrderField {\n\t/** Order commit contributions by when they were made. */\n\tOccurredAt = \"OCCURRED_AT\",\n\t/** Order commit contributions by how many commits they represent. */\n\tCommitCount = \"COMMIT_COUNT\",\n}\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepository = {\n\t__typename?: \"CommitContributionsByRepository\";\n\t/** The commit contributions, each representing a day. */\n\tcontributions: CreatedCommitContributionConnection;\n\t/** The repository in which the commits were made. */\n\trepository: Repository;\n\t/** The HTTP path for the user's commits to the repository in this time range. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for the user's commits to the repository in this time range. */\n\turl: Scalars[\"URI\"];\n};\n\n/** This aggregates commits made by a user within one repository. */\nexport type CommitContributionsByRepositoryContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<CommitContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type CommitEdge = {\n\t__typename?: \"CommitEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Commit>;\n};\n\n/** The connection type for Commit. */\nexport type CommitHistoryConnection = {\n\t__typename?: \"CommitHistoryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CommitEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Commit>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a 'connected' event on a given issue or pull request. */\nexport type ConnectedEvent = Node & {\n\t__typename?: \"ConnectedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Reference originated in a different repository. */\n\tisCrossRepository: Scalars[\"Boolean\"];\n\t/** Issue or pull request that made the reference. */\n\tsource: ReferencedSubject;\n\t/** Issue or pull request which was connected. */\n\tsubject: ReferencedSubject;\n};\n\n/** Represents a contribution a user made on GitHub, such as opening an issue. */\nexport type Contribution = {\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** A calendar of contributions made on GitHub by a user. */\nexport type ContributionCalendar = {\n\t__typename?: \"ContributionCalendar\";\n\t/** A list of hex color codes used in this calendar. The darker the color, the more contributions it represents. */\n\tcolors: Array<Scalars[\"String\"]>;\n\t/** Determine if the color set was chosen because it's currently Halloween. */\n\tisHalloween: Scalars[\"Boolean\"];\n\t/** A list of the months of contributions in this calendar. */\n\tmonths: Array<ContributionCalendarMonth>;\n\t/** The count of total contributions in the calendar. */\n\ttotalContributions: Scalars[\"Int\"];\n\t/** A list of the weeks of contributions in this calendar. */\n\tweeks: Array<ContributionCalendarWeek>;\n};\n\n/** Represents a single day of contributions on GitHub by a user. */\nexport type ContributionCalendarDay = {\n\t__typename?: \"ContributionCalendarDay\";\n\t/** The hex color code that represents how many contributions were made on this day compared to others in the calendar. */\n\tcolor: Scalars[\"String\"];\n\t/** How many contributions were made by the user on this day. */\n\tcontributionCount: Scalars[\"Int\"];\n\t/** The day this square represents. */\n\tdate: Scalars[\"Date\"];\n\t/** A number representing which day of the week this square represents, e.g., 1 is Monday. */\n\tweekday: Scalars[\"Int\"];\n};\n\n/** A month of contributions in a user's contribution graph. */\nexport type ContributionCalendarMonth = {\n\t__typename?: \"ContributionCalendarMonth\";\n\t/** The date of the first day of this month. */\n\tfirstDay: Scalars[\"Date\"];\n\t/** The name of the month. */\n\tname: Scalars[\"String\"];\n\t/** How many weeks started in this month. */\n\ttotalWeeks: Scalars[\"Int\"];\n\t/** The year the month occurred in. */\n\tyear: Scalars[\"Int\"];\n};\n\n/** A week of contributions in a user's contribution graph. */\nexport type ContributionCalendarWeek = {\n\t__typename?: \"ContributionCalendarWeek\";\n\t/** The days of contributions in this week. */\n\tcontributionDays: Array<ContributionCalendarDay>;\n\t/** The date of the earliest square in this week. */\n\tfirstDay: Scalars[\"Date\"];\n};\n\n/** Ordering options for contribution connections. */\nexport type ContributionOrder = {\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollection = {\n\t__typename?: \"ContributionsCollection\";\n\t/** Commit contributions made by the user, grouped by repository. */\n\tcommitContributionsByRepository: Array<CommitContributionsByRepository>;\n\t/** A calendar of this user's contributions on GitHub. */\n\tcontributionCalendar: ContributionCalendar;\n\t/** The years the user has been making contributions with the most recent year first. */\n\tcontributionYears: Array<Scalars[\"Int\"]>;\n\t/** Determine if this collection's time span ends in the current month. */\n\tdoesEndInCurrentMonth: Scalars[\"Boolean\"];\n\t/** The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts. */\n\tearliestRestrictedContributionDate?: Maybe<Scalars[\"Date\"]>;\n\t/** The ending date and time of this collection. */\n\tendedAt: Scalars[\"DateTime\"];\n\t/** The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned. */\n\tfirstIssueContribution?: Maybe<CreatedIssueOrRestrictedContribution>;\n\t/** The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned. */\n\tfirstPullRequestContribution?: Maybe<CreatedPullRequestOrRestrictedContribution>;\n\t/** The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned. */\n\tfirstRepositoryContribution?: Maybe<CreatedRepositoryOrRestrictedContribution>;\n\t/** Does the user have any more activity in the timeline that occurred prior to the collection's time range? */\n\thasActivityInThePast: Scalars[\"Boolean\"];\n\t/** Determine if there are any contributions in this collection. */\n\thasAnyContributions: Scalars[\"Boolean\"];\n\t/** Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts. */\n\thasAnyRestrictedContributions: Scalars[\"Boolean\"];\n\t/** Whether or not the collector's time span is all within the same day. */\n\tisSingleDay: Scalars[\"Boolean\"];\n\t/** A list of issues the user opened. */\n\tissueContributions: CreatedIssueContributionConnection;\n\t/** Issue contributions made by the user, grouped by repository. */\n\tissueContributionsByRepository: Array<IssueContributionsByRepository>;\n\t/** When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false. */\n\tjoinedGitHubContribution?: Maybe<JoinedGitHubContribution>;\n\t/** The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts. */\n\tlatestRestrictedContributionDate?: Maybe<Scalars[\"Date\"]>;\n\t/**\n\t * When this collection's time range does not include any activity from the user, use this\n\t * to get a different collection from an earlier time range that does have activity.\n\t */\n\tmostRecentCollectionWithActivity?: Maybe<ContributionsCollection>;\n\t/**\n\t * Returns a different contributions collection from an earlier time range than this one\n\t * that does not have any contributions.\n\t */\n\tmostRecentCollectionWithoutActivity?: Maybe<ContributionsCollection>;\n\t/**\n\t * The issue the user opened on GitHub that received the most comments in the specified\n\t * time frame.\n\t */\n\tpopularIssueContribution?: Maybe<CreatedIssueContribution>;\n\t/**\n\t * The pull request the user opened on GitHub that received the most comments in the\n\t * specified time frame.\n\t */\n\tpopularPullRequestContribution?: Maybe<CreatedPullRequestContribution>;\n\t/** Pull request contributions made by the user. */\n\tpullRequestContributions: CreatedPullRequestContributionConnection;\n\t/** Pull request contributions made by the user, grouped by repository. */\n\tpullRequestContributionsByRepository: Array<PullRequestContributionsByRepository>;\n\t/** Pull request review contributions made by the user. */\n\tpullRequestReviewContributions: CreatedPullRequestReviewContributionConnection;\n\t/** Pull request review contributions made by the user, grouped by repository. */\n\tpullRequestReviewContributionsByRepository: Array<PullRequestReviewContributionsByRepository>;\n\t/** A list of repositories owned by the user that the user created in this time range. */\n\trepositoryContributions: CreatedRepositoryContributionConnection;\n\t/** A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts. */\n\trestrictedContributionsCount: Scalars[\"Int\"];\n\t/** The beginning date and time of this collection. */\n\tstartedAt: Scalars[\"DateTime\"];\n\t/** How many commits were made by the user in this time span. */\n\ttotalCommitContributions: Scalars[\"Int\"];\n\t/** How many issues the user opened. */\n\ttotalIssueContributions: Scalars[\"Int\"];\n\t/** How many pull requests the user opened. */\n\ttotalPullRequestContributions: Scalars[\"Int\"];\n\t/** How many pull request reviews the user left. */\n\ttotalPullRequestReviewContributions: Scalars[\"Int\"];\n\t/** How many different repositories the user committed to. */\n\ttotalRepositoriesWithContributedCommits: Scalars[\"Int\"];\n\t/** How many different repositories the user opened issues in. */\n\ttotalRepositoriesWithContributedIssues: Scalars[\"Int\"];\n\t/** How many different repositories the user left pull request reviews in. */\n\ttotalRepositoriesWithContributedPullRequestReviews: Scalars[\"Int\"];\n\t/** How many different repositories the user opened pull requests in. */\n\ttotalRepositoriesWithContributedPullRequests: Scalars[\"Int\"];\n\t/** How many repositories the user created. */\n\ttotalRepositoryContributions: Scalars[\"Int\"];\n\t/** The user who made the contributions in this collection. */\n\tuser: User;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionCommitContributionsByRepositoryArgs = {\n\tmaxRepositories?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionIssueContributionsByRepositoryArgs = {\n\tmaxRepositories?: Maybe<Scalars[\"Int\"]>;\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestContributionsByRepositoryArgs = {\n\tmaxRepositories?: Maybe<Scalars[\"Int\"]>;\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionPullRequestReviewContributionsByRepositoryArgs = {\n\tmaxRepositories?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionRepositoryContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalIssueContributionsArgs = {\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalPullRequestContributionsArgs = {\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedIssuesArgs = {\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoriesWithContributedPullRequestsArgs = {\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n\texcludePopular?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */\nexport type ContributionsCollectionTotalRepositoryContributionsArgs = {\n\texcludeFirst?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Autogenerated input type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssueInput = {\n\t/** The ProjectCard ID to convert. */\n\tprojectCardId: Scalars[\"ID\"];\n\t/** The ID of the repository to create the issue in. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The title of the newly created issue. Defaults to the card's note text. */\n\ttitle?: Maybe<Scalars[\"String\"]>;\n\t/** The body of the newly created issue. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ConvertProjectCardNoteToIssue */\nexport type ConvertProjectCardNoteToIssuePayload = {\n\t__typename?: \"ConvertProjectCardNoteToIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated ProjectCard. */\n\tprojectCard?: Maybe<ProjectCard>;\n};\n\n/** Represents a 'convert_to_draft' event on a given pull request. */\nexport type ConvertToDraftEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"ConvertToDraftEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** PullRequest referenced by event. */\n\t\tpullRequest: PullRequest;\n\t\t/** The HTTP path for this convert to draft event. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this convert to draft event. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\nexport type ConvertedNoteToIssueEvent = Node & {\n\t__typename?: \"ConvertedNoteToIssueEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Autogenerated input type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRuleInput = {\n\t/** The global relay id of the repository in which a new branch protection rule should be created in. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The glob-like pattern used to determine matching branches. */\n\tpattern: Scalars[\"String\"];\n\t/** Are approving reviews required to update matching branches. */\n\trequiresApprovingReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Number of approving reviews required to update matching branches. */\n\trequiredApprovingReviewCount?: Maybe<Scalars[\"Int\"]>;\n\t/** Are commits required to be signed. */\n\trequiresCommitSignatures?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Can admins overwrite branch protection. */\n\tisAdminEnforced?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are status checks required to update matching branches. */\n\trequiresStatusChecks?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are branches required to be up to date before merging. */\n\trequiresStrictStatusChecks?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are reviews from code owners required to update matching branches. */\n\trequiresCodeOwnerReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Will new commits pushed to matching branches dismiss pull request review approvals. */\n\tdismissesStaleReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Is dismissal of pull request reviews restricted. */\n\trestrictsReviewDismissals?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n\treviewDismissalActorIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** Is pushing to matching branches restricted. */\n\trestrictsPushes?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A list of User, Team or App IDs allowed to push to matching branches. */\n\tpushActorIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n\trequiredStatusCheckContexts?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateBranchProtectionRule */\nexport type CreateBranchProtectionRulePayload = {\n\t__typename?: \"CreateBranchProtectionRulePayload\";\n\t/** The newly created BranchProtectionRule. */\n\tbranchProtectionRule?: Maybe<BranchProtectionRule>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationInput = {\n\t/** The ID of the enterprise owning the new organization. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The login of the new organization. */\n\tlogin: Scalars[\"String\"];\n\t/** The profile name of the new organization. */\n\tprofileName: Scalars[\"String\"];\n\t/** The email used for sending billing receipts. */\n\tbillingEmail: Scalars[\"String\"];\n\t/** The logins for the administrators of the new organization. */\n\tadminLogins: Array<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateEnterpriseOrganization */\nexport type CreateEnterpriseOrganizationPayload = {\n\t__typename?: \"CreateEnterpriseOrganizationPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise that owns the created organization. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** The organization that was created. */\n\torganization?: Maybe<Organization>;\n};\n\n/** Autogenerated input type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryInput = {\n\t/** The ID of the owner for which to create the new IP allow list entry. */\n\townerId: Scalars[\"ID\"];\n\t/** An IP address or range of addresses in CIDR notation. */\n\tallowListValue: Scalars[\"String\"];\n\t/** An optional name for the IP allow list entry. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** Whether the IP allow list entry is active when an IP allow list is enabled. */\n\tisActive: Scalars[\"Boolean\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateIpAllowListEntry */\nexport type CreateIpAllowListEntryPayload = {\n\t__typename?: \"CreateIpAllowListEntryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The IP allow list entry that was created. */\n\tipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of CreateIssue */\nexport type CreateIssueInput = {\n\t/** The Node ID of the repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The title for the issue. */\n\ttitle: Scalars[\"String\"];\n\t/** The body for the issue description. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The Node ID for the user assignee for this issue. */\n\tassigneeIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** The Node ID of the milestone for this issue. */\n\tmilestoneId?: Maybe<Scalars[\"ID\"]>;\n\t/** An array of Node IDs of labels for this issue. */\n\tlabelIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** An array of Node IDs for projects associated with this issue. */\n\tprojectIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateIssue */\nexport type CreateIssuePayload = {\n\t__typename?: \"CreateIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new issue. */\n\tissue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of CreateProject */\nexport type CreateProjectInput = {\n\t/** The owner ID to create the project under. */\n\townerId: Scalars[\"ID\"];\n\t/** The name of project. */\n\tname: Scalars[\"String\"];\n\t/** The description of project. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The name of the GitHub-provided template. */\n\ttemplate?: Maybe<ProjectTemplate>;\n\t/** A list of repository IDs to create as linked repositories for the project */\n\trepositoryIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateProject */\nexport type CreateProjectPayload = {\n\t__typename?: \"CreateProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new project. */\n\tproject?: Maybe<Project>;\n};\n\n/** Autogenerated input type of CreatePullRequest */\nexport type CreatePullRequestInput = {\n\t/** The Node ID of the repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/**\n\t * The name of the branch you want your changes pulled into. This should be an existing branch\n\t * on the current repository. You cannot update the base branch on a pull request to point\n\t * to another repository.\n\t */\n\tbaseRefName: Scalars[\"String\"];\n\t/**\n\t * The name of the branch where your changes are implemented. For cross-repository pull requests\n\t * in the same network, namespace `head_ref_name` with a user like this: `username:branch`.\n\t */\n\theadRefName: Scalars[\"String\"];\n\t/** The title of the pull request. */\n\ttitle: Scalars[\"String\"];\n\t/** The contents of the pull request. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** Indicates whether maintainers can modify the pull request. */\n\tmaintainerCanModify?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Indicates whether this pull request should be a draft. */\n\tdraft?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreatePullRequest */\nexport type CreatePullRequestPayload = {\n\t__typename?: \"CreatePullRequestPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new pull request. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of CreateRef */\nexport type CreateRefInput = {\n\t/** The Node ID of the Repository to create the Ref in. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`). */\n\tname: Scalars[\"String\"];\n\t/** The GitObjectID that the new Ref shall target. Must point to a commit. */\n\toid: Scalars[\"GitObjectID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateRef */\nexport type CreateRefPayload = {\n\t__typename?: \"CreateRefPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The newly created ref. */\n\tref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of CreateRepository */\nexport type CreateRepositoryInput = {\n\t/** The name of the new repository. */\n\tname: Scalars[\"String\"];\n\t/** The ID of the owner for the new repository. */\n\townerId?: Maybe<Scalars[\"ID\"]>;\n\t/** A short description of the new repository. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** Indicates the repository's visibility level. */\n\tvisibility: RepositoryVisibility;\n\t/** Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure. */\n\ttemplate?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The URL for a web page about this repository. */\n\thomepageUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** Indicates if the repository should have the wiki feature enabled. */\n\thasWikiEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Indicates if the repository should have the issues feature enabled. */\n\thasIssuesEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** When an organization is specified as the owner, this ID identifies the team that should be granted access to the new repository. */\n\tteamId?: Maybe<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateRepository */\nexport type CreateRepositoryPayload = {\n\t__typename?: \"CreateRepositoryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentInput = {\n\t/** The ID of the discussion to which the comment belongs. */\n\tdiscussionId: Scalars[\"ID\"];\n\t/** The content of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateTeamDiscussionComment */\nexport type CreateTeamDiscussionCommentPayload = {\n\t__typename?: \"CreateTeamDiscussionCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new comment. */\n\tteamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionInput = {\n\t/** The ID of the team to which the discussion belongs. */\n\tteamId: Scalars[\"ID\"];\n\t/** The title of the discussion. */\n\ttitle: Scalars[\"String\"];\n\t/** The content of the discussion. */\n\tbody: Scalars[\"String\"];\n\t/** If true, restricts the visiblity of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion. */\n\tprivate?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of CreateTeamDiscussion */\nexport type CreateTeamDiscussionPayload = {\n\t__typename?: \"CreateTeamDiscussionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new discussion. */\n\tteamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Represents the contribution a user made by committing to a repository. */\nexport type CreatedCommitContribution = Contribution & {\n\t__typename?: \"CreatedCommitContribution\";\n\t/** How many commits were made on this day to this repository by the user. */\n\tcommitCount: Scalars[\"Int\"];\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The repository the user made a commit in. */\n\trepository: Repository;\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** The connection type for CreatedCommitContribution. */\nexport type CreatedCommitContributionConnection = {\n\t__typename?: \"CreatedCommitContributionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CreatedCommitContributionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CreatedCommitContribution>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of commits across days and repositories in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedCommitContributionEdge = {\n\t__typename?: \"CreatedCommitContributionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CreatedCommitContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by opening an issue. */\nexport type CreatedIssueContribution = Contribution & {\n\t__typename?: \"CreatedIssueContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** The issue that was opened. */\n\tissue: Issue;\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** The connection type for CreatedIssueContribution. */\nexport type CreatedIssueContributionConnection = {\n\t__typename?: \"CreatedIssueContributionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CreatedIssueContributionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CreatedIssueContribution>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedIssueContributionEdge = {\n\t__typename?: \"CreatedIssueContributionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CreatedIssueContribution>;\n};\n\n/** Represents either a issue the viewer can access or a restricted contribution. */\nexport type CreatedIssueOrRestrictedContribution = CreatedIssueContribution | RestrictedContribution;\n\n/** Represents the contribution a user made on GitHub by opening a pull request. */\nexport type CreatedPullRequestContribution = Contribution & {\n\t__typename?: \"CreatedPullRequestContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The pull request that was opened. */\n\tpullRequest: PullRequest;\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** The connection type for CreatedPullRequestContribution. */\nexport type CreatedPullRequestContributionConnection = {\n\t__typename?: \"CreatedPullRequestContributionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CreatedPullRequestContributionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CreatedPullRequestContribution>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestContributionEdge = {\n\t__typename?: \"CreatedPullRequestContributionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CreatedPullRequestContribution>;\n};\n\n/** Represents either a pull request the viewer can access or a restricted contribution. */\nexport type CreatedPullRequestOrRestrictedContribution = CreatedPullRequestContribution | RestrictedContribution;\n\n/** Represents the contribution a user made by leaving a review on a pull request. */\nexport type CreatedPullRequestReviewContribution = Contribution & {\n\t__typename?: \"CreatedPullRequestReviewContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The pull request the user reviewed. */\n\tpullRequest: PullRequest;\n\t/** The review the user left on the pull request. */\n\tpullRequestReview: PullRequestReview;\n\t/** The repository containing the pull request that the user reviewed. */\n\trepository: Repository;\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** The connection type for CreatedPullRequestReviewContribution. */\nexport type CreatedPullRequestReviewContributionConnection = {\n\t__typename?: \"CreatedPullRequestReviewContributionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CreatedPullRequestReviewContributionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CreatedPullRequestReviewContribution>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedPullRequestReviewContributionEdge = {\n\t__typename?: \"CreatedPullRequestReviewContributionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CreatedPullRequestReviewContribution>;\n};\n\n/** Represents the contribution a user made on GitHub by creating a repository. */\nexport type CreatedRepositoryContribution = Contribution & {\n\t__typename?: \"CreatedRepositoryContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The repository that was created. */\n\trepository: Repository;\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** The connection type for CreatedRepositoryContribution. */\nexport type CreatedRepositoryContributionConnection = {\n\t__typename?: \"CreatedRepositoryContributionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<CreatedRepositoryContributionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<CreatedRepositoryContribution>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type CreatedRepositoryContributionEdge = {\n\t__typename?: \"CreatedRepositoryContributionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<CreatedRepositoryContribution>;\n};\n\n/** Represents either a repository the viewer can access or a restricted contribution. */\nexport type CreatedRepositoryOrRestrictedContribution = CreatedRepositoryContribution | RestrictedContribution;\n\n/** Represents a mention made by one issue or pull request to another. */\nexport type CrossReferencedEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"CrossReferencedEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Reference originated in a different repository. */\n\t\tisCrossRepository: Scalars[\"Boolean\"];\n\t\t/** Identifies when the reference was made. */\n\t\treferencedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP path for this pull request. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Issue or pull request that made the reference. */\n\t\tsource: ReferencedSubject;\n\t\t/** Issue or pull request to which the reference was made. */\n\t\ttarget: ReferencedSubject;\n\t\t/** The HTTP URL for this pull request. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Checks if the target will be closed when the source is merged. */\n\t\twillCloseTarget: Scalars[\"Boolean\"];\n\t};\n\n/** Autogenerated input type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionInput = {\n\t/** The Node ID of the repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The name of the suggested topic. */\n\tname: Scalars[\"String\"];\n\t/** The reason why the suggested topic is declined. */\n\treason: TopicSuggestionDeclineReason;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeclineTopicSuggestion */\nexport type DeclineTopicSuggestionPayload = {\n\t__typename?: \"DeclineTopicSuggestionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The declined topic. */\n\ttopic?: Maybe<Topic>;\n};\n\n/** The possible default permissions for repositories. */\nexport enum DefaultRepositoryPermissionField {\n\t/** No access */\n\tNone = \"NONE\",\n\t/** Can read repos by default */\n\tRead = \"READ\",\n\t/** Can read and write repos by default */\n\tWrite = \"WRITE\",\n\t/** Can read, write, and administrate repos by default */\n\tAdmin = \"ADMIN\",\n}\n\n/** Entities that can be deleted. */\nexport type Deletable = {\n\t/** Check if the current viewer can delete this object. */\n\tviewerCanDelete: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRuleInput = {\n\t/** The global relay id of the branch protection rule to be deleted. */\n\tbranchProtectionRuleId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteBranchProtectionRule */\nexport type DeleteBranchProtectionRulePayload = {\n\t__typename?: \"DeleteBranchProtectionRulePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteDeployment */\nexport type DeleteDeploymentInput = {\n\t/** The Node ID of the deployment to be deleted. */\n\tid: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteDeployment */\nexport type DeleteDeploymentPayload = {\n\t__typename?: \"DeleteDeploymentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryInput = {\n\t/** The ID of the IP allow list entry to delete. */\n\tipAllowListEntryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteIpAllowListEntry */\nexport type DeleteIpAllowListEntryPayload = {\n\t__typename?: \"DeleteIpAllowListEntryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The IP allow list entry that was deleted. */\n\tipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of DeleteIssueComment */\nexport type DeleteIssueCommentInput = {\n\t/** The ID of the comment to delete. */\n\tid: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteIssueComment */\nexport type DeleteIssueCommentPayload = {\n\t__typename?: \"DeleteIssueCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteIssue */\nexport type DeleteIssueInput = {\n\t/** The ID of the issue to delete. */\n\tissueId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteIssue */\nexport type DeleteIssuePayload = {\n\t__typename?: \"DeleteIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The repository the issue belonged to */\n\trepository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of DeleteProjectCard */\nexport type DeleteProjectCardInput = {\n\t/** The id of the card to delete. */\n\tcardId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteProjectCard */\nexport type DeleteProjectCardPayload = {\n\t__typename?: \"DeleteProjectCardPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The column the deleted card was in. */\n\tcolumn?: Maybe<ProjectColumn>;\n\t/** The deleted card ID. */\n\tdeletedCardId?: Maybe<Scalars[\"ID\"]>;\n};\n\n/** Autogenerated input type of DeleteProjectColumn */\nexport type DeleteProjectColumnInput = {\n\t/** The id of the column to delete. */\n\tcolumnId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteProjectColumn */\nexport type DeleteProjectColumnPayload = {\n\t__typename?: \"DeleteProjectColumnPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The deleted column ID. */\n\tdeletedColumnId?: Maybe<Scalars[\"ID\"]>;\n\t/** The project the deleted column was in. */\n\tproject?: Maybe<Project>;\n};\n\n/** Autogenerated input type of DeleteProject */\nexport type DeleteProjectInput = {\n\t/** The Project ID to update. */\n\tprojectId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteProject */\nexport type DeleteProjectPayload = {\n\t__typename?: \"DeleteProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The repository or organization the project was removed from. */\n\towner?: Maybe<ProjectOwner>;\n};\n\n/** Autogenerated input type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentInput = {\n\t/** The ID of the comment to delete. */\n\tid: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeletePullRequestReviewComment */\nexport type DeletePullRequestReviewCommentPayload = {\n\t__typename?: \"DeletePullRequestReviewCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request review the deleted comment belonged to. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of DeletePullRequestReview */\nexport type DeletePullRequestReviewInput = {\n\t/** The Node ID of the pull request review to delete. */\n\tpullRequestReviewId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeletePullRequestReview */\nexport type DeletePullRequestReviewPayload = {\n\t__typename?: \"DeletePullRequestReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The deleted pull request review. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of DeleteRef */\nexport type DeleteRefInput = {\n\t/** The Node ID of the Ref to be deleted. */\n\trefId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteRef */\nexport type DeleteRefPayload = {\n\t__typename?: \"DeleteRefPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentInput = {\n\t/** The ID of the comment to delete. */\n\tid: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteTeamDiscussionComment */\nexport type DeleteTeamDiscussionCommentPayload = {\n\t__typename?: \"DeleteTeamDiscussionCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionInput = {\n\t/** The discussion ID to delete. */\n\tid: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DeleteTeamDiscussion */\nexport type DeleteTeamDiscussionPayload = {\n\t__typename?: \"DeleteTeamDiscussionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Represents a 'demilestoned' event on a given issue or pull request. */\nexport type DemilestonedEvent = Node & {\n\t__typename?: \"DemilestonedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the milestone title associated with the 'demilestoned' event. */\n\tmilestoneTitle: Scalars[\"String\"];\n\t/** Object referenced by event. */\n\tsubject: MilestoneItem;\n};\n\n/** A repository deploy key. */\nexport type DeployKey = Node & {\n\t__typename?: \"DeployKey\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** The deploy key. */\n\tkey: Scalars[\"String\"];\n\t/** Whether or not the deploy key is read only. */\n\treadOnly: Scalars[\"Boolean\"];\n\t/** The deploy key title. */\n\ttitle: Scalars[\"String\"];\n\t/** Whether or not the deploy key has been verified. */\n\tverified: Scalars[\"Boolean\"];\n};\n\n/** The connection type for DeployKey. */\nexport type DeployKeyConnection = {\n\t__typename?: \"DeployKeyConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<DeployKeyEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<DeployKey>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeployKeyEdge = {\n\t__typename?: \"DeployKeyEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<DeployKey>;\n};\n\n/** Represents a 'deployed' event on a given pull request. */\nexport type DeployedEvent = Node & {\n\t__typename?: \"DeployedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** The deployment associated with the 'deployed' event. */\n\tdeployment: Deployment;\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n\t/** The ref associated with the 'deployed' event. */\n\tref?: Maybe<Ref>;\n};\n\n/** Represents triggered deployment instance. */\nexport type Deployment = Node & {\n\t__typename?: \"Deployment\";\n\t/** Identifies the commit sha of the deployment. */\n\tcommit?: Maybe<Commit>;\n\t/** Identifies the oid of the deployment commit, even if the commit has been deleted. */\n\tcommitOid: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the actor who triggered the deployment. */\n\tcreator: Actor;\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** The deployment description. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** The latest environment to which this deployment was made. */\n\tenvironment?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The latest environment to which this deployment was made. */\n\tlatestEnvironment?: Maybe<Scalars[\"String\"]>;\n\t/** The latest status of this deployment. */\n\tlatestStatus?: Maybe<DeploymentStatus>;\n\t/** The original environment to which this deployment was made. */\n\toriginalEnvironment?: Maybe<Scalars[\"String\"]>;\n\t/** Extra information that a deployment system might need. */\n\tpayload?: Maybe<Scalars[\"String\"]>;\n\t/** Identifies the Ref of the deployment, if the deployment was created by ref. */\n\tref?: Maybe<Ref>;\n\t/** Identifies the repository associated with the deployment. */\n\trepository: Repository;\n\t/** The current state of the deployment. */\n\tstate?: Maybe<DeploymentState>;\n\t/** A list of statuses associated with the deployment. */\n\tstatuses?: Maybe<DeploymentStatusConnection>;\n\t/** The deployment task. */\n\ttask?: Maybe<Scalars[\"String\"]>;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** Represents triggered deployment instance. */\nexport type DeploymentStatusesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Deployment. */\nexport type DeploymentConnection = {\n\t__typename?: \"DeploymentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<DeploymentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Deployment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentEdge = {\n\t__typename?: \"DeploymentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Deployment>;\n};\n\n/** Represents a 'deployment_environment_changed' event on a given pull request. */\nexport type DeploymentEnvironmentChangedEvent = Node & {\n\t__typename?: \"DeploymentEnvironmentChangedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The deployment status that updated the deployment environment. */\n\tdeploymentStatus: DeploymentStatus;\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n};\n\n/** Ordering options for deployment connections */\nexport type DeploymentOrder = {\n\t/** The field to order deployments by. */\n\tfield: DeploymentOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which deployment connections can be ordered. */\nexport enum DeploymentOrderField {\n\t/** Order collection by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** The possible states in which a deployment can be. */\nexport enum DeploymentState {\n\t/** The pending deployment was not updated after 30 minutes. */\n\tAbandoned = \"ABANDONED\",\n\t/** The deployment is currently active. */\n\tActive = \"ACTIVE\",\n\t/** An inactive transient deployment. */\n\tDestroyed = \"DESTROYED\",\n\t/** The deployment experienced an error. */\n\tError = \"ERROR\",\n\t/** The deployment has failed. */\n\tFailure = \"FAILURE\",\n\t/** The deployment is inactive. */\n\tInactive = \"INACTIVE\",\n\t/** The deployment is pending. */\n\tPending = \"PENDING\",\n\t/** The deployment has queued */\n\tQueued = \"QUEUED\",\n\t/** The deployment is in progress. */\n\tInProgress = \"IN_PROGRESS\",\n}\n\n/** Describes the status of a given deployment attempt. */\nexport type DeploymentStatus = Node & {\n\t__typename?: \"DeploymentStatus\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the actor who triggered the deployment. */\n\tcreator: Actor;\n\t/** Identifies the deployment associated with status. */\n\tdeployment: Deployment;\n\t/** Identifies the description of the deployment. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** Identifies the environment URL of the deployment. */\n\tenvironmentUrl?: Maybe<Scalars[\"URI\"]>;\n\tid: Scalars[\"ID\"];\n\t/** Identifies the log URL of the deployment. */\n\tlogUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** Identifies the current state of the deployment. */\n\tstate: DeploymentStatusState;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for DeploymentStatus. */\nexport type DeploymentStatusConnection = {\n\t__typename?: \"DeploymentStatusConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<DeploymentStatusEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<DeploymentStatus>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type DeploymentStatusEdge = {\n\t__typename?: \"DeploymentStatusEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<DeploymentStatus>;\n};\n\n/** The possible states for a deployment status. */\nexport enum DeploymentStatusState {\n\t/** The deployment is pending. */\n\tPending = \"PENDING\",\n\t/** The deployment was successful. */\n\tSuccess = \"SUCCESS\",\n\t/** The deployment has failed. */\n\tFailure = \"FAILURE\",\n\t/** The deployment is inactive. */\n\tInactive = \"INACTIVE\",\n\t/** The deployment experienced an error. */\n\tError = \"ERROR\",\n\t/** The deployment is queued */\n\tQueued = \"QUEUED\",\n\t/** The deployment is in progress. */\n\tInProgress = \"IN_PROGRESS\",\n}\n\n/** The possible sides of a diff. */\nexport enum DiffSide {\n\t/** The left side of the diff. */\n\tLeft = \"LEFT\",\n\t/** The right side of the diff. */\n\tRight = \"RIGHT\",\n}\n\n/** Represents a 'disconnected' event on a given issue or pull request. */\nexport type DisconnectedEvent = Node & {\n\t__typename?: \"DisconnectedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Reference originated in a different repository. */\n\tisCrossRepository: Scalars[\"Boolean\"];\n\t/** Issue or pull request from which the issue was disconnected. */\n\tsource: ReferencedSubject;\n\t/** Issue or pull request which was disconnected. */\n\tsubject: ReferencedSubject;\n};\n\n/** Autogenerated input type of DismissPullRequestReview */\nexport type DismissPullRequestReviewInput = {\n\t/** The Node ID of the pull request review to modify. */\n\tpullRequestReviewId: Scalars[\"ID\"];\n\t/** The contents of the pull request review dismissal message. */\n\tmessage: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of DismissPullRequestReview */\nexport type DismissPullRequestReviewPayload = {\n\t__typename?: \"DismissPullRequestReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The dismissed pull request review. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Specifies a review comment to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewComment = {\n\t/** Path to the file being commented on. */\n\tpath: Scalars[\"String\"];\n\t/** Position in the file to leave a comment on. */\n\tposition: Scalars[\"Int\"];\n\t/** Body of the comment to leave. */\n\tbody: Scalars[\"String\"];\n};\n\n/** Specifies a review comment thread to be left with a Pull Request Review. */\nexport type DraftPullRequestReviewThread = {\n\t/** Path to the file being commented on. */\n\tpath: Scalars[\"String\"];\n\t/** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */\n\tline: Scalars[\"Int\"];\n\t/** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */\n\tside?: Maybe<DiffSide>;\n\t/** The first line of the range to which the comment refers. */\n\tstartLine?: Maybe<Scalars[\"Int\"]>;\n\t/** The side of the diff on which the start line resides. */\n\tstartSide?: Maybe<DiffSide>;\n\t/** Body of the comment to leave. */\n\tbody: Scalars[\"String\"];\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type Enterprise = Node & {\n\t__typename?: \"Enterprise\";\n\t/** A URL pointing to the enterprise's public avatar. */\n\tavatarUrl: Scalars[\"URI\"];\n\t/** Enterprise billing information visible to enterprise billing managers. */\n\tbillingInfo?: Maybe<EnterpriseBillingInfo>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** The description of the enterprise. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** The description of the enterprise as HTML. */\n\tdescriptionHTML: Scalars[\"HTML\"];\n\tid: Scalars[\"ID\"];\n\t/** The location of the enterprise. */\n\tlocation?: Maybe<Scalars[\"String\"]>;\n\t/** A list of users who are members of this enterprise. */\n\tmembers: EnterpriseMemberConnection;\n\t/** The name of the enterprise. */\n\tname: Scalars[\"String\"];\n\t/** A list of organizations that belong to this enterprise. */\n\torganizations: OrganizationConnection;\n\t/** Enterprise information only visible to enterprise owners. */\n\townerInfo?: Maybe<EnterpriseOwnerInfo>;\n\t/** The HTTP path for this enterprise. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The URL-friendly identifier for the enterprise. */\n\tslug: Scalars[\"String\"];\n\t/** The HTTP URL for this enterprise. */\n\turl: Scalars[\"URI\"];\n\t/** A list of user accounts on this enterprise. */\n\tuserAccounts: EnterpriseUserAccountConnection;\n\t/** Is the current viewer an admin of this enterprise? */\n\tviewerIsAdmin: Scalars[\"Boolean\"];\n\t/** The URL of the enterprise website. */\n\twebsiteUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseMembersArgs = {\n\torganizationLogins?: Maybe<Array<Scalars[\"String\"]>>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<EnterpriseMemberOrder>;\n\trole?: Maybe<EnterpriseUserAccountMembershipRole>;\n\tdeployment?: Maybe<EnterpriseUserDeployment>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseOrganizationsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<OrganizationOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account to manage multiple organizations with consolidated policy and billing. */\nexport type EnterpriseUserAccountsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for User. */\nexport type EnterpriseAdministratorConnection = {\n\t__typename?: \"EnterpriseAdministratorConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseAdministratorEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A User who is an administrator of an enterprise. */\nexport type EnterpriseAdministratorEdge = {\n\t__typename?: \"EnterpriseAdministratorEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<User>;\n\t/** The role of the administrator. */\n\trole: EnterpriseAdministratorRole;\n};\n\n/** An invitation for a user to become an owner or billing manager of an enterprise. */\nexport type EnterpriseAdministratorInvitation = Node & {\n\t__typename?: \"EnterpriseAdministratorInvitation\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The email of the person who was invited to the enterprise. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise the invitation is for. */\n\tenterprise: Enterprise;\n\tid: Scalars[\"ID\"];\n\t/** The user who was invited to the enterprise. */\n\tinvitee?: Maybe<User>;\n\t/** The user who created the invitation. */\n\tinviter?: Maybe<User>;\n\t/** The invitee's pending role in the enterprise (owner or billing_manager). */\n\trole: EnterpriseAdministratorRole;\n};\n\n/** The connection type for EnterpriseAdministratorInvitation. */\nexport type EnterpriseAdministratorInvitationConnection = {\n\t__typename?: \"EnterpriseAdministratorInvitationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseAdministratorInvitationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseAdministratorInvitation>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseAdministratorInvitationEdge = {\n\t__typename?: \"EnterpriseAdministratorInvitationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** Ordering options for enterprise administrator invitation connections */\nexport type EnterpriseAdministratorInvitationOrder = {\n\t/** The field to order enterprise administrator invitations by. */\n\tfield: EnterpriseAdministratorInvitationOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which enterprise administrator invitation connections can be ordered. */\nexport enum EnterpriseAdministratorInvitationOrderField {\n\t/** Order enterprise administrator member invitations by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** The possible administrator roles in an enterprise account. */\nexport enum EnterpriseAdministratorRole {\n\t/** Represents an owner of the enterprise account. */\n\tOwner = \"OWNER\",\n\t/** Represents a billing manager of the enterprise account. */\n\tBillingManager = \"BILLING_MANAGER\",\n}\n\n/** Metadata for an audit entry containing enterprise account information. */\nexport type EnterpriseAuditEntryData = {\n\t/** The HTTP path for this enterprise. */\n\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The slug of the enterprise. */\n\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP URL for this enterprise. */\n\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Enterprise billing information visible to enterprise billing managers and owners. */\nexport type EnterpriseBillingInfo = {\n\t__typename?: \"EnterpriseBillingInfo\";\n\t/** The number of licenseable users/emails across the enterprise. */\n\tallLicensableUsersCount: Scalars[\"Int\"];\n\t/** The number of data packs used by all organizations owned by the enterprise. */\n\tassetPacks: Scalars[\"Int\"];\n\t/**\n\t * The number of available seats across all owned organizations based on the unique number of billable users.\n\t * @deprecated `availableSeats` will be replaced with `totalAvailableLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalAvailableLicenses instead. Removal on 2020-01-01 UTC.\n\t */\n\tavailableSeats: Scalars[\"Int\"];\n\t/** The bandwidth quota in GB for all organizations owned by the enterprise. */\n\tbandwidthQuota: Scalars[\"Float\"];\n\t/** The bandwidth usage in GB for all organizations owned by the enterprise. */\n\tbandwidthUsage: Scalars[\"Float\"];\n\t/** The bandwidth usage as a percentage of the bandwidth quota. */\n\tbandwidthUsagePercentage: Scalars[\"Int\"];\n\t/**\n\t * The total seats across all organizations owned by the enterprise.\n\t * @deprecated `seats` will be replaced with `totalLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalLicenses instead. Removal on 2020-01-01 UTC.\n\t */\n\tseats: Scalars[\"Int\"];\n\t/** The storage quota in GB for all organizations owned by the enterprise. */\n\tstorageQuota: Scalars[\"Float\"];\n\t/** The storage usage in GB for all organizations owned by the enterprise. */\n\tstorageUsage: Scalars[\"Float\"];\n\t/** The storage usage as a percentage of the storage quota. */\n\tstorageUsagePercentage: Scalars[\"Int\"];\n\t/** The number of available licenses across all owned organizations based on the unique number of billable users. */\n\ttotalAvailableLicenses: Scalars[\"Int\"];\n\t/** The total number of licenses allocated. */\n\ttotalLicenses: Scalars[\"Int\"];\n};\n\n/** The possible values for the enterprise default repository permission setting. */\nexport enum EnterpriseDefaultRepositoryPermissionSettingValue {\n\t/** Organizations in the enterprise choose default repository permissions for their members. */\n\tNoPolicy = \"NO_POLICY\",\n\t/** Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories. */\n\tAdmin = \"ADMIN\",\n\t/** Organization members will be able to clone, pull, and push all organization repositories. */\n\tWrite = \"WRITE\",\n\t/** Organization members will be able to clone and pull all organization repositories. */\n\tRead = \"READ\",\n\t/** Organization members will only be able to clone and pull public repositories. */\n\tNone = \"NONE\",\n}\n\n/** The possible values for an enabled/disabled enterprise setting. */\nexport enum EnterpriseEnabledDisabledSettingValue {\n\t/** The setting is enabled for organizations in the enterprise. */\n\tEnabled = \"ENABLED\",\n\t/** The setting is disabled for organizations in the enterprise. */\n\tDisabled = \"DISABLED\",\n\t/** There is no policy set for organizations in the enterprise. */\n\tNoPolicy = \"NO_POLICY\",\n}\n\n/** The possible values for an enabled/no policy enterprise setting. */\nexport enum EnterpriseEnabledSettingValue {\n\t/** The setting is enabled for organizations in the enterprise. */\n\tEnabled = \"ENABLED\",\n\t/** There is no policy set for organizations in the enterprise. */\n\tNoPolicy = \"NO_POLICY\",\n}\n\n/** An identity provider configured to provision identities for an enterprise. */\nexport type EnterpriseIdentityProvider = Node & {\n\t__typename?: \"EnterpriseIdentityProvider\";\n\t/** The digest algorithm used to sign SAML requests for the identity provider. */\n\tdigestMethod?: Maybe<SamlDigestAlgorithm>;\n\t/** The enterprise this identity provider belongs to. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** ExternalIdentities provisioned by this identity provider. */\n\texternalIdentities: ExternalIdentityConnection;\n\tid: Scalars[\"ID\"];\n\t/** The x509 certificate used by the identity provider to sign assertions and responses. */\n\tidpCertificate?: Maybe<Scalars[\"X509Certificate\"]>;\n\t/** The Issuer Entity ID for the SAML identity provider. */\n\tissuer?: Maybe<Scalars[\"String\"]>;\n\t/** Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable. */\n\trecoveryCodes?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** The signature algorithm used to sign SAML requests for the identity provider. */\n\tsignatureMethod?: Maybe<SamlSignatureAlgorithm>;\n\t/** The URL endpoint for the identity provider's SAML SSO. */\n\tssoUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An identity provider configured to provision identities for an enterprise. */\nexport type EnterpriseIdentityProviderExternalIdentitiesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An object that is a member of an enterprise. */\nexport type EnterpriseMember = EnterpriseUserAccount | User;\n\n/** The connection type for EnterpriseMember. */\nexport type EnterpriseMemberConnection = {\n\t__typename?: \"EnterpriseMemberConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseMemberEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseMember>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A User who is a member of an enterprise through one or more organizations. */\nexport type EnterpriseMemberEdge = {\n\t__typename?: \"EnterpriseMemberEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/**\n\t * Whether the user does not have a license for the enterprise.\n\t * @deprecated All members consume a license Removal on 2021-01-01 UTC.\n\t */\n\tisUnlicensed: Scalars[\"Boolean\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseMember>;\n};\n\n/** Ordering options for enterprise member connections. */\nexport type EnterpriseMemberOrder = {\n\t/** The field to order enterprise members by. */\n\tfield: EnterpriseMemberOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which enterprise member connections can be ordered. */\nexport enum EnterpriseMemberOrderField {\n\t/** Order enterprise members by login */\n\tLogin = \"LOGIN\",\n\t/** Order enterprise members by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** The possible values for the enterprise members can create repositories setting. */\nexport enum EnterpriseMembersCanCreateRepositoriesSettingValue {\n\t/** Organization administrators choose whether to allow members to create repositories. */\n\tNoPolicy = \"NO_POLICY\",\n\t/** Members will be able to create public and private repositories. */\n\tAll = \"ALL\",\n\t/** Members will be able to create only public repositories. */\n\tPublic = \"PUBLIC\",\n\t/** Members will be able to create only private repositories. */\n\tPrivate = \"PRIVATE\",\n\t/** Members will not be able to create public or private repositories. */\n\tDisabled = \"DISABLED\",\n}\n\n/** The possible values for the members can make purchases setting. */\nexport enum EnterpriseMembersCanMakePurchasesSettingValue {\n\t/** The setting is enabled for organizations in the enterprise. */\n\tEnabled = \"ENABLED\",\n\t/** The setting is disabled for organizations in the enterprise. */\n\tDisabled = \"DISABLED\",\n}\n\n/** The connection type for Organization. */\nexport type EnterpriseOrganizationMembershipConnection = {\n\t__typename?: \"EnterpriseOrganizationMembershipConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseOrganizationMembershipEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Organization>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An enterprise organization that a user is a member of. */\nexport type EnterpriseOrganizationMembershipEdge = {\n\t__typename?: \"EnterpriseOrganizationMembershipEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Organization>;\n\t/** The role of the user in the enterprise membership. */\n\trole: EnterpriseUserAccountMembershipRole;\n};\n\n/** The connection type for User. */\nexport type EnterpriseOutsideCollaboratorConnection = {\n\t__typename?: \"EnterpriseOutsideCollaboratorConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseOutsideCollaboratorEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdge = {\n\t__typename?: \"EnterpriseOutsideCollaboratorEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/**\n\t * Whether the outside collaborator does not have a license for the enterprise.\n\t * @deprecated All outside collaborators consume a license Removal on 2021-01-01 UTC.\n\t */\n\tisUnlicensed: Scalars[\"Boolean\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<User>;\n\t/** The enterprise organization repositories this user is a member of. */\n\trepositories: EnterpriseRepositoryInfoConnection;\n};\n\n/** A User who is an outside collaborator of an enterprise through one or more organizations. */\nexport type EnterpriseOutsideCollaboratorEdgeRepositoriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<RepositoryOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfo = {\n\t__typename?: \"EnterpriseOwnerInfo\";\n\t/** A list of enterprise organizations configured with the provided action execution capabilities setting value. */\n\tactionExecutionCapabilitySettingOrganizations: OrganizationConnection;\n\t/** A list of all of the administrators for this enterprise. */\n\tadmins: EnterpriseAdministratorConnection;\n\t/** A list of users in the enterprise who currently have two-factor authentication disabled. */\n\taffiliatedUsersWithTwoFactorDisabled: UserConnection;\n\t/** Whether or not affiliated users with two-factor authentication disabled exist in the enterprise. */\n\taffiliatedUsersWithTwoFactorDisabledExist: Scalars[\"Boolean\"];\n\t/** The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise. */\n\tallowPrivateRepositoryForkingSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided private repository forking setting value. */\n\tallowPrivateRepositoryForkingSettingOrganizations: OrganizationConnection;\n\t/** The setting value for base repository permissions for organizations in this enterprise. */\n\tdefaultRepositoryPermissionSetting: EnterpriseDefaultRepositoryPermissionSettingValue;\n\t/** A list of enterprise organizations configured with the provided default repository permission. */\n\tdefaultRepositoryPermissionSettingOrganizations: OrganizationConnection;\n\t/** Enterprise Server installations owned by the enterprise. */\n\tenterpriseServerInstallations: EnterpriseServerInstallationConnection;\n\t/** The setting value for whether the enterprise has an IP allow list enabled. */\n\tipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n\t/** The IP addresses that are allowed to access resources owned by the enterprise. */\n\tipAllowListEntries: IpAllowListEntryConnection;\n\t/** Whether or not the default repository permission is currently being updated. */\n\tisUpdatingDefaultRepositoryPermission: Scalars[\"Boolean\"];\n\t/** Whether the two-factor authentication requirement is currently being enforced. */\n\tisUpdatingTwoFactorRequirement: Scalars[\"Boolean\"];\n\t/** The setting value for whether organization members with admin permissions on a repository can change repository visibility. */\n\tmembersCanChangeRepositoryVisibilitySetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided can change repository visibility setting value. */\n\tmembersCanChangeRepositoryVisibilitySettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether members of organizations in the enterprise can create internal repositories. */\n\tmembersCanCreateInternalRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The setting value for whether members of organizations in the enterprise can create private repositories. */\n\tmembersCanCreatePrivateRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The setting value for whether members of organizations in the enterprise can create public repositories. */\n\tmembersCanCreatePublicRepositoriesSetting?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The setting value for whether members of organizations in the enterprise can create repositories. */\n\tmembersCanCreateRepositoriesSetting?: Maybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n\t/** A list of enterprise organizations configured with the provided repository creation setting value. */\n\tmembersCanCreateRepositoriesSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether members with admin permissions for repositories can delete issues. */\n\tmembersCanDeleteIssuesSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided members can delete issues setting value. */\n\tmembersCanDeleteIssuesSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether members with admin permissions for repositories can delete or transfer repositories. */\n\tmembersCanDeleteRepositoriesSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided members can delete repositories setting value. */\n\tmembersCanDeleteRepositoriesSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether members of organizations in the enterprise can invite outside collaborators. */\n\tmembersCanInviteCollaboratorsSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided members can invite collaborators setting value. */\n\tmembersCanInviteCollaboratorsSettingOrganizations: OrganizationConnection;\n\t/** Indicates whether members of this enterprise's organizations can purchase additional services for those organizations. */\n\tmembersCanMakePurchasesSetting: EnterpriseMembersCanMakePurchasesSettingValue;\n\t/** The setting value for whether members with admin permissions for repositories can update protected branches. */\n\tmembersCanUpdateProtectedBranchesSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided members can update protected branches setting value. */\n\tmembersCanUpdateProtectedBranchesSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether members can view dependency insights. */\n\tmembersCanViewDependencyInsightsSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided members can view dependency insights setting value. */\n\tmembersCanViewDependencyInsightsSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether organization projects are enabled for organizations in this enterprise. */\n\torganizationProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided organization projects setting value. */\n\torganizationProjectsSettingOrganizations: OrganizationConnection;\n\t/** A list of outside collaborators across the repositories in the enterprise. */\n\toutsideCollaborators: EnterpriseOutsideCollaboratorConnection;\n\t/** A list of pending administrator invitations for the enterprise. */\n\tpendingAdminInvitations: EnterpriseAdministratorInvitationConnection;\n\t/** A list of pending collaborator invitations across the repositories in the enterprise. */\n\tpendingCollaboratorInvitations: RepositoryInvitationConnection;\n\t/**\n\t * A list of pending collaborators across the repositories in the enterprise.\n\t * @deprecated Repository invitations can now be associated with an email, not only an invitee. Use the `pendingCollaboratorInvitations` field instead. Removal on 2020-10-01 UTC.\n\t */\n\tpendingCollaborators: EnterprisePendingCollaboratorConnection;\n\t/** A list of pending member invitations for organizations in the enterprise. */\n\tpendingMemberInvitations: EnterprisePendingMemberInvitationConnection;\n\t/** The setting value for whether repository projects are enabled in this enterprise. */\n\trepositoryProjectsSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided repository projects setting value. */\n\trepositoryProjectsSettingOrganizations: OrganizationConnection;\n\t/** The SAML Identity Provider for the enterprise. */\n\tsamlIdentityProvider?: Maybe<EnterpriseIdentityProvider>;\n\t/** A list of enterprise organizations configured with the SAML single sign-on setting value. */\n\tsamlIdentityProviderSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether team discussions are enabled for organizations in this enterprise. */\n\tteamDiscussionsSetting: EnterpriseEnabledDisabledSettingValue;\n\t/** A list of enterprise organizations configured with the provided team discussions setting value. */\n\tteamDiscussionsSettingOrganizations: OrganizationConnection;\n\t/** The setting value for whether the enterprise requires two-factor authentication for its organizations and users. */\n\ttwoFactorRequiredSetting: EnterpriseEnabledSettingValue;\n\t/** A list of enterprise organizations configured with the two-factor authentication setting value. */\n\ttwoFactorRequiredSettingOrganizations: OrganizationConnection;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoActionExecutionCapabilitySettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAdminsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\trole?: Maybe<EnterpriseAdministratorRole>;\n\torderBy?: Maybe<EnterpriseMemberOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAffiliatedUsersWithTwoFactorDisabledArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoAllowPrivateRepositoryForkingSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoDefaultRepositoryPermissionSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: DefaultRepositoryPermissionField;\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoEnterpriseServerInstallationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tconnectedOnly?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<EnterpriseServerInstallationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoIpAllowListEntriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<IpAllowListEntryOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanChangeRepositoryVisibilitySettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanCreateRepositoriesSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: OrganizationMembersCanCreateRepositoriesSettingValue;\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanDeleteIssuesSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanDeleteRepositoriesSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanInviteCollaboratorsSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanUpdateProtectedBranchesSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoMembersCanViewDependencyInsightsSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoOrganizationProjectsSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoOutsideCollaboratorsArgs = {\n\tlogin?: Maybe<Scalars[\"String\"]>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<EnterpriseMemberOrder>;\n\tvisibility?: Maybe<RepositoryVisibility>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingAdminInvitationsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<EnterpriseAdministratorInvitationOrder>;\n\trole?: Maybe<EnterpriseAdministratorRole>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingCollaboratorInvitationsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<RepositoryInvitationOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingCollaboratorsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<RepositoryInvitationOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoPendingMemberInvitationsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoRepositoryProjectsSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoSamlIdentityProviderSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: IdentityProviderConfigurationState;\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoTeamDiscussionsSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** Enterprise information only visible to enterprise owners. */\nexport type EnterpriseOwnerInfoTwoFactorRequiredSettingOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tvalue: Scalars[\"Boolean\"];\n\torderBy?: Maybe<OrganizationOrder>;\n};\n\n/** The connection type for User. */\nexport type EnterprisePendingCollaboratorConnection = {\n\t__typename?: \"EnterprisePendingCollaboratorConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterprisePendingCollaboratorEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise. */\nexport type EnterprisePendingCollaboratorEdge = {\n\t__typename?: \"EnterprisePendingCollaboratorEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/**\n\t * Whether the invited collaborator does not have a license for the enterprise.\n\t * @deprecated All pending collaborators consume a license Removal on 2021-01-01 UTC.\n\t */\n\tisUnlicensed: Scalars[\"Boolean\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<User>;\n\t/** The enterprise organization repositories this user is a member of. */\n\trepositories: EnterpriseRepositoryInfoConnection;\n};\n\n/** A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise. */\nexport type EnterprisePendingCollaboratorEdgeRepositoriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<RepositoryOrder>;\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type EnterprisePendingMemberInvitationConnection = {\n\t__typename?: \"EnterprisePendingMemberInvitationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterprisePendingMemberInvitationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** Identifies the total count of unique users in the connection. */\n\ttotalUniqueUserCount: Scalars[\"Int\"];\n};\n\n/** An invitation to be a member in an enterprise organization. */\nexport type EnterprisePendingMemberInvitationEdge = {\n\t__typename?: \"EnterprisePendingMemberInvitationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/**\n\t * Whether the invitation has a license for the enterprise.\n\t * @deprecated All pending members consume a license Removal on 2020-07-01 UTC.\n\t */\n\tisUnlicensed: Scalars[\"Boolean\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<OrganizationInvitation>;\n};\n\n/** A subset of repository information queryable from an enterprise. */\nexport type EnterpriseRepositoryInfo = Node & {\n\t__typename?: \"EnterpriseRepositoryInfo\";\n\tid: Scalars[\"ID\"];\n\t/** Identifies if the repository is private. */\n\tisPrivate: Scalars[\"Boolean\"];\n\t/** The repository's name. */\n\tname: Scalars[\"String\"];\n\t/** The repository's name with owner. */\n\tnameWithOwner: Scalars[\"String\"];\n};\n\n/** The connection type for EnterpriseRepositoryInfo. */\nexport type EnterpriseRepositoryInfoConnection = {\n\t__typename?: \"EnterpriseRepositoryInfoConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseRepositoryInfoEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseRepositoryInfo>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseRepositoryInfoEdge = {\n\t__typename?: \"EnterpriseRepositoryInfoEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseRepositoryInfo>;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallation = Node & {\n\t__typename?: \"EnterpriseServerInstallation\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The customer name to which the Enterprise Server installation belongs. */\n\tcustomerName: Scalars[\"String\"];\n\t/** The host name of the Enterprise Server installation. */\n\thostName: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect. */\n\tisConnected: Scalars[\"Boolean\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** User accounts on this Enterprise Server installation. */\n\tuserAccounts: EnterpriseServerUserAccountConnection;\n\t/** User accounts uploads for the Enterprise Server installation. */\n\tuserAccountsUploads: EnterpriseServerUserAccountsUploadConnection;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsArgs = {\n\torderBy?: Maybe<EnterpriseServerUserAccountOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Enterprise Server installation. */\nexport type EnterpriseServerInstallationUserAccountsUploadsArgs = {\n\torderBy?: Maybe<EnterpriseServerUserAccountsUploadOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for EnterpriseServerInstallation. */\nexport type EnterpriseServerInstallationConnection = {\n\t__typename?: \"EnterpriseServerInstallationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseServerInstallationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseServerInstallation>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerInstallationEdge = {\n\t__typename?: \"EnterpriseServerInstallationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseServerInstallation>;\n};\n\n/** Ordering options for Enterprise Server installation connections. */\nexport type EnterpriseServerInstallationOrder = {\n\t/** The field to order Enterprise Server installations by. */\n\tfield: EnterpriseServerInstallationOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which Enterprise Server installation connections can be ordered. */\nexport enum EnterpriseServerInstallationOrderField {\n\t/** Order Enterprise Server installations by host name */\n\tHostName = \"HOST_NAME\",\n\t/** Order Enterprise Server installations by customer name */\n\tCustomerName = \"CUSTOMER_NAME\",\n\t/** Order Enterprise Server installations by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccount = Node & {\n\t__typename?: \"EnterpriseServerUserAccount\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** User emails belonging to this user account. */\n\temails: EnterpriseServerUserAccountEmailConnection;\n\t/** The Enterprise Server installation on which this user account exists. */\n\tenterpriseServerInstallation: EnterpriseServerInstallation;\n\tid: Scalars[\"ID\"];\n\t/** Whether the user account is a site administrator on the Enterprise Server installation. */\n\tisSiteAdmin: Scalars[\"Boolean\"];\n\t/** The login of the user account on the Enterprise Server installation. */\n\tlogin: Scalars[\"String\"];\n\t/** The profile name of the user account on the Enterprise Server installation. */\n\tprofileName?: Maybe<Scalars[\"String\"]>;\n\t/** The date and time when the user account was created on the Enterprise Server installation. */\n\tremoteCreatedAt: Scalars[\"DateTime\"];\n\t/** The ID of the user account on the Enterprise Server installation. */\n\tremoteUserId: Scalars[\"Int\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** A user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmailsArgs = {\n\torderBy?: Maybe<EnterpriseServerUserAccountEmailOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for EnterpriseServerUserAccount. */\nexport type EnterpriseServerUserAccountConnection = {\n\t__typename?: \"EnterpriseServerUserAccountConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseServerUserAccount>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEdge = {\n\t__typename?: \"EnterpriseServerUserAccountEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseServerUserAccount>;\n};\n\n/** An email belonging to a user account on an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountEmail = Node & {\n\t__typename?: \"EnterpriseServerUserAccountEmail\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The email address. */\n\temail: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** Indicates whether this is the primary email of the associated user account. */\n\tisPrimary: Scalars[\"Boolean\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The user account to which the email belongs. */\n\tuserAccount: EnterpriseServerUserAccount;\n};\n\n/** The connection type for EnterpriseServerUserAccountEmail. */\nexport type EnterpriseServerUserAccountEmailConnection = {\n\t__typename?: \"EnterpriseServerUserAccountEmailConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmailEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountEmail>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountEmailEdge = {\n\t__typename?: \"EnterpriseServerUserAccountEmailEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseServerUserAccountEmail>;\n};\n\n/** Ordering options for Enterprise Server user account email connections. */\nexport type EnterpriseServerUserAccountEmailOrder = {\n\t/** The field to order emails by. */\n\tfield: EnterpriseServerUserAccountEmailOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which Enterprise Server user account email connections can be ordered. */\nexport enum EnterpriseServerUserAccountEmailOrderField {\n\t/** Order emails by email */\n\tEmail = \"EMAIL\",\n}\n\n/** Ordering options for Enterprise Server user account connections. */\nexport type EnterpriseServerUserAccountOrder = {\n\t/** The field to order user accounts by. */\n\tfield: EnterpriseServerUserAccountOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which Enterprise Server user account connections can be ordered. */\nexport enum EnterpriseServerUserAccountOrderField {\n\t/** Order user accounts by login */\n\tLogin = \"LOGIN\",\n\t/** Order user accounts by creation time on the Enterprise Server installation */\n\tRemoteCreatedAt = \"REMOTE_CREATED_AT\",\n}\n\n/** A user accounts upload from an Enterprise Server installation. */\nexport type EnterpriseServerUserAccountsUpload = Node & {\n\t__typename?: \"EnterpriseServerUserAccountsUpload\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The enterprise to which this upload belongs. */\n\tenterprise: Enterprise;\n\t/** The Enterprise Server installation for which this upload was generated. */\n\tenterpriseServerInstallation: EnterpriseServerInstallation;\n\tid: Scalars[\"ID\"];\n\t/** The name of the file uploaded. */\n\tname: Scalars[\"String\"];\n\t/** The synchronization state of the upload */\n\tsyncState: EnterpriseServerUserAccountsUploadSyncState;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for EnterpriseServerUserAccountsUpload. */\nexport type EnterpriseServerUserAccountsUploadConnection = {\n\t__typename?: \"EnterpriseServerUserAccountsUploadConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUploadEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseServerUserAccountsUpload>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseServerUserAccountsUploadEdge = {\n\t__typename?: \"EnterpriseServerUserAccountsUploadEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseServerUserAccountsUpload>;\n};\n\n/** Ordering options for Enterprise Server user accounts upload connections. */\nexport type EnterpriseServerUserAccountsUploadOrder = {\n\t/** The field to order user accounts uploads by. */\n\tfield: EnterpriseServerUserAccountsUploadOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which Enterprise Server user accounts upload connections can be ordered. */\nexport enum EnterpriseServerUserAccountsUploadOrderField {\n\t/** Order user accounts uploads by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Synchronization state of the Enterprise Server user accounts upload */\nexport enum EnterpriseServerUserAccountsUploadSyncState {\n\t/** The synchronization of the upload is pending. */\n\tPending = \"PENDING\",\n\t/** The synchronization of the upload succeeded. */\n\tSuccess = \"SUCCESS\",\n\t/** The synchronization of the upload failed. */\n\tFailure = \"FAILURE\",\n}\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccount = Node &\n\tActor & {\n\t\t__typename?: \"EnterpriseUserAccount\";\n\t\t/** A URL pointing to the enterprise user account's public avatar. */\n\t\tavatarUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** The enterprise in which this user account exists. */\n\t\tenterprise: Enterprise;\n\t\tid: Scalars[\"ID\"];\n\t\t/** An identifier for the enterprise user account, a login or email address */\n\t\tlogin: Scalars[\"String\"];\n\t\t/** The name of the enterprise user account */\n\t\tname?: Maybe<Scalars[\"String\"]>;\n\t\t/** A list of enterprise organizations this user is a member of. */\n\t\torganizations: EnterpriseOrganizationMembershipConnection;\n\t\t/** The HTTP path for this user. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this user. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** The user within the enterprise. */\n\t\tuser?: Maybe<User>;\n\t};\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */\nexport type EnterpriseUserAccountOrganizationsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<OrganizationOrder>;\n\trole?: Maybe<EnterpriseUserAccountMembershipRole>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for EnterpriseUserAccount. */\nexport type EnterpriseUserAccountConnection = {\n\t__typename?: \"EnterpriseUserAccountConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<EnterpriseUserAccountEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<EnterpriseUserAccount>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type EnterpriseUserAccountEdge = {\n\t__typename?: \"EnterpriseUserAccountEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<EnterpriseUserAccount>;\n};\n\n/** The possible roles for enterprise membership. */\nexport enum EnterpriseUserAccountMembershipRole {\n\t/** The user is a member of the enterprise membership. */\n\tMember = \"MEMBER\",\n\t/** The user is an owner of the enterprise membership. */\n\tOwner = \"OWNER\",\n}\n\n/** The possible GitHub Enterprise deployments where this user can exist. */\nexport enum EnterpriseUserDeployment {\n\t/** The user is part of a GitHub Enterprise Cloud deployment. */\n\tCloud = \"CLOUD\",\n\t/** The user is part of a GitHub Enterprise Server deployment. */\n\tServer = \"SERVER\",\n}\n\n/** An external identity provisioned by SAML SSO or SCIM. */\nexport type ExternalIdentity = Node & {\n\t__typename?: \"ExternalIdentity\";\n\t/** The GUID for this identity */\n\tguid: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** Organization invitation for this SCIM-provisioned external identity */\n\torganizationInvitation?: Maybe<OrganizationInvitation>;\n\t/** SAML Identity attributes */\n\tsamlIdentity?: Maybe<ExternalIdentitySamlAttributes>;\n\t/** SCIM Identity attributes */\n\tscimIdentity?: Maybe<ExternalIdentityScimAttributes>;\n\t/** User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member. */\n\tuser?: Maybe<User>;\n};\n\n/** The connection type for ExternalIdentity. */\nexport type ExternalIdentityConnection = {\n\t__typename?: \"ExternalIdentityConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ExternalIdentityEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ExternalIdentity>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ExternalIdentityEdge = {\n\t__typename?: \"ExternalIdentityEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ExternalIdentity>;\n};\n\n/** SAML attributes for the External Identity */\nexport type ExternalIdentitySamlAttributes = {\n\t__typename?: \"ExternalIdentitySamlAttributes\";\n\t/** The NameID of the SAML identity */\n\tnameId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** SCIM attributes for the External Identity */\nexport type ExternalIdentityScimAttributes = {\n\t__typename?: \"ExternalIdentityScimAttributes\";\n\t/** The userName of the SCIM identity */\n\tusername?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of FollowUser */\nexport type FollowUserInput = {\n\t/** ID of the user to follow. */\n\tuserId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of FollowUser */\nexport type FollowUserPayload = {\n\t__typename?: \"FollowUserPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The user that was followed. */\n\tuser?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type FollowerConnection = {\n\t__typename?: \"FollowerConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<UserEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** The connection type for User. */\nexport type FollowingConnection = {\n\t__typename?: \"FollowingConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<UserEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A funding platform link for a repository. */\nexport type FundingLink = {\n\t__typename?: \"FundingLink\";\n\t/** The funding platform this link is for. */\n\tplatform: FundingPlatform;\n\t/** The configured URL for this funding link. */\n\turl: Scalars[\"URI\"];\n};\n\n/** The possible funding platforms for repository funding links. */\nexport enum FundingPlatform {\n\t/** GitHub funding platform. */\n\tGithub = \"GITHUB\",\n\t/** Patreon funding platform. */\n\tPatreon = \"PATREON\",\n\t/** Open Collective funding platform. */\n\tOpenCollective = \"OPEN_COLLECTIVE\",\n\t/** Ko-fi funding platform. */\n\tKoFi = \"KO_FI\",\n\t/** Tidelift funding platform. */\n\tTidelift = \"TIDELIFT\",\n\t/** Community Bridge funding platform. */\n\tCommunityBridge = \"COMMUNITY_BRIDGE\",\n\t/** Liberapay funding platform. */\n\tLiberapay = \"LIBERAPAY\",\n\t/** IssueHunt funding platform. */\n\tIssuehunt = \"ISSUEHUNT\",\n\t/** Otechie funding platform. */\n\tOtechie = \"OTECHIE\",\n\t/** Custom funding platform. */\n\tCustom = \"CUSTOM\",\n}\n\n/** A generic hovercard context with a message and icon */\nexport type GenericHovercardContext = HovercardContext & {\n\t__typename?: \"GenericHovercardContext\";\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n};\n\n/** A Gist. */\nexport type Gist = Node &\n\tStarrable &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Gist\";\n\t\t/** A list of comments associated with the gist */\n\t\tcomments: GistCommentConnection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** The gist description. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** The files in this gist. */\n\t\tfiles?: Maybe<Array<Maybe<GistFile>>>;\n\t\t/** A list of forks associated with the gist */\n\t\tforks: GistConnection;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Identifies if the gist is a fork. */\n\t\tisFork: Scalars[\"Boolean\"];\n\t\t/** Whether the gist is public or not. */\n\t\tisPublic: Scalars[\"Boolean\"];\n\t\t/** The gist name. */\n\t\tname: Scalars[\"String\"];\n\t\t/** The gist owner. */\n\t\towner?: Maybe<RepositoryOwner>;\n\t\t/** Identifies when the gist was last pushed to. */\n\t\tpushedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** The HTML path to this resource. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** A list of users who have starred this starrable. */\n\t\tstargazers: StargazerConnection;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this Gist. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Returns a boolean indicating whether the viewing user has starred this starrable. */\n\t\tviewerHasStarred: Scalars[\"Boolean\"];\n\t};\n\n/** A Gist. */\nexport type GistCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A Gist. */\nexport type GistFilesArgs = {\n\tlimit?: Maybe<Scalars[\"Int\"]>;\n\toid?: Maybe<Scalars[\"GitObjectID\"]>;\n};\n\n/** A Gist. */\nexport type GistForksArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<GistOrder>;\n};\n\n/** A Gist. */\nexport type GistStargazersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<StarOrder>;\n};\n\n/** Represents a comment on an Gist. */\nexport type GistComment = Node &\n\tComment &\n\tDeletable &\n\tMinimizable &\n\tUpdatable &\n\tUpdatableComment & {\n\t\t__typename?: \"GistComment\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the gist. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** Identifies the comment body. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\t/** The associated gist. */\n\t\tgist: Gist;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not a comment has been minimized. */\n\t\tisMinimized: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Returns why the comment was minimized. */\n\t\tminimizedReason?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can minimize this object. */\n\t\tviewerCanMinimize: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** Represents a comment on an Gist. */\nexport type GistCommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for GistComment. */\nexport type GistCommentConnection = {\n\t__typename?: \"GistCommentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<GistCommentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<GistComment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type GistCommentEdge = {\n\t__typename?: \"GistCommentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<GistComment>;\n};\n\n/** The connection type for Gist. */\nexport type GistConnection = {\n\t__typename?: \"GistConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<GistEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Gist>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type GistEdge = {\n\t__typename?: \"GistEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Gist>;\n};\n\n/** A file in a gist. */\nexport type GistFile = {\n\t__typename?: \"GistFile\";\n\t/** The file name encoded to remove characters that are invalid in URL paths. */\n\tencodedName?: Maybe<Scalars[\"String\"]>;\n\t/** The gist file encoding. */\n\tencoding?: Maybe<Scalars[\"String\"]>;\n\t/** The file extension from the file name. */\n\textension?: Maybe<Scalars[\"String\"]>;\n\t/** Indicates if this file is an image. */\n\tisImage: Scalars[\"Boolean\"];\n\t/** Whether the file's contents were truncated. */\n\tisTruncated: Scalars[\"Boolean\"];\n\t/** The programming language this file is written in. */\n\tlanguage?: Maybe<Language>;\n\t/** The gist file name. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** The gist file size in bytes. */\n\tsize?: Maybe<Scalars[\"Int\"]>;\n\t/** UTF8 text data or null if the file is binary */\n\ttext?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A file in a gist. */\nexport type GistFileTextArgs = {\n\ttruncate?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Ordering options for gist connections */\nexport type GistOrder = {\n\t/** The field to order repositories by. */\n\tfield: GistOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which gist connections can be ordered. */\nexport enum GistOrderField {\n\t/** Order gists by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order gists by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order gists by push time */\n\tPushedAt = \"PUSHED_AT\",\n}\n\n/** The privacy of a Gist */\nexport enum GistPrivacy {\n\t/** Public */\n\tPublic = \"PUBLIC\",\n\t/** Secret */\n\tSecret = \"SECRET\",\n\t/** Gists that are public and secret */\n\tAll = \"ALL\",\n}\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActor = {\n\t__typename?: \"GitActor\";\n\t/** A URL pointing to the author's public avatar. */\n\tavatarUrl: Scalars[\"URI\"];\n\t/** The timestamp of the Git action (authoring or committing). */\n\tdate?: Maybe<Scalars[\"GitTimestamp\"]>;\n\t/** The email in the Git commit. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\t/** The name in the Git commit. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** The GitHub user corresponding to the email field. Null if no such user exists. */\n\tuser?: Maybe<User>;\n};\n\n/** Represents an actor in a Git commit (ie. an author or committer). */\nexport type GitActorAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents information about the GitHub instance. */\nexport type GitHubMetadata = {\n\t__typename?: \"GitHubMetadata\";\n\t/** Returns a String that's a SHA of `github-services` */\n\tgitHubServicesSha: Scalars[\"GitObjectID\"];\n\t/** IP addresses that users connect to for git operations */\n\tgitIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** IP addresses that service hooks are sent from */\n\thookIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** IP addresses that the importer connects from */\n\timporterIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** Whether or not users are verified */\n\tisPasswordAuthenticationVerifiable: Scalars[\"Boolean\"];\n\t/** IP addresses for GitHub Pages' A records */\n\tpagesIpAddresses?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Represents a Git object. */\nexport type GitObject = {\n\t/** An abbreviated version of the Git object ID */\n\tabbreviatedOid: Scalars[\"String\"];\n\t/** The HTTP path for this Git object */\n\tcommitResourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this Git object */\n\tcommitUrl: Scalars[\"URI\"];\n\tid: Scalars[\"ID\"];\n\t/** The Git object ID */\n\toid: Scalars[\"GitObjectID\"];\n\t/** The Repository the Git object belongs to */\n\trepository: Repository;\n};\n\n/** Information about a signature (GPG or S/MIME) on a Commit or Tag. */\nexport type GitSignature = {\n\t/** Email used to sign this object. */\n\temail: Scalars[\"String\"];\n\t/** True if the signature is valid and verified by GitHub. */\n\tisValid: Scalars[\"Boolean\"];\n\t/** Payload for GPG signing object. Raw ODB object without the signature header. */\n\tpayload: Scalars[\"String\"];\n\t/** ASCII-armored signature header from object. */\n\tsignature: Scalars[\"String\"];\n\t/** GitHub user corresponding to the email signing this commit. */\n\tsigner?: Maybe<User>;\n\t/** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n\tstate: GitSignatureState;\n\t/** True if the signature was made with GitHub's signing key. */\n\twasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** The state of a Git signature. */\nexport enum GitSignatureState {\n\t/** Valid signature and verified by GitHub */\n\tValid = \"VALID\",\n\t/** Invalid signature */\n\tInvalid = \"INVALID\",\n\t/** Malformed signature */\n\tMalformedSig = \"MALFORMED_SIG\",\n\t/** Key used for signing not known to GitHub */\n\tUnknownKey = \"UNKNOWN_KEY\",\n\t/** Invalid email used for signing */\n\tBadEmail = \"BAD_EMAIL\",\n\t/** Email used for signing unverified on GitHub */\n\tUnverifiedEmail = \"UNVERIFIED_EMAIL\",\n\t/** Email used for signing not known to GitHub */\n\tNoUser = \"NO_USER\",\n\t/** Unknown signature type */\n\tUnknownSigType = \"UNKNOWN_SIG_TYPE\",\n\t/** Unsigned */\n\tUnsigned = \"UNSIGNED\",\n\t/** Internal error - the GPG verification service is unavailable at the moment */\n\tGpgverifyUnavailable = \"GPGVERIFY_UNAVAILABLE\",\n\t/** Internal error - the GPG verification service misbehaved */\n\tGpgverifyError = \"GPGVERIFY_ERROR\",\n\t/** The usage flags for the key that signed this don't allow signing */\n\tNotSigningKey = \"NOT_SIGNING_KEY\",\n\t/** Signing key expired */\n\tExpiredKey = \"EXPIRED_KEY\",\n\t/** Valid signature, pending certificate revocation checking */\n\tOcspPending = \"OCSP_PENDING\",\n\t/** Valid siganture, though certificate revocation check failed */\n\tOcspError = \"OCSP_ERROR\",\n\t/** The signing certificate or its chain could not be verified */\n\tBadCert = \"BAD_CERT\",\n\t/** One or more certificates in chain has been revoked */\n\tOcspRevoked = \"OCSP_REVOKED\",\n}\n\n/** Represents a GPG signature on a Commit or Tag. */\nexport type GpgSignature = GitSignature & {\n\t__typename?: \"GpgSignature\";\n\t/** Email used to sign this object. */\n\temail: Scalars[\"String\"];\n\t/** True if the signature is valid and verified by GitHub. */\n\tisValid: Scalars[\"Boolean\"];\n\t/** Hex-encoded ID of the key that signed this object. */\n\tkeyId?: Maybe<Scalars[\"String\"]>;\n\t/** Payload for GPG signing object. Raw ODB object without the signature header. */\n\tpayload: Scalars[\"String\"];\n\t/** ASCII-armored signature header from object. */\n\tsignature: Scalars[\"String\"];\n\t/** GitHub user corresponding to the email signing this commit. */\n\tsigner?: Maybe<User>;\n\t/** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n\tstate: GitSignatureState;\n\t/** True if the signature was made with GitHub's signing key. */\n\twasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Represents a 'head_ref_deleted' event on a given pull request. */\nexport type HeadRefDeletedEvent = Node & {\n\t__typename?: \"HeadRefDeletedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the Ref associated with the `head_ref_deleted` event. */\n\theadRef?: Maybe<Ref>;\n\t/** Identifies the name of the Ref associated with the `head_ref_deleted` event. */\n\theadRefName: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n};\n\n/** Represents a 'head_ref_force_pushed' event on a given pull request. */\nexport type HeadRefForcePushedEvent = Node & {\n\t__typename?: \"HeadRefForcePushedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the after commit SHA for the 'head_ref_force_pushed' event. */\n\tafterCommit?: Maybe<Commit>;\n\t/** Identifies the before commit SHA for the 'head_ref_force_pushed' event. */\n\tbeforeCommit?: Maybe<Commit>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n\t/** Identifies the fully qualified ref name for the 'head_ref_force_pushed' event. */\n\tref?: Maybe<Ref>;\n};\n\n/** Represents a 'head_ref_restored' event on a given pull request. */\nexport type HeadRefRestoredEvent = Node & {\n\t__typename?: \"HeadRefRestoredEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n};\n\n/** Detail needed to display a hovercard for a user */\nexport type Hovercard = {\n\t__typename?: \"Hovercard\";\n\t/** Each of the contexts for this hovercard */\n\tcontexts: Array<HovercardContext>;\n};\n\n/** An individual line of a hovercard */\nexport type HovercardContext = {\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n};\n\n/** The possible states in which authentication can be configured with an identity provider. */\nexport enum IdentityProviderConfigurationState {\n\t/** Authentication with an identity provider is configured and enforced. */\n\tEnforced = \"ENFORCED\",\n\t/** Authentication with an identity provider is configured but not enforced. */\n\tConfigured = \"CONFIGURED\",\n\t/** Authentication with an identity provider is not configured. */\n\tUnconfigured = \"UNCONFIGURED\",\n}\n\n/** Autogenerated input type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminInput = {\n\t/** The ID of the enterprise to which you want to invite an administrator. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The login of a user to invite as an administrator. */\n\tinvitee?: Maybe<Scalars[\"String\"]>;\n\t/** The email of the person to invite as an administrator. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\t/** The role of the administrator. */\n\trole?: Maybe<EnterpriseAdministratorRole>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of InviteEnterpriseAdmin */\nexport type InviteEnterpriseAdminPayload = {\n\t__typename?: \"InviteEnterpriseAdminPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The created enterprise administrator invitation. */\n\tinvitation?: Maybe<EnterpriseAdministratorInvitation>;\n};\n\n/** The possible values for the IP allow list enabled setting. */\nexport enum IpAllowListEnabledSettingValue {\n\t/** The setting is enabled for the owner. */\n\tEnabled = \"ENABLED\",\n\t/** The setting is disabled for the owner. */\n\tDisabled = \"DISABLED\",\n}\n\n/** An IP address or range of addresses that is allowed to access an owner's resources. */\nexport type IpAllowListEntry = Node & {\n\t__typename?: \"IpAllowListEntry\";\n\t/** A single IP address or range of IP addresses in CIDR notation. */\n\tallowListValue: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Whether the entry is currently active. */\n\tisActive: Scalars[\"Boolean\"];\n\t/** The name of the IP allow list entry. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** The owner of the IP allow list entry. */\n\towner: IpAllowListOwner;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** The connection type for IpAllowListEntry. */\nexport type IpAllowListEntryConnection = {\n\t__typename?: \"IpAllowListEntryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<IpAllowListEntryEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<IpAllowListEntry>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type IpAllowListEntryEdge = {\n\t__typename?: \"IpAllowListEntryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<IpAllowListEntry>;\n};\n\n/** Ordering options for IP allow list entry connections. */\nexport type IpAllowListEntryOrder = {\n\t/** The field to order IP allow list entries by. */\n\tfield: IpAllowListEntryOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which IP allow list entry connections can be ordered. */\nexport enum IpAllowListEntryOrderField {\n\t/** Order IP allow list entries by creation time. */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order IP allow list entries by the allow list value. */\n\tAllowListValue = \"ALLOW_LIST_VALUE\",\n}\n\n/** Types that can own an IP allow list. */\nexport type IpAllowListOwner = Enterprise | Organization;\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type Issue = Node &\n\tAssignable &\n\tClosable &\n\tComment &\n\tUpdatable &\n\tUpdatableComment &\n\tLabelable &\n\tLockable &\n\tReactable &\n\tRepositoryNode &\n\tSubscribable &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Issue\";\n\t\t/** Reason that the conversation was locked. */\n\t\tactiveLockReason?: Maybe<LockReason>;\n\t\t/** A list of Users assigned to this object. */\n\t\tassignees: UserConnection;\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** Identifies the body of the issue. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** Identifies the body of the issue rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** `true` if the object is closed (definition of closed may depend on type) */\n\t\tclosed: Scalars[\"Boolean\"];\n\t\t/** Identifies the date and time when the object was closed. */\n\t\tclosedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of comments associated with the Issue. */\n\t\tcomments: IssueCommentConnection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\t/** The hovercard information for this issue */\n\t\thovercard: Hovercard;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** A list of labels associated with the object. */\n\t\tlabels?: Maybe<LabelConnection>;\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** `true` if the object is locked */\n\t\tlocked: Scalars[\"Boolean\"];\n\t\t/** Identifies the milestone associated with the issue. */\n\t\tmilestone?: Maybe<Milestone>;\n\t\t/** Identifies the issue number. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** A list of Users that are participating in the Issue conversation. */\n\t\tparticipants: UserConnection;\n\t\t/** List of project cards associated with this issue. */\n\t\tprojectCards: ProjectCardConnection;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path for this issue */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the state of the issue. */\n\t\tstate: IssueState;\n\t\t/**\n\t\t * A list of events, comments, commits, etc. associated with the issue.\n\t\t * @deprecated `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.\n\t\t */\n\t\ttimeline: IssueTimelineConnection;\n\t\t/** A list of events, comments, commits, etc. associated with the issue. */\n\t\ttimelineItems: IssueTimelineItemsConnection;\n\t\t/** Identifies the issue title. */\n\t\ttitle: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this issue */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueAssigneesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueHovercardArgs = {\n\tincludeNotificationContexts?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueLabelsArgs = {\n\torderBy?: Maybe<LabelOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueParticipantsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueProjectCardsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tarchivedStates?: Maybe<Array<Maybe<ProjectCardArchivedState>>>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineArgs = {\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueTimelineItemsArgs = {\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n\tskip?: Maybe<Scalars[\"Int\"]>;\n\titemTypes?: Maybe<Array<IssueTimelineItemsItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */\nexport type IssueUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a comment on an Issue. */\nexport type IssueComment = Node &\n\tComment &\n\tDeletable &\n\tMinimizable &\n\tUpdatable &\n\tUpdatableComment &\n\tReactable &\n\tRepositoryNode & {\n\t\t__typename?: \"IssueComment\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** The body as Markdown. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not a comment has been minimized. */\n\t\tisMinimized: Scalars[\"Boolean\"];\n\t\t/** Identifies the issue associated with the comment. */\n\t\tissue: Issue;\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Returns why the comment was minimized. */\n\t\tminimizedReason?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/**\n\t\t * Returns the pull request associated with the comment, if this comment was made on a\n\t\t * pull request.\n\t\t */\n\t\tpullRequest?: Maybe<PullRequest>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path for this issue comment */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this issue comment */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can minimize this object. */\n\t\tviewerCanMinimize: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** Represents a comment on an Issue. */\nexport type IssueCommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for IssueComment. */\nexport type IssueCommentConnection = {\n\t__typename?: \"IssueCommentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<IssueCommentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<IssueComment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type IssueCommentEdge = {\n\t__typename?: \"IssueCommentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<IssueComment>;\n};\n\n/** The connection type for Issue. */\nexport type IssueConnection = {\n\t__typename?: \"IssueConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<IssueEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Issue>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepository = {\n\t__typename?: \"IssueContributionsByRepository\";\n\t/** The issue contributions. */\n\tcontributions: CreatedIssueContributionConnection;\n\t/** The repository in which the issues were opened. */\n\trepository: Repository;\n};\n\n/** This aggregates issues opened by a user within one repository. */\nexport type IssueContributionsByRepositoryContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type IssueEdge = {\n\t__typename?: \"IssueEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Issue>;\n};\n\n/** Ways in which to filter lists of issues. */\nexport type IssueFilters = {\n\t/** List issues assigned to given name. Pass in `null` for issues with no assigned user, and `*` for issues assigned to any user. */\n\tassignee?: Maybe<Scalars[\"String\"]>;\n\t/** List issues created by given name. */\n\tcreatedBy?: Maybe<Scalars[\"String\"]>;\n\t/** List issues where the list of label names exist on the issue. */\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** List issues where the given name is mentioned in the issue. */\n\tmentioned?: Maybe<Scalars[\"String\"]>;\n\t/** List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its number field. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone. */\n\tmilestone?: Maybe<Scalars[\"String\"]>;\n\t/** List issues that have been updated at or after the given date. */\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n\t/** List issues filtered by the list of states given. */\n\tstates?: Maybe<Array<IssueState>>;\n\t/** List issues subscribed to by viewer. */\n\tviewerSubscribed?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Used for return value of Repository.issueOrPullRequest. */\nexport type IssueOrPullRequest = Issue | PullRequest;\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type IssueOrder = {\n\t/** The field in which to order issues by. */\n\tfield: IssueOrderField;\n\t/** The direction in which to order issues by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which issue connections can be ordered. */\nexport enum IssueOrderField {\n\t/** Order issues by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order issues by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order issues by comment count */\n\tComments = \"COMMENTS\",\n}\n\n/** The possible states of an issue. */\nexport enum IssueState {\n\t/** An issue that is still open */\n\tOpen = \"OPEN\",\n\t/** An issue that has been closed */\n\tClosed = \"CLOSED\",\n}\n\n/** The connection type for IssueTimelineItem. */\nexport type IssueTimelineConnection = {\n\t__typename?: \"IssueTimelineConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<IssueTimelineItemEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<IssueTimelineItem>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItem =\n\t| AssignedEvent\n\t| ClosedEvent\n\t| Commit\n\t| CrossReferencedEvent\n\t| DemilestonedEvent\n\t| IssueComment\n\t| LabeledEvent\n\t| LockedEvent\n\t| MilestonedEvent\n\t| ReferencedEvent\n\t| RenamedTitleEvent\n\t| ReopenedEvent\n\t| SubscribedEvent\n\t| TransferredEvent\n\t| UnassignedEvent\n\t| UnlabeledEvent\n\t| UnlockedEvent\n\t| UnsubscribedEvent\n\t| UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type IssueTimelineItemEdge = {\n\t__typename?: \"IssueTimelineItemEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<IssueTimelineItem>;\n};\n\n/** An item in an issue timeline */\nexport type IssueTimelineItems =\n\t| AddedToProjectEvent\n\t| AssignedEvent\n\t| ClosedEvent\n\t| CommentDeletedEvent\n\t| ConnectedEvent\n\t| ConvertedNoteToIssueEvent\n\t| CrossReferencedEvent\n\t| DemilestonedEvent\n\t| DisconnectedEvent\n\t| IssueComment\n\t| LabeledEvent\n\t| LockedEvent\n\t| MarkedAsDuplicateEvent\n\t| MentionedEvent\n\t| MilestonedEvent\n\t| MovedColumnsInProjectEvent\n\t| PinnedEvent\n\t| ReferencedEvent\n\t| RemovedFromProjectEvent\n\t| RenamedTitleEvent\n\t| ReopenedEvent\n\t| SubscribedEvent\n\t| TransferredEvent\n\t| UnassignedEvent\n\t| UnlabeledEvent\n\t| UnlockedEvent\n\t| UnmarkedAsDuplicateEvent\n\t| UnpinnedEvent\n\t| UnsubscribedEvent\n\t| UserBlockedEvent;\n\n/** The connection type for IssueTimelineItems. */\nexport type IssueTimelineItemsConnection = {\n\t__typename?: \"IssueTimelineItemsConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<IssueTimelineItemsEdge>>>;\n\t/** Identifies the count of items after applying `before` and `after` filters. */\n\tfilteredCount: Scalars[\"Int\"];\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<IssueTimelineItems>>>;\n\t/** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n\tpageCount: Scalars[\"Int\"];\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** Identifies the date and time when the timeline was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** An edge in a connection. */\nexport type IssueTimelineItemsEdge = {\n\t__typename?: \"IssueTimelineItemsEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<IssueTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum IssueTimelineItemsItemType {\n\t/** Represents a comment on an Issue. */\n\tIssueComment = \"ISSUE_COMMENT\",\n\t/** Represents a mention made by one issue or pull request to another. */\n\tCrossReferencedEvent = \"CROSS_REFERENCED_EVENT\",\n\t/** Represents a 'added_to_project' event on a given issue or pull request. */\n\tAddedToProjectEvent = \"ADDED_TO_PROJECT_EVENT\",\n\t/** Represents an 'assigned' event on any assignable object. */\n\tAssignedEvent = \"ASSIGNED_EVENT\",\n\t/** Represents a 'closed' event on any `Closable`. */\n\tClosedEvent = \"CLOSED_EVENT\",\n\t/** Represents a 'comment_deleted' event on a given issue or pull request. */\n\tCommentDeletedEvent = \"COMMENT_DELETED_EVENT\",\n\t/** Represents a 'connected' event on a given issue or pull request. */\n\tConnectedEvent = \"CONNECTED_EVENT\",\n\t/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n\tConvertedNoteToIssueEvent = \"CONVERTED_NOTE_TO_ISSUE_EVENT\",\n\t/** Represents a 'demilestoned' event on a given issue or pull request. */\n\tDemilestonedEvent = \"DEMILESTONED_EVENT\",\n\t/** Represents a 'disconnected' event on a given issue or pull request. */\n\tDisconnectedEvent = \"DISCONNECTED_EVENT\",\n\t/** Represents a 'labeled' event on a given issue or pull request. */\n\tLabeledEvent = \"LABELED_EVENT\",\n\t/** Represents a 'locked' event on a given issue or pull request. */\n\tLockedEvent = \"LOCKED_EVENT\",\n\t/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n\tMarkedAsDuplicateEvent = \"MARKED_AS_DUPLICATE_EVENT\",\n\t/** Represents a 'mentioned' event on a given issue or pull request. */\n\tMentionedEvent = \"MENTIONED_EVENT\",\n\t/** Represents a 'milestoned' event on a given issue or pull request. */\n\tMilestonedEvent = \"MILESTONED_EVENT\",\n\t/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n\tMovedColumnsInProjectEvent = \"MOVED_COLUMNS_IN_PROJECT_EVENT\",\n\t/** Represents a 'pinned' event on a given issue or pull request. */\n\tPinnedEvent = \"PINNED_EVENT\",\n\t/** Represents a 'referenced' event on a given `ReferencedSubject`. */\n\tReferencedEvent = \"REFERENCED_EVENT\",\n\t/** Represents a 'removed_from_project' event on a given issue or pull request. */\n\tRemovedFromProjectEvent = \"REMOVED_FROM_PROJECT_EVENT\",\n\t/** Represents a 'renamed' event on a given issue or pull request */\n\tRenamedTitleEvent = \"RENAMED_TITLE_EVENT\",\n\t/** Represents a 'reopened' event on any `Closable`. */\n\tReopenedEvent = \"REOPENED_EVENT\",\n\t/** Represents a 'subscribed' event on a given `Subscribable`. */\n\tSubscribedEvent = \"SUBSCRIBED_EVENT\",\n\t/** Represents a 'transferred' event on a given issue or pull request. */\n\tTransferredEvent = \"TRANSFERRED_EVENT\",\n\t/** Represents an 'unassigned' event on any assignable object. */\n\tUnassignedEvent = \"UNASSIGNED_EVENT\",\n\t/** Represents an 'unlabeled' event on a given issue or pull request. */\n\tUnlabeledEvent = \"UNLABELED_EVENT\",\n\t/** Represents an 'unlocked' event on a given issue or pull request. */\n\tUnlockedEvent = \"UNLOCKED_EVENT\",\n\t/** Represents a 'user_blocked' event on a given user. */\n\tUserBlockedEvent = \"USER_BLOCKED_EVENT\",\n\t/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n\tUnmarkedAsDuplicateEvent = \"UNMARKED_AS_DUPLICATE_EVENT\",\n\t/** Represents an 'unpinned' event on a given issue or pull request. */\n\tUnpinnedEvent = \"UNPINNED_EVENT\",\n\t/** Represents an 'unsubscribed' event on a given `Subscribable`. */\n\tUnsubscribedEvent = \"UNSUBSCRIBED_EVENT\",\n}\n\n/** Represents a user signing up for a GitHub account. */\nexport type JoinedGitHubContribution = Contribution & {\n\t__typename?: \"JoinedGitHubContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** A label for categorizing Issues or Milestones with a given Repository. */\nexport type Label = Node & {\n\t__typename?: \"Label\";\n\t/** Identifies the label color. */\n\tcolor: Scalars[\"String\"];\n\t/** Identifies the date and time when the label was created. */\n\tcreatedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** A brief description of this label. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** Indicates whether or not this is a default label. */\n\tisDefault: Scalars[\"Boolean\"];\n\t/** A list of issues associated with this label. */\n\tissues: IssueConnection;\n\t/** Identifies the label name. */\n\tname: Scalars[\"String\"];\n\t/** A list of pull requests associated with this label. */\n\tpullRequests: PullRequestConnection;\n\t/** The repository associated with this label. */\n\trepository: Repository;\n\t/** The HTTP path for this label. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** Identifies the date and time when the label was last updated. */\n\tupdatedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** The HTTP URL for this label. */\n\turl: Scalars[\"URI\"];\n};\n\n/** A label for categorizing Issues or Milestones with a given Repository. */\nexport type LabelIssuesArgs = {\n\torderBy?: Maybe<IssueOrder>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\tstates?: Maybe<Array<IssueState>>;\n\tfilterBy?: Maybe<IssueFilters>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A label for categorizing Issues or Milestones with a given Repository. */\nexport type LabelPullRequestsArgs = {\n\tstates?: Maybe<Array<PullRequestState>>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\theadRefName?: Maybe<Scalars[\"String\"]>;\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<IssueOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Label. */\nexport type LabelConnection = {\n\t__typename?: \"LabelConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<LabelEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Label>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type LabelEdge = {\n\t__typename?: \"LabelEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Label>;\n};\n\n/** Ways in which lists of labels can be ordered upon return. */\nexport type LabelOrder = {\n\t/** The field in which to order labels by. */\n\tfield: LabelOrderField;\n\t/** The direction in which to order labels by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which label connections can be ordered. */\nexport enum LabelOrderField {\n\t/** Order labels by name  */\n\tName = \"NAME\",\n\t/** Order labels by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** An object that can have labels assigned to it. */\nexport type Labelable = {\n\t/** A list of labels associated with the object. */\n\tlabels?: Maybe<LabelConnection>;\n};\n\n/** An object that can have labels assigned to it. */\nexport type LabelableLabelsArgs = {\n\torderBy?: Maybe<LabelOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a 'labeled' event on a given issue or pull request. */\nexport type LabeledEvent = Node & {\n\t__typename?: \"LabeledEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the label associated with the 'labeled' event. */\n\tlabel: Label;\n\t/** Identifies the `Labelable` associated with the event. */\n\tlabelable: Labelable;\n};\n\n/** Represents a given language found in repositories. */\nexport type Language = Node & {\n\t__typename?: \"Language\";\n\t/** The color defined for the current language. */\n\tcolor?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The name of the current language. */\n\tname: Scalars[\"String\"];\n};\n\n/** A list of languages associated with the parent. */\nexport type LanguageConnection = {\n\t__typename?: \"LanguageConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<LanguageEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Language>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** The total size in bytes of files written in that language. */\n\ttotalSize: Scalars[\"Int\"];\n};\n\n/** Represents the language of a repository. */\nexport type LanguageEdge = {\n\t__typename?: \"LanguageEdge\";\n\tcursor: Scalars[\"String\"];\n\tnode: Language;\n\t/** The number of bytes of code written in the language. */\n\tsize: Scalars[\"Int\"];\n};\n\n/** Ordering options for language connections. */\nexport type LanguageOrder = {\n\t/** The field to order languages by. */\n\tfield: LanguageOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which language connections can be ordered. */\nexport enum LanguageOrderField {\n\t/** Order languages by the size of all files containing the language */\n\tSize = \"SIZE\",\n}\n\n/** A repository's open source license */\nexport type License = Node & {\n\t__typename?: \"License\";\n\t/** The full text of the license */\n\tbody: Scalars[\"String\"];\n\t/** The conditions set by the license */\n\tconditions: Array<Maybe<LicenseRule>>;\n\t/** A human-readable description of the license */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** Whether the license should be featured */\n\tfeatured: Scalars[\"Boolean\"];\n\t/** Whether the license should be displayed in license pickers */\n\thidden: Scalars[\"Boolean\"];\n\tid: Scalars[\"ID\"];\n\t/** Instructions on how to implement the license */\n\timplementation?: Maybe<Scalars[\"String\"]>;\n\t/** The lowercased SPDX ID of the license */\n\tkey: Scalars[\"String\"];\n\t/** The limitations set by the license */\n\tlimitations: Array<Maybe<LicenseRule>>;\n\t/** The license full name specified by <https://spdx.org/licenses> */\n\tname: Scalars[\"String\"];\n\t/** Customary short name if applicable (e.g, GPLv3) */\n\tnickname?: Maybe<Scalars[\"String\"]>;\n\t/** The permissions set by the license */\n\tpermissions: Array<Maybe<LicenseRule>>;\n\t/** Whether the license is a pseudo-license placeholder (e.g., other, no-license) */\n\tpseudoLicense: Scalars[\"Boolean\"];\n\t/** Short identifier specified by <https://spdx.org/licenses> */\n\tspdxId?: Maybe<Scalars[\"String\"]>;\n\t/** URL to the license on <https://choosealicense.com> */\n\turl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Describes a License's conditions, permissions, and limitations */\nexport type LicenseRule = {\n\t__typename?: \"LicenseRule\";\n\t/** A description of the rule */\n\tdescription: Scalars[\"String\"];\n\t/** The machine-readable rule key */\n\tkey: Scalars[\"String\"];\n\t/** The human-readable rule label */\n\tlabel: Scalars[\"String\"];\n};\n\n/** Autogenerated input type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectInput = {\n\t/** The ID of the Project to link to a Repository */\n\tprojectId: Scalars[\"ID\"];\n\t/** The ID of the Repository to link to a Project. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of LinkRepositoryToProject */\nexport type LinkRepositoryToProjectPayload = {\n\t__typename?: \"LinkRepositoryToProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The linked Project. */\n\tproject?: Maybe<Project>;\n\t/** The linked Repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of LockLockable */\nexport type LockLockableInput = {\n\t/** ID of the issue or pull request to be locked. */\n\tlockableId: Scalars[\"ID\"];\n\t/** A reason for why the issue or pull request will be locked. */\n\tlockReason?: Maybe<LockReason>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of LockLockable */\nexport type LockLockablePayload = {\n\t__typename?: \"LockLockablePayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The item that was locked. */\n\tlockedRecord?: Maybe<Lockable>;\n};\n\n/** The possible reasons that an issue or pull request was locked. */\nexport enum LockReason {\n\t/** The issue or pull request was locked because the conversation was off-topic. */\n\tOffTopic = \"OFF_TOPIC\",\n\t/** The issue or pull request was locked because the conversation was too heated. */\n\tTooHeated = \"TOO_HEATED\",\n\t/** The issue or pull request was locked because the conversation was resolved. */\n\tResolved = \"RESOLVED\",\n\t/** The issue or pull request was locked because the conversation was spam. */\n\tSpam = \"SPAM\",\n}\n\n/** An object that can be locked. */\nexport type Lockable = {\n\t/** Reason that the conversation was locked. */\n\tactiveLockReason?: Maybe<LockReason>;\n\t/** `true` if the object is locked */\n\tlocked: Scalars[\"Boolean\"];\n};\n\n/** Represents a 'locked' event on a given issue or pull request. */\nexport type LockedEvent = Node & {\n\t__typename?: \"LockedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Reason that the conversation was locked (optional). */\n\tlockReason?: Maybe<LockReason>;\n\t/** Object that was locked. */\n\tlockable: Lockable;\n};\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type Mannequin = Node &\n\tActor &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Mannequin\";\n\t\t/** A URL pointing to the GitHub App's public avatar. */\n\t\tavatarUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The mannequin's email on the source instance. */\n\t\temail?: Maybe<Scalars[\"String\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The username of the actor. */\n\t\tlogin: Scalars[\"String\"];\n\t\t/** The HTML path to this resource. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The URL to this resource. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** A placeholder user for attribution of imported data on GitHub. */\nexport type MannequinAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Autogenerated input type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewInput = {\n\t/** ID of the pull request to be marked as ready for review. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MarkPullRequestReadyForReview */\nexport type MarkPullRequestReadyForReviewPayload = {\n\t__typename?: \"MarkPullRequestReadyForReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request that is ready for review. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\nexport type MarkedAsDuplicateEvent = Node & {\n\t__typename?: \"MarkedAsDuplicateEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n};\n\n/** A public description of a Marketplace category. */\nexport type MarketplaceCategory = Node & {\n\t__typename?: \"MarketplaceCategory\";\n\t/** The category's description. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** The technical description of how apps listed in this category work with GitHub. */\n\thowItWorks?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The category's name. */\n\tname: Scalars[\"String\"];\n\t/** How many Marketplace listings have this as their primary category. */\n\tprimaryListingCount: Scalars[\"Int\"];\n\t/** The HTTP path for this Marketplace category. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** How many Marketplace listings have this as their secondary category. */\n\tsecondaryListingCount: Scalars[\"Int\"];\n\t/** The short name of the category used in its URL. */\n\tslug: Scalars[\"String\"];\n\t/** The HTTP URL for this Marketplace category. */\n\turl: Scalars[\"URI\"];\n};\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListing = Node & {\n\t__typename?: \"MarketplaceListing\";\n\t/** The GitHub App this listing represents. */\n\tapp?: Maybe<App>;\n\t/** URL to the listing owner's company site. */\n\tcompanyUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP path for configuring access to the listing's integration or OAuth app */\n\tconfigurationResourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for configuring access to the listing's integration or OAuth app */\n\tconfigurationUrl: Scalars[\"URI\"];\n\t/** URL to the listing's documentation. */\n\tdocumentationUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The listing's detailed description. */\n\textendedDescription?: Maybe<Scalars[\"String\"]>;\n\t/** The listing's detailed description rendered to HTML. */\n\textendedDescriptionHTML: Scalars[\"HTML\"];\n\t/** The listing's introductory description. */\n\tfullDescription: Scalars[\"String\"];\n\t/** The listing's introductory description rendered to HTML. */\n\tfullDescriptionHTML: Scalars[\"HTML\"];\n\t/** Does this listing have any plans with a free trial? */\n\thasPublishedFreeTrialPlans: Scalars[\"Boolean\"];\n\t/** Does this listing have a terms of service link? */\n\thasTermsOfService: Scalars[\"Boolean\"];\n\t/** A technical description of how this app works with GitHub. */\n\thowItWorks?: Maybe<Scalars[\"String\"]>;\n\t/** The listing's technical description rendered to HTML. */\n\thowItWorksHTML: Scalars[\"HTML\"];\n\tid: Scalars[\"ID\"];\n\t/** URL to install the product to the viewer's account or organization. */\n\tinstallationUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** Whether this listing's app has been installed for the current viewer */\n\tinstalledForViewer: Scalars[\"Boolean\"];\n\t/** Whether this listing has been removed from the Marketplace. */\n\tisArchived: Scalars[\"Boolean\"];\n\t/** Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace. */\n\tisDraft: Scalars[\"Boolean\"];\n\t/** Whether the product this listing represents is available as part of a paid plan. */\n\tisPaid: Scalars[\"Boolean\"];\n\t/** Whether this listing has been approved for display in the Marketplace. */\n\tisPublic: Scalars[\"Boolean\"];\n\t/** Whether this listing has been rejected by GitHub for display in the Marketplace. */\n\tisRejected: Scalars[\"Boolean\"];\n\t/** Whether this listing has been approved for unverified display in the Marketplace. */\n\tisUnverified: Scalars[\"Boolean\"];\n\t/** Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace. */\n\tisUnverifiedPending: Scalars[\"Boolean\"];\n\t/** Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n\tisVerificationPendingFromDraft: Scalars[\"Boolean\"];\n\t/** Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */\n\tisVerificationPendingFromUnverified: Scalars[\"Boolean\"];\n\t/** Whether this listing has been approved for verified display in the Marketplace. */\n\tisVerified: Scalars[\"Boolean\"];\n\t/** The hex color code, without the leading '#', for the logo background. */\n\tlogoBackgroundColor: Scalars[\"String\"];\n\t/** URL for the listing's logo image. */\n\tlogoUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The listing's full name. */\n\tname: Scalars[\"String\"];\n\t/** The listing's very short description without a trailing period or ampersands. */\n\tnormalizedShortDescription: Scalars[\"String\"];\n\t/** URL to the listing's detailed pricing. */\n\tpricingUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The category that best describes the listing. */\n\tprimaryCategory: MarketplaceCategory;\n\t/** URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL. */\n\tprivacyPolicyUrl: Scalars[\"URI\"];\n\t/** The HTTP path for the Marketplace listing. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The URLs for the listing's screenshots. */\n\tscreenshotUrls: Array<Maybe<Scalars[\"String\"]>>;\n\t/** An alternate category that describes the listing. */\n\tsecondaryCategory?: Maybe<MarketplaceCategory>;\n\t/** The listing's very short description. */\n\tshortDescription: Scalars[\"String\"];\n\t/** The short name of the listing used in its URL. */\n\tslug: Scalars[\"String\"];\n\t/** URL to the listing's status page. */\n\tstatusUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** An email address for support for this listing's app. */\n\tsupportEmail?: Maybe<Scalars[\"String\"]>;\n\t/** Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL. */\n\tsupportUrl: Scalars[\"URI\"];\n\t/** URL to the listing's terms of service. */\n\ttermsOfServiceUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the Marketplace listing. */\n\turl: Scalars[\"URI\"];\n\t/** Can the current viewer add plans for this Marketplace listing. */\n\tviewerCanAddPlans: Scalars[\"Boolean\"];\n\t/** Can the current viewer approve this Marketplace listing. */\n\tviewerCanApprove: Scalars[\"Boolean\"];\n\t/** Can the current viewer delist this Marketplace listing. */\n\tviewerCanDelist: Scalars[\"Boolean\"];\n\t/** Can the current viewer edit this Marketplace listing. */\n\tviewerCanEdit: Scalars[\"Boolean\"];\n\t/**\n\t * Can the current viewer edit the primary and secondary category of this\n\t * Marketplace listing.\n\t */\n\tviewerCanEditCategories: Scalars[\"Boolean\"];\n\t/** Can the current viewer edit the plans for this Marketplace listing. */\n\tviewerCanEditPlans: Scalars[\"Boolean\"];\n\t/**\n\t * Can the current viewer return this Marketplace listing to draft state\n\t * so it becomes editable again.\n\t */\n\tviewerCanRedraft: Scalars[\"Boolean\"];\n\t/**\n\t * Can the current viewer reject this Marketplace listing by returning it to\n\t * an editable draft state or rejecting it entirely.\n\t */\n\tviewerCanReject: Scalars[\"Boolean\"];\n\t/**\n\t * Can the current viewer request this listing be reviewed for display in\n\t * the Marketplace as verified.\n\t */\n\tviewerCanRequestApproval: Scalars[\"Boolean\"];\n\t/** Indicates whether the current user has an active subscription to this Marketplace listing. */\n\tviewerHasPurchased: Scalars[\"Boolean\"];\n\t/**\n\t * Indicates if the current user has purchased a subscription to this Marketplace listing\n\t * for all of the organizations the user owns.\n\t */\n\tviewerHasPurchasedForAllOrganizations: Scalars[\"Boolean\"];\n\t/** Does the current viewer role allow them to administer this Marketplace listing. */\n\tviewerIsListingAdmin: Scalars[\"Boolean\"];\n};\n\n/** A listing in the GitHub integration marketplace. */\nexport type MarketplaceListingLogoUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Look up Marketplace Listings */\nexport type MarketplaceListingConnection = {\n\t__typename?: \"MarketplaceListingConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<MarketplaceListingEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<MarketplaceListing>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type MarketplaceListingEdge = {\n\t__typename?: \"MarketplaceListingEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<MarketplaceListing>;\n};\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusable = {\n\t/** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n\tmemberStatuses: UserStatusConnection;\n};\n\n/** Entities that have members who can set status messages. */\nexport type MemberStatusableMemberStatusesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<UserStatusOrder>;\n};\n\n/** Audit log entry for a members_can_delete_repos.clear event. */\nexport type MembersCanDeleteReposClearAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"MembersCanDeleteReposClearAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a members_can_delete_repos.disable event. */\nexport type MembersCanDeleteReposDisableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"MembersCanDeleteReposDisableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a members_can_delete_repos.enable event. */\nexport type MembersCanDeleteReposEnableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"MembersCanDeleteReposEnableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Represents a 'mentioned' event on a given issue or pull request. */\nexport type MentionedEvent = Node & {\n\t__typename?: \"MentionedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Autogenerated input type of MergeBranch */\nexport type MergeBranchInput = {\n\t/** The Node ID of the Repository containing the base branch that will be modified. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The name of the base branch that the provided head will be merged into. */\n\tbase: Scalars[\"String\"];\n\t/** The head to merge into the base branch. This can be a branch name or a commit GitObjectID. */\n\thead: Scalars[\"String\"];\n\t/** Message to use for the merge commit. If omitted, a default will be used. */\n\tcommitMessage?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MergeBranch */\nexport type MergeBranchPayload = {\n\t__typename?: \"MergeBranchPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The resulting merge Commit. */\n\tmergeCommit?: Maybe<Commit>;\n};\n\n/** Autogenerated input type of MergePullRequest */\nexport type MergePullRequestInput = {\n\t/** ID of the pull request to be merged. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** Commit headline to use for the merge commit; if omitted, a default message will be used. */\n\tcommitHeadline?: Maybe<Scalars[\"String\"]>;\n\t/** Commit body to use for the merge commit; if omitted, a default message will be used */\n\tcommitBody?: Maybe<Scalars[\"String\"]>;\n\t/** OID that the pull request head ref must match to allow merge; if omitted, no check is performed. */\n\texpectedHeadOid?: Maybe<Scalars[\"GitObjectID\"]>;\n\t/** The merge method to use. If omitted, defaults to 'MERGE' */\n\tmergeMethod?: Maybe<PullRequestMergeMethod>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MergePullRequest */\nexport type MergePullRequestPayload = {\n\t__typename?: \"MergePullRequestPayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request that was merged. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Whether or not a PullRequest can be merged. */\nexport enum MergeableState {\n\t/** The pull request can be merged. */\n\tMergeable = \"MERGEABLE\",\n\t/** The pull request cannot be merged due to merge conflicts. */\n\tConflicting = \"CONFLICTING\",\n\t/** The mergeability of the pull request is still being calculated. */\n\tUnknown = \"UNKNOWN\",\n}\n\n/** Represents a 'merged' event on a given pull request. */\nexport type MergedEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"MergedEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Identifies the commit associated with the `merge` event. */\n\t\tcommit?: Maybe<Commit>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Identifies the Ref associated with the `merge` event. */\n\t\tmergeRef?: Maybe<Ref>;\n\t\t/** Identifies the name of the Ref associated with the `merge` event. */\n\t\tmergeRefName: Scalars[\"String\"];\n\t\t/** PullRequest referenced by event. */\n\t\tpullRequest: PullRequest;\n\t\t/** The HTTP path for this merged event. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this merged event. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** Represents a Milestone object on a given repository. */\nexport type Milestone = Node &\n\tClosable &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Milestone\";\n\t\t/** `true` if the object is closed (definition of closed may depend on type) */\n\t\tclosed: Scalars[\"Boolean\"];\n\t\t/** Identifies the date and time when the object was closed. */\n\t\tclosedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the actor who created the milestone. */\n\t\tcreator?: Maybe<Actor>;\n\t\t/** Identifies the description of the milestone. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the due date of the milestone. */\n\t\tdueOn?: Maybe<Scalars[\"DateTime\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Just for debugging on review-lab */\n\t\tissuePrioritiesDebug: Scalars[\"String\"];\n\t\t/** A list of issues associated with the milestone. */\n\t\tissues: IssueConnection;\n\t\t/** Identifies the number of the milestone. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** A list of pull requests associated with the milestone. */\n\t\tpullRequests: PullRequestConnection;\n\t\t/** The repository associated with this milestone. */\n\t\trepository: Repository;\n\t\t/** The HTTP path for this milestone */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the state of the milestone. */\n\t\tstate: MilestoneState;\n\t\t/** Identifies the title of the milestone. */\n\t\ttitle: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this milestone */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestoneIssuesArgs = {\n\torderBy?: Maybe<IssueOrder>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\tstates?: Maybe<Array<IssueState>>;\n\tfilterBy?: Maybe<IssueFilters>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents a Milestone object on a given repository. */\nexport type MilestonePullRequestsArgs = {\n\tstates?: Maybe<Array<PullRequestState>>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\theadRefName?: Maybe<Scalars[\"String\"]>;\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<IssueOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Milestone. */\nexport type MilestoneConnection = {\n\t__typename?: \"MilestoneConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<MilestoneEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Milestone>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type MilestoneEdge = {\n\t__typename?: \"MilestoneEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Milestone>;\n};\n\n/** Types that can be inside a Milestone. */\nexport type MilestoneItem = Issue | PullRequest;\n\n/** Ordering options for milestone connections. */\nexport type MilestoneOrder = {\n\t/** The field to order milestones by. */\n\tfield: MilestoneOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which milestone connections can be ordered. */\nexport enum MilestoneOrderField {\n\t/** Order milestones by when they are due. */\n\tDueDate = \"DUE_DATE\",\n\t/** Order milestones by when they were created. */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order milestones by when they were last updated. */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order milestones by their number. */\n\tNumber = \"NUMBER\",\n}\n\n/** The possible states of a milestone. */\nexport enum MilestoneState {\n\t/** A milestone that is still open. */\n\tOpen = \"OPEN\",\n\t/** A milestone that has been closed. */\n\tClosed = \"CLOSED\",\n}\n\n/** Represents a 'milestoned' event on a given issue or pull request. */\nexport type MilestonedEvent = Node & {\n\t__typename?: \"MilestonedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the milestone title associated with the 'milestoned' event. */\n\tmilestoneTitle: Scalars[\"String\"];\n\t/** Object referenced by event. */\n\tsubject: MilestoneItem;\n};\n\n/** Entities that can be minimized. */\nexport type Minimizable = {\n\t/** Returns whether or not a comment has been minimized. */\n\tisMinimized: Scalars[\"Boolean\"];\n\t/** Returns why the comment was minimized. */\n\tminimizedReason?: Maybe<Scalars[\"String\"]>;\n\t/** Check if the current viewer can minimize this object. */\n\tviewerCanMinimize: Scalars[\"Boolean\"];\n};\n\n/** Autogenerated input type of MinimizeComment */\nexport type MinimizeCommentInput = {\n\t/** The Node ID of the subject to modify. */\n\tsubjectId: Scalars[\"ID\"];\n\t/** The classification of comment */\n\tclassifier: ReportedContentClassifiers;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MinimizeComment */\nexport type MinimizeCommentPayload = {\n\t__typename?: \"MinimizeCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The comment that was minimized. */\n\tminimizedComment?: Maybe<Minimizable>;\n};\n\n/** Autogenerated input type of MoveProjectCard */\nexport type MoveProjectCardInput = {\n\t/** The id of the card to move. */\n\tcardId: Scalars[\"ID\"];\n\t/** The id of the column to move it into. */\n\tcolumnId: Scalars[\"ID\"];\n\t/** Place the new card after the card with this id. Pass null to place it at the top. */\n\tafterCardId?: Maybe<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MoveProjectCard */\nexport type MoveProjectCardPayload = {\n\t__typename?: \"MoveProjectCardPayload\";\n\t/** The new edge of the moved card. */\n\tcardEdge?: Maybe<ProjectCardEdge>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of MoveProjectColumn */\nexport type MoveProjectColumnInput = {\n\t/** The id of the column to move. */\n\tcolumnId: Scalars[\"ID\"];\n\t/** Place the new column after the column with this id. Pass null to place it at the front. */\n\tafterColumnId?: Maybe<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of MoveProjectColumn */\nexport type MoveProjectColumnPayload = {\n\t__typename?: \"MoveProjectColumnPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The new edge of the moved column. */\n\tcolumnEdge?: Maybe<ProjectColumnEdge>;\n};\n\n/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\nexport type MovedColumnsInProjectEvent = Node & {\n\t__typename?: \"MovedColumnsInProjectEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type Mutation = {\n\t__typename?: \"Mutation\";\n\t/** Accepts a pending invitation for a user to become an administrator of an enterprise. */\n\tacceptEnterpriseAdministratorInvitation?: Maybe<AcceptEnterpriseAdministratorInvitationPayload>;\n\t/** Applies a suggested topic to the repository. */\n\tacceptTopicSuggestion?: Maybe<AcceptTopicSuggestionPayload>;\n\t/** Adds assignees to an assignable object. */\n\taddAssigneesToAssignable?: Maybe<AddAssigneesToAssignablePayload>;\n\t/** Adds a comment to an Issue or Pull Request. */\n\taddComment?: Maybe<AddCommentPayload>;\n\t/** Adds labels to a labelable object. */\n\taddLabelsToLabelable?: Maybe<AddLabelsToLabelablePayload>;\n\t/** Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both. */\n\taddProjectCard?: Maybe<AddProjectCardPayload>;\n\t/** Adds a column to a Project. */\n\taddProjectColumn?: Maybe<AddProjectColumnPayload>;\n\t/** Adds a review to a Pull Request. */\n\taddPullRequestReview?: Maybe<AddPullRequestReviewPayload>;\n\t/** Adds a comment to a review. */\n\taddPullRequestReviewComment?: Maybe<AddPullRequestReviewCommentPayload>;\n\t/** Adds a new thread to a pending Pull Request Review. */\n\taddPullRequestReviewThread?: Maybe<AddPullRequestReviewThreadPayload>;\n\t/** Adds a reaction to a subject. */\n\taddReaction?: Maybe<AddReactionPayload>;\n\t/** Adds a star to a Starrable. */\n\taddStar?: Maybe<AddStarPayload>;\n\t/** Marks a repository as archived. */\n\tarchiveRepository?: Maybe<ArchiveRepositoryPayload>;\n\t/** Cancels a pending invitation for an administrator to join an enterprise. */\n\tcancelEnterpriseAdminInvitation?: Maybe<CancelEnterpriseAdminInvitationPayload>;\n\t/** Update your status on GitHub. */\n\tchangeUserStatus?: Maybe<ChangeUserStatusPayload>;\n\t/** Clears all labels from a labelable object. */\n\tclearLabelsFromLabelable?: Maybe<ClearLabelsFromLabelablePayload>;\n\t/** Creates a new project by cloning configuration from an existing project. */\n\tcloneProject?: Maybe<CloneProjectPayload>;\n\t/** Create a new repository with the same files and directory structure as a template repository. */\n\tcloneTemplateRepository?: Maybe<CloneTemplateRepositoryPayload>;\n\t/** Close an issue. */\n\tcloseIssue?: Maybe<CloseIssuePayload>;\n\t/** Close a pull request. */\n\tclosePullRequest?: Maybe<ClosePullRequestPayload>;\n\t/** Convert a project note card to one associated with a newly created issue. */\n\tconvertProjectCardNoteToIssue?: Maybe<ConvertProjectCardNoteToIssuePayload>;\n\t/** Create a new branch protection rule */\n\tcreateBranchProtectionRule?: Maybe<CreateBranchProtectionRulePayload>;\n\t/** Creates an organization as part of an enterprise account. */\n\tcreateEnterpriseOrganization?: Maybe<CreateEnterpriseOrganizationPayload>;\n\t/** Creates a new IP allow list entry. */\n\tcreateIpAllowListEntry?: Maybe<CreateIpAllowListEntryPayload>;\n\t/** Creates a new issue. */\n\tcreateIssue?: Maybe<CreateIssuePayload>;\n\t/** Creates a new project. */\n\tcreateProject?: Maybe<CreateProjectPayload>;\n\t/** Create a new pull request */\n\tcreatePullRequest?: Maybe<CreatePullRequestPayload>;\n\t/** Create a new Git Ref. */\n\tcreateRef?: Maybe<CreateRefPayload>;\n\t/** Create a new repository. */\n\tcreateRepository?: Maybe<CreateRepositoryPayload>;\n\t/** Creates a new team discussion. */\n\tcreateTeamDiscussion?: Maybe<CreateTeamDiscussionPayload>;\n\t/** Creates a new team discussion comment. */\n\tcreateTeamDiscussionComment?: Maybe<CreateTeamDiscussionCommentPayload>;\n\t/** Rejects a suggested topic for the repository. */\n\tdeclineTopicSuggestion?: Maybe<DeclineTopicSuggestionPayload>;\n\t/** Delete a branch protection rule */\n\tdeleteBranchProtectionRule?: Maybe<DeleteBranchProtectionRulePayload>;\n\t/** Deletes a deployment. */\n\tdeleteDeployment?: Maybe<DeleteDeploymentPayload>;\n\t/** Deletes an IP allow list entry. */\n\tdeleteIpAllowListEntry?: Maybe<DeleteIpAllowListEntryPayload>;\n\t/** Deletes an Issue object. */\n\tdeleteIssue?: Maybe<DeleteIssuePayload>;\n\t/** Deletes an IssueComment object. */\n\tdeleteIssueComment?: Maybe<DeleteIssueCommentPayload>;\n\t/** Deletes a project. */\n\tdeleteProject?: Maybe<DeleteProjectPayload>;\n\t/** Deletes a project card. */\n\tdeleteProjectCard?: Maybe<DeleteProjectCardPayload>;\n\t/** Deletes a project column. */\n\tdeleteProjectColumn?: Maybe<DeleteProjectColumnPayload>;\n\t/** Deletes a pull request review. */\n\tdeletePullRequestReview?: Maybe<DeletePullRequestReviewPayload>;\n\t/** Deletes a pull request review comment. */\n\tdeletePullRequestReviewComment?: Maybe<DeletePullRequestReviewCommentPayload>;\n\t/** Delete a Git Ref. */\n\tdeleteRef?: Maybe<DeleteRefPayload>;\n\t/** Deletes a team discussion. */\n\tdeleteTeamDiscussion?: Maybe<DeleteTeamDiscussionPayload>;\n\t/** Deletes a team discussion comment. */\n\tdeleteTeamDiscussionComment?: Maybe<DeleteTeamDiscussionCommentPayload>;\n\t/** Dismisses an approved or rejected pull request review. */\n\tdismissPullRequestReview?: Maybe<DismissPullRequestReviewPayload>;\n\t/** Follow a user. */\n\tfollowUser?: Maybe<FollowUserPayload>;\n\t/** Invite someone to become an administrator of the enterprise. */\n\tinviteEnterpriseAdmin?: Maybe<InviteEnterpriseAdminPayload>;\n\t/** Creates a repository link for a project. */\n\tlinkRepositoryToProject?: Maybe<LinkRepositoryToProjectPayload>;\n\t/** Lock a lockable object */\n\tlockLockable?: Maybe<LockLockablePayload>;\n\t/** Marks a pull request ready for review. */\n\tmarkPullRequestReadyForReview?: Maybe<MarkPullRequestReadyForReviewPayload>;\n\t/** Merge a head into a branch. */\n\tmergeBranch?: Maybe<MergeBranchPayload>;\n\t/** Merge a pull request. */\n\tmergePullRequest?: Maybe<MergePullRequestPayload>;\n\t/** Minimizes a comment on an Issue, Commit, Pull Request, or Gist */\n\tminimizeComment?: Maybe<MinimizeCommentPayload>;\n\t/** Moves a project card to another place. */\n\tmoveProjectCard?: Maybe<MoveProjectCardPayload>;\n\t/** Moves a project column to another place. */\n\tmoveProjectColumn?: Maybe<MoveProjectColumnPayload>;\n\t/** Regenerates the identity provider recovery codes for an enterprise */\n\tregenerateEnterpriseIdentityProviderRecoveryCodes?: Maybe<RegenerateEnterpriseIdentityProviderRecoveryCodesPayload>;\n\t/** Removes assignees from an assignable object. */\n\tremoveAssigneesFromAssignable?: Maybe<RemoveAssigneesFromAssignablePayload>;\n\t/** Removes an administrator from the enterprise. */\n\tremoveEnterpriseAdmin?: Maybe<RemoveEnterpriseAdminPayload>;\n\t/** Removes the identity provider from an enterprise */\n\tremoveEnterpriseIdentityProvider?: Maybe<RemoveEnterpriseIdentityProviderPayload>;\n\t/** Removes an organization from the enterprise */\n\tremoveEnterpriseOrganization?: Maybe<RemoveEnterpriseOrganizationPayload>;\n\t/** Removes labels from a Labelable object. */\n\tremoveLabelsFromLabelable?: Maybe<RemoveLabelsFromLabelablePayload>;\n\t/** Removes outside collaborator from all repositories in an organization. */\n\tremoveOutsideCollaborator?: Maybe<RemoveOutsideCollaboratorPayload>;\n\t/** Removes a reaction from a subject. */\n\tremoveReaction?: Maybe<RemoveReactionPayload>;\n\t/** Removes a star from a Starrable. */\n\tremoveStar?: Maybe<RemoveStarPayload>;\n\t/** Reopen a issue. */\n\treopenIssue?: Maybe<ReopenIssuePayload>;\n\t/** Reopen a pull request. */\n\treopenPullRequest?: Maybe<ReopenPullRequestPayload>;\n\t/** Set review requests on a pull request. */\n\trequestReviews?: Maybe<RequestReviewsPayload>;\n\t/** Marks a review thread as resolved. */\n\tresolveReviewThread?: Maybe<ResolveReviewThreadPayload>;\n\t/** Creates or updates the identity provider for an enterprise. */\n\tsetEnterpriseIdentityProvider?: Maybe<SetEnterpriseIdentityProviderPayload>;\n\t/** Submits a pending pull request review. */\n\tsubmitPullRequestReview?: Maybe<SubmitPullRequestReviewPayload>;\n\t/** Transfer an issue to a different repository */\n\ttransferIssue?: Maybe<TransferIssuePayload>;\n\t/** Unarchives a repository. */\n\tunarchiveRepository?: Maybe<UnarchiveRepositoryPayload>;\n\t/** Unfollow a user. */\n\tunfollowUser?: Maybe<UnfollowUserPayload>;\n\t/** Deletes a repository link from a project. */\n\tunlinkRepositoryFromProject?: Maybe<UnlinkRepositoryFromProjectPayload>;\n\t/** Unlock a lockable object */\n\tunlockLockable?: Maybe<UnlockLockablePayload>;\n\t/** Unmark an issue as a duplicate of another issue. */\n\tunmarkIssueAsDuplicate?: Maybe<UnmarkIssueAsDuplicatePayload>;\n\t/** Unminimizes a comment on an Issue, Commit, Pull Request, or Gist */\n\tunminimizeComment?: Maybe<UnminimizeCommentPayload>;\n\t/** Marks a review thread as unresolved. */\n\tunresolveReviewThread?: Maybe<UnresolveReviewThreadPayload>;\n\t/** Create a new branch protection rule */\n\tupdateBranchProtectionRule?: Maybe<UpdateBranchProtectionRulePayload>;\n\t/** Sets the action execution capability setting for an enterprise. */\n\tupdateEnterpriseActionExecutionCapabilitySetting?: Maybe<UpdateEnterpriseActionExecutionCapabilitySettingPayload>;\n\t/** Updates the role of an enterprise administrator. */\n\tupdateEnterpriseAdministratorRole?: Maybe<UpdateEnterpriseAdministratorRolePayload>;\n\t/** Sets whether private repository forks are enabled for an enterprise. */\n\tupdateEnterpriseAllowPrivateRepositoryForkingSetting?: Maybe<UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload>;\n\t/** Sets the default repository permission for organizations in an enterprise. */\n\tupdateEnterpriseDefaultRepositoryPermissionSetting?: Maybe<UpdateEnterpriseDefaultRepositoryPermissionSettingPayload>;\n\t/** Sets whether organization members with admin permissions on a repository can change repository visibility. */\n\tupdateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: Maybe<\n\t\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\n\t>;\n\t/** Sets the members can create repositories setting for an enterprise. */\n\tupdateEnterpriseMembersCanCreateRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload>;\n\t/** Sets the members can delete issues setting for an enterprise. */\n\tupdateEnterpriseMembersCanDeleteIssuesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteIssuesSettingPayload>;\n\t/** Sets the members can delete repositories setting for an enterprise. */\n\tupdateEnterpriseMembersCanDeleteRepositoriesSetting?: Maybe<UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload>;\n\t/** Sets whether members can invite collaborators are enabled for an enterprise. */\n\tupdateEnterpriseMembersCanInviteCollaboratorsSetting?: Maybe<UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload>;\n\t/** Sets whether or not an organization admin can make purchases. */\n\tupdateEnterpriseMembersCanMakePurchasesSetting?: Maybe<UpdateEnterpriseMembersCanMakePurchasesSettingPayload>;\n\t/** Sets the members can update protected branches setting for an enterprise. */\n\tupdateEnterpriseMembersCanUpdateProtectedBranchesSetting?: Maybe<\n\t\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\n\t>;\n\t/** Sets the members can view dependency insights for an enterprise. */\n\tupdateEnterpriseMembersCanViewDependencyInsightsSetting?: Maybe<\n\t\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\n\t>;\n\t/** Sets whether organization projects are enabled for an enterprise. */\n\tupdateEnterpriseOrganizationProjectsSetting?: Maybe<UpdateEnterpriseOrganizationProjectsSettingPayload>;\n\t/** Updates an enterprise's profile. */\n\tupdateEnterpriseProfile?: Maybe<UpdateEnterpriseProfilePayload>;\n\t/** Sets whether repository projects are enabled for a enterprise. */\n\tupdateEnterpriseRepositoryProjectsSetting?: Maybe<UpdateEnterpriseRepositoryProjectsSettingPayload>;\n\t/** Sets whether team discussions are enabled for an enterprise. */\n\tupdateEnterpriseTeamDiscussionsSetting?: Maybe<UpdateEnterpriseTeamDiscussionsSettingPayload>;\n\t/** Sets whether two factor authentication is required for all users in an enterprise. */\n\tupdateEnterpriseTwoFactorAuthenticationRequiredSetting?: Maybe<\n\t\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\n\t>;\n\t/** Sets whether an IP allow list is enabled on an owner. */\n\tupdateIpAllowListEnabledSetting?: Maybe<UpdateIpAllowListEnabledSettingPayload>;\n\t/** Updates an IP allow list entry. */\n\tupdateIpAllowListEntry?: Maybe<UpdateIpAllowListEntryPayload>;\n\t/** Updates an Issue. */\n\tupdateIssue?: Maybe<UpdateIssuePayload>;\n\t/** Updates an IssueComment object. */\n\tupdateIssueComment?: Maybe<UpdateIssueCommentPayload>;\n\t/** Updates an existing project. */\n\tupdateProject?: Maybe<UpdateProjectPayload>;\n\t/** Updates an existing project card. */\n\tupdateProjectCard?: Maybe<UpdateProjectCardPayload>;\n\t/** Updates an existing project column. */\n\tupdateProjectColumn?: Maybe<UpdateProjectColumnPayload>;\n\t/** Update a pull request */\n\tupdatePullRequest?: Maybe<UpdatePullRequestPayload>;\n\t/** Updates the body of a pull request review. */\n\tupdatePullRequestReview?: Maybe<UpdatePullRequestReviewPayload>;\n\t/** Updates a pull request review comment. */\n\tupdatePullRequestReviewComment?: Maybe<UpdatePullRequestReviewCommentPayload>;\n\t/** Update a Git Ref. */\n\tupdateRef?: Maybe<UpdateRefPayload>;\n\t/** Update information about a repository. */\n\tupdateRepository?: Maybe<UpdateRepositoryPayload>;\n\t/** Updates the state for subscribable subjects. */\n\tupdateSubscription?: Maybe<UpdateSubscriptionPayload>;\n\t/** Updates a team discussion. */\n\tupdateTeamDiscussion?: Maybe<UpdateTeamDiscussionPayload>;\n\t/** Updates a discussion comment. */\n\tupdateTeamDiscussionComment?: Maybe<UpdateTeamDiscussionCommentPayload>;\n\t/** Replaces the repository's topics with the given topics. */\n\tupdateTopics?: Maybe<UpdateTopicsPayload>;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptEnterpriseAdministratorInvitationArgs = {\n\tinput: AcceptEnterpriseAdministratorInvitationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAcceptTopicSuggestionArgs = {\n\tinput: AcceptTopicSuggestionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddAssigneesToAssignableArgs = {\n\tinput: AddAssigneesToAssignableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddCommentArgs = {\n\tinput: AddCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddLabelsToLabelableArgs = {\n\tinput: AddLabelsToLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectCardArgs = {\n\tinput: AddProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddProjectColumnArgs = {\n\tinput: AddProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewArgs = {\n\tinput: AddPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewCommentArgs = {\n\tinput: AddPullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddPullRequestReviewThreadArgs = {\n\tinput: AddPullRequestReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddReactionArgs = {\n\tinput: AddReactionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationAddStarArgs = {\n\tinput: AddStarInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationArchiveRepositoryArgs = {\n\tinput: ArchiveRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCancelEnterpriseAdminInvitationArgs = {\n\tinput: CancelEnterpriseAdminInvitationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationChangeUserStatusArgs = {\n\tinput: ChangeUserStatusInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClearLabelsFromLabelableArgs = {\n\tinput: ClearLabelsFromLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneProjectArgs = {\n\tinput: CloneProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloneTemplateRepositoryArgs = {\n\tinput: CloneTemplateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCloseIssueArgs = {\n\tinput: CloseIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationClosePullRequestArgs = {\n\tinput: ClosePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationConvertProjectCardNoteToIssueArgs = {\n\tinput: ConvertProjectCardNoteToIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateBranchProtectionRuleArgs = {\n\tinput: CreateBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateEnterpriseOrganizationArgs = {\n\tinput: CreateEnterpriseOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIpAllowListEntryArgs = {\n\tinput: CreateIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateIssueArgs = {\n\tinput: CreateIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateProjectArgs = {\n\tinput: CreateProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreatePullRequestArgs = {\n\tinput: CreatePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRefArgs = {\n\tinput: CreateRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateRepositoryArgs = {\n\tinput: CreateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionArgs = {\n\tinput: CreateTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationCreateTeamDiscussionCommentArgs = {\n\tinput: CreateTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeclineTopicSuggestionArgs = {\n\tinput: DeclineTopicSuggestionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteBranchProtectionRuleArgs = {\n\tinput: DeleteBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteDeploymentArgs = {\n\tinput: DeleteDeploymentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIpAllowListEntryArgs = {\n\tinput: DeleteIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueArgs = {\n\tinput: DeleteIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteIssueCommentArgs = {\n\tinput: DeleteIssueCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectArgs = {\n\tinput: DeleteProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectCardArgs = {\n\tinput: DeleteProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteProjectColumnArgs = {\n\tinput: DeleteProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewArgs = {\n\tinput: DeletePullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeletePullRequestReviewCommentArgs = {\n\tinput: DeletePullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteRefArgs = {\n\tinput: DeleteRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionArgs = {\n\tinput: DeleteTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDeleteTeamDiscussionCommentArgs = {\n\tinput: DeleteTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationDismissPullRequestReviewArgs = {\n\tinput: DismissPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationFollowUserArgs = {\n\tinput: FollowUserInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationInviteEnterpriseAdminArgs = {\n\tinput: InviteEnterpriseAdminInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLinkRepositoryToProjectArgs = {\n\tinput: LinkRepositoryToProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationLockLockableArgs = {\n\tinput: LockLockableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMarkPullRequestReadyForReviewArgs = {\n\tinput: MarkPullRequestReadyForReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergeBranchArgs = {\n\tinput: MergeBranchInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMergePullRequestArgs = {\n\tinput: MergePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMinimizeCommentArgs = {\n\tinput: MinimizeCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectCardArgs = {\n\tinput: MoveProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationMoveProjectColumnArgs = {\n\tinput: MoveProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRegenerateEnterpriseIdentityProviderRecoveryCodesArgs = {\n\tinput: RegenerateEnterpriseIdentityProviderRecoveryCodesInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveAssigneesFromAssignableArgs = {\n\tinput: RemoveAssigneesFromAssignableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseAdminArgs = {\n\tinput: RemoveEnterpriseAdminInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseIdentityProviderArgs = {\n\tinput: RemoveEnterpriseIdentityProviderInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveEnterpriseOrganizationArgs = {\n\tinput: RemoveEnterpriseOrganizationInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveLabelsFromLabelableArgs = {\n\tinput: RemoveLabelsFromLabelableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveOutsideCollaboratorArgs = {\n\tinput: RemoveOutsideCollaboratorInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveReactionArgs = {\n\tinput: RemoveReactionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRemoveStarArgs = {\n\tinput: RemoveStarInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenIssueArgs = {\n\tinput: ReopenIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationReopenPullRequestArgs = {\n\tinput: ReopenPullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationRequestReviewsArgs = {\n\tinput: RequestReviewsInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationResolveReviewThreadArgs = {\n\tinput: ResolveReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSetEnterpriseIdentityProviderArgs = {\n\tinput: SetEnterpriseIdentityProviderInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationSubmitPullRequestReviewArgs = {\n\tinput: SubmitPullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationTransferIssueArgs = {\n\tinput: TransferIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnarchiveRepositoryArgs = {\n\tinput: UnarchiveRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnfollowUserArgs = {\n\tinput: UnfollowUserInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlinkRepositoryFromProjectArgs = {\n\tinput: UnlinkRepositoryFromProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnlockLockableArgs = {\n\tinput: UnlockLockableInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnmarkIssueAsDuplicateArgs = {\n\tinput: UnmarkIssueAsDuplicateInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnminimizeCommentArgs = {\n\tinput: UnminimizeCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUnresolveReviewThreadArgs = {\n\tinput: UnresolveReviewThreadInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateBranchProtectionRuleArgs = {\n\tinput: UpdateBranchProtectionRuleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseActionExecutionCapabilitySettingArgs = {\n\tinput: UpdateEnterpriseActionExecutionCapabilitySettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAdministratorRoleArgs = {\n\tinput: UpdateEnterpriseAdministratorRoleInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseAllowPrivateRepositoryForkingSettingArgs = {\n\tinput: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseDefaultRepositoryPermissionSettingArgs = {\n\tinput: UpdateEnterpriseDefaultRepositoryPermissionSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingArgs = {\n\tinput: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanCreateRepositoriesSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteIssuesSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanDeleteIssuesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanDeleteRepositoriesSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanInviteCollaboratorsSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanMakePurchasesSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanMakePurchasesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseMembersCanViewDependencyInsightsSettingArgs = {\n\tinput: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseOrganizationProjectsSettingArgs = {\n\tinput: UpdateEnterpriseOrganizationProjectsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseProfileArgs = {\n\tinput: UpdateEnterpriseProfileInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseRepositoryProjectsSettingArgs = {\n\tinput: UpdateEnterpriseRepositoryProjectsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTeamDiscussionsSettingArgs = {\n\tinput: UpdateEnterpriseTeamDiscussionsSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateEnterpriseTwoFactorAuthenticationRequiredSettingArgs = {\n\tinput: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEnabledSettingArgs = {\n\tinput: UpdateIpAllowListEnabledSettingInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIpAllowListEntryArgs = {\n\tinput: UpdateIpAllowListEntryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueArgs = {\n\tinput: UpdateIssueInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateIssueCommentArgs = {\n\tinput: UpdateIssueCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectArgs = {\n\tinput: UpdateProjectInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectCardArgs = {\n\tinput: UpdateProjectCardInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateProjectColumnArgs = {\n\tinput: UpdateProjectColumnInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestArgs = {\n\tinput: UpdatePullRequestInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewArgs = {\n\tinput: UpdatePullRequestReviewInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdatePullRequestReviewCommentArgs = {\n\tinput: UpdatePullRequestReviewCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRefArgs = {\n\tinput: UpdateRefInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateRepositoryArgs = {\n\tinput: UpdateRepositoryInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateSubscriptionArgs = {\n\tinput: UpdateSubscriptionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionArgs = {\n\tinput: UpdateTeamDiscussionInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTeamDiscussionCommentArgs = {\n\tinput: UpdateTeamDiscussionCommentInput;\n};\n\n/** The root query for implementing GraphQL mutations. */\nexport type MutationUpdateTopicsArgs = {\n\tinput: UpdateTopicsInput;\n};\n\n/** An object with an ID. */\nexport type Node = {\n\t/** ID of the object. */\n\tid: Scalars[\"ID\"];\n};\n\n/** Metadata for an audit entry with action oauth_application.* */\nexport type OauthApplicationAuditEntryData = {\n\t/** The name of the OAuth Application. */\n\toauthApplicationName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the OAuth Application */\n\toauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the OAuth Application */\n\toauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a oauth_application.create event. */\nexport type OauthApplicationCreateAuditEntry = Node &\n\tAuditEntry &\n\tOauthApplicationAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OauthApplicationCreateAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The application URL of the OAuth Application. */\n\t\tapplicationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The callback URL of the OAuth Application. */\n\t\tcallbackUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The name of the OAuth Application. */\n\t\toauthApplicationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the OAuth Application */\n\t\toauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the OAuth Application */\n\t\toauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The rate limit of the OAuth Application. */\n\t\trateLimit?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The state of the OAuth Application. */\n\t\tstate?: Maybe<OauthApplicationCreateAuditEntryState>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The state of an OAuth Application when it was created. */\nexport enum OauthApplicationCreateAuditEntryState {\n\t/** The OAuth Application was active and allowed to have OAuth Accesses. */\n\tActive = \"ACTIVE\",\n\t/** The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns. */\n\tSuspended = \"SUSPENDED\",\n\t/** The OAuth Application was in the process of being deleted. */\n\tPendingDeletion = \"PENDING_DELETION\",\n}\n\n/** The corresponding operation type for the action */\nexport enum OperationType {\n\t/** An existing resource was accessed */\n\tAccess = \"ACCESS\",\n\t/** A resource performed an authentication event */\n\tAuthentication = \"AUTHENTICATION\",\n\t/** A new resource was created */\n\tCreate = \"CREATE\",\n\t/** An existing resource was modified */\n\tModify = \"MODIFY\",\n\t/** An existing resource was removed */\n\tRemove = \"REMOVE\",\n\t/** An existing resource was restored */\n\tRestore = \"RESTORE\",\n\t/** An existing resource was transferred between multiple resources */\n\tTransfer = \"TRANSFER\",\n}\n\n/** Possible directions in which to order a list of items when provided an `orderBy` argument. */\nexport enum OrderDirection {\n\t/** Specifies an ascending order for a given `orderBy` argument. */\n\tAsc = \"ASC\",\n\t/** Specifies a descending order for a given `orderBy` argument. */\n\tDesc = \"DESC\",\n}\n\n/** Audit log entry for a org.add_billing_manager */\nexport type OrgAddBillingManagerAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgAddBillingManagerAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The email address used to invite a billing manager for the organization. */\n\t\tinvitationEmail?: Maybe<Scalars[\"String\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.add_member */\nexport type OrgAddMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgAddMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The permission level of the member added to the organization. */\n\t\tpermission?: Maybe<OrgAddMemberAuditEntryPermission>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The permissions available to members on an Organization. */\nexport enum OrgAddMemberAuditEntryPermission {\n\t/** Can read and clone repositories. */\n\tRead = \"READ\",\n\t/** Can read, clone, push, and add collaborators to repositories. */\n\tAdmin = \"ADMIN\",\n}\n\n/** Audit log entry for a org.block_user */\nexport type OrgBlockUserAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgBlockUserAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The blocked user. */\n\t\tblockedUser?: Maybe<User>;\n\t\t/** The username of the blocked user. */\n\t\tblockedUserName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the blocked user. */\n\t\tblockedUserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the blocked user. */\n\t\tblockedUserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.config.disable_collaborators_only event. */\nexport type OrgConfigDisableCollaboratorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgConfigDisableCollaboratorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.config.enable_collaborators_only event. */\nexport type OrgConfigEnableCollaboratorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgConfigEnableCollaboratorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.create event. */\nexport type OrgCreateAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgCreateAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The billing plan for the Organization. */\n\t\tbillingPlan?: Maybe<OrgCreateAuditEntryBillingPlan>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The billing plans available for organizations. */\nexport enum OrgCreateAuditEntryBillingPlan {\n\t/** Free Plan */\n\tFree = \"FREE\",\n\t/** Team Plan */\n\tBusiness = \"BUSINESS\",\n\t/** Enterprise Cloud Plan */\n\tBusinessPlus = \"BUSINESS_PLUS\",\n\t/** Legacy Unlimited Plan */\n\tUnlimited = \"UNLIMITED\",\n\t/** Tiered Per Seat Plan */\n\tTieredPerSeat = \"TIERED_PER_SEAT\",\n}\n\n/** Audit log entry for a org.disable_oauth_app_restrictions event. */\nexport type OrgDisableOauthAppRestrictionsAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgDisableOauthAppRestrictionsAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.disable_saml event. */\nexport type OrgDisableSamlAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgDisableSamlAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The SAML provider's digest algorithm URL. */\n\t\tdigestMethodUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The SAML provider's issuer URL. */\n\t\tissuerUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The SAML provider's signature algorithm URL. */\n\t\tsignatureMethodUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The SAML provider's single sign-on URL. */\n\t\tsingleSignOnUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.disable_two_factor_requirement event. */\nexport type OrgDisableTwoFactorRequirementAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgDisableTwoFactorRequirementAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.enable_oauth_app_restrictions event. */\nexport type OrgEnableOauthAppRestrictionsAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgEnableOauthAppRestrictionsAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.enable_saml event. */\nexport type OrgEnableSamlAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgEnableSamlAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The SAML provider's digest algorithm URL. */\n\t\tdigestMethodUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The SAML provider's issuer URL. */\n\t\tissuerUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The SAML provider's signature algorithm URL. */\n\t\tsignatureMethodUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The SAML provider's single sign-on URL. */\n\t\tsingleSignOnUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.enable_two_factor_requirement event. */\nexport type OrgEnableTwoFactorRequirementAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgEnableTwoFactorRequirementAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.invite_member event. */\nexport type OrgInviteMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgInviteMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The email address of the organization invitation. */\n\t\temail?: Maybe<Scalars[\"String\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The organization invitation. */\n\t\torganizationInvitation?: Maybe<OrganizationInvitation>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.invite_to_business event. */\nexport type OrgInviteToBusinessAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgInviteToBusinessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.oauth_app_access_approved event. */\nexport type OrgOauthAppAccessApprovedAuditEntry = Node &\n\tAuditEntry &\n\tOauthApplicationAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgOauthAppAccessApprovedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The name of the OAuth Application. */\n\t\toauthApplicationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the OAuth Application */\n\t\toauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the OAuth Application */\n\t\toauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.oauth_app_access_denied event. */\nexport type OrgOauthAppAccessDeniedAuditEntry = Node &\n\tAuditEntry &\n\tOauthApplicationAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgOauthAppAccessDeniedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The name of the OAuth Application. */\n\t\toauthApplicationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the OAuth Application */\n\t\toauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the OAuth Application */\n\t\toauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.oauth_app_access_requested event. */\nexport type OrgOauthAppAccessRequestedAuditEntry = Node &\n\tAuditEntry &\n\tOauthApplicationAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgOauthAppAccessRequestedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The name of the OAuth Application. */\n\t\toauthApplicationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the OAuth Application */\n\t\toauthApplicationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the OAuth Application */\n\t\toauthApplicationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.remove_billing_manager event. */\nexport type OrgRemoveBillingManagerAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgRemoveBillingManagerAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The reason for the billing manager being removed. */\n\t\treason?: Maybe<OrgRemoveBillingManagerAuditEntryReason>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The reason a billing manager was removed from an Organization. */\nexport enum OrgRemoveBillingManagerAuditEntryReason {\n\t/** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n\tTwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n\t/** SAML external identity missing */\n\tSamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n\t/** SAML SSO enforcement requires an external identity */\n\tSamlSsoEnforcementRequiresExternalIdentity = \"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY\",\n}\n\n/** Audit log entry for a org.remove_member event. */\nexport type OrgRemoveMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgRemoveMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The types of membership the member has with the organization. */\n\t\tmembershipTypes?: Maybe<Array<OrgRemoveMemberAuditEntryMembershipType>>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The reason for the member being removed. */\n\t\treason?: Maybe<OrgRemoveMemberAuditEntryReason>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveMemberAuditEntryMembershipType {\n\t/** A direct member is a user that is a member of the Organization. */\n\tDirectMember = \"DIRECT_MEMBER\",\n\t/** Organization administrators have full access and can change several settings, including the names of repositories that belong to the Organization and Owners team membership. In addition, organization admins can delete the organization and all of its repositories. */\n\tAdmin = \"ADMIN\",\n\t/** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n\tBillingManager = \"BILLING_MANAGER\",\n\t/** An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the Organization. */\n\tUnaffiliated = \"UNAFFILIATED\",\n\t/** An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization. */\n\tOutsideCollaborator = \"OUTSIDE_COLLABORATOR\",\n}\n\n/** The reason a member was removed from an Organization. */\nexport enum OrgRemoveMemberAuditEntryReason {\n\t/** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n\tTwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n\t/** SAML external identity missing */\n\tSamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n\t/** SAML SSO enforcement requires an external identity */\n\tSamlSsoEnforcementRequiresExternalIdentity = \"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY\",\n\t/** User account has been deleted */\n\tUserAccountDeleted = \"USER_ACCOUNT_DELETED\",\n\t/** User was removed from organization during account recovery */\n\tTwoFactorAccountRecovery = \"TWO_FACTOR_ACCOUNT_RECOVERY\",\n}\n\n/** Audit log entry for a org.remove_outside_collaborator event. */\nexport type OrgRemoveOutsideCollaboratorAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgRemoveOutsideCollaboratorAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The types of membership the outside collaborator has with the organization. */\n\t\tmembershipTypes?: Maybe<Array<OrgRemoveOutsideCollaboratorAuditEntryMembershipType>>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The reason for the outside collaborator being removed from the Organization. */\n\t\treason?: Maybe<OrgRemoveOutsideCollaboratorAuditEntryReason>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The type of membership a user has with an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryMembershipType {\n\t/** An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization. */\n\tOutsideCollaborator = \"OUTSIDE_COLLABORATOR\",\n\t/** An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the organization. */\n\tUnaffiliated = \"UNAFFILIATED\",\n\t/** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */\n\tBillingManager = \"BILLING_MANAGER\",\n}\n\n/** The reason an outside collaborator was removed from an Organization. */\nexport enum OrgRemoveOutsideCollaboratorAuditEntryReason {\n\t/** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */\n\tTwoFactorRequirementNonCompliance = \"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE\",\n\t/** SAML external identity missing */\n\tSamlExternalIdentityMissing = \"SAML_EXTERNAL_IDENTITY_MISSING\",\n}\n\n/** Audit log entry for a org.restore_member event. */\nexport type OrgRestoreMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgRestoreMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The number of custom email routings for the restored member. */\n\t\trestoredCustomEmailRoutingsCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The number of issue assignemnts for the restored member. */\n\t\trestoredIssueAssignmentsCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** Restored organization membership objects. */\n\t\trestoredMemberships?: Maybe<Array<OrgRestoreMemberAuditEntryMembership>>;\n\t\t/** The number of restored memberships. */\n\t\trestoredMembershipsCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The number of repositories of the restored member. */\n\t\trestoredRepositoriesCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The number of starred repositories for the restored member. */\n\t\trestoredRepositoryStarsCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The number of watched repositories for the restored member. */\n\t\trestoredRepositoryWatchesCount?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Types of memberships that can be restored for an Organization member. */\nexport type OrgRestoreMemberAuditEntryMembership =\n\t| OrgRestoreMemberMembershipOrganizationAuditEntryData\n\t| OrgRestoreMemberMembershipRepositoryAuditEntryData\n\t| OrgRestoreMemberMembershipTeamAuditEntryData;\n\n/** Metadata for an organization membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipOrganizationAuditEntryData = OrganizationAuditEntryData & {\n\t__typename?: \"OrgRestoreMemberMembershipOrganizationAuditEntryData\";\n\t/** The Organization associated with the Audit Entry. */\n\torganization?: Maybe<Organization>;\n\t/** The name of the Organization. */\n\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the organization */\n\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the organization */\n\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Metadata for a repository membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipRepositoryAuditEntryData = RepositoryAuditEntryData & {\n\t__typename?: \"OrgRestoreMemberMembershipRepositoryAuditEntryData\";\n\t/** The repository associated with the action */\n\trepository?: Maybe<Repository>;\n\t/** The name of the repository */\n\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the repository */\n\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the repository */\n\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Metadata for a team membership for org.restore_member actions */\nexport type OrgRestoreMemberMembershipTeamAuditEntryData = TeamAuditEntryData & {\n\t__typename?: \"OrgRestoreMemberMembershipTeamAuditEntryData\";\n\t/** The team associated with the action */\n\tteam?: Maybe<Team>;\n\t/** The name of the team */\n\tteamName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for this team */\n\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for this team */\n\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a org.unblock_user */\nexport type OrgUnblockUserAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgUnblockUserAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user being unblocked by the organization. */\n\t\tblockedUser?: Maybe<User>;\n\t\t/** The username of the blocked user. */\n\t\tblockedUserName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the blocked user. */\n\t\tblockedUserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the blocked user. */\n\t\tblockedUserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a org.update_default_repository_permission */\nexport type OrgUpdateDefaultRepositoryPermissionAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgUpdateDefaultRepositoryPermissionAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The new default repository permission level for the organization. */\n\t\tpermission?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n\t\t/** The former default repository permission level for the organization. */\n\t\tpermissionWas?: Maybe<OrgUpdateDefaultRepositoryPermissionAuditEntryPermission>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The default permission a repository can have in an Organization. */\nexport enum OrgUpdateDefaultRepositoryPermissionAuditEntryPermission {\n\t/** Can read and clone repositories. */\n\tRead = \"READ\",\n\t/** Can read, clone and push to repositories. */\n\tWrite = \"WRITE\",\n\t/** Can read, clone, push, and add collaborators to repositories. */\n\tAdmin = \"ADMIN\",\n\t/** No default permission value. */\n\tNone = \"NONE\",\n}\n\n/** Audit log entry for a org.update_member event. */\nexport type OrgUpdateMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgUpdateMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The new member permission level for the organization. */\n\t\tpermission?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n\t\t/** The former member permission level for the organization. */\n\t\tpermissionWas?: Maybe<OrgUpdateMemberAuditEntryPermission>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The permissions available to members on an Organization. */\nexport enum OrgUpdateMemberAuditEntryPermission {\n\t/** Can read and clone repositories. */\n\tRead = \"READ\",\n\t/** Can read, clone, push, and add collaborators to repositories. */\n\tAdmin = \"ADMIN\",\n}\n\n/** Audit log entry for a org.update_member_repository_creation_permission event. */\nexport type OrgUpdateMemberRepositoryCreationPermissionAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** Can members create repositories in the organization. */\n\t\tcanCreateRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The permission for visibility level of repositories for this organization. */\n\t\tvisibility?: Maybe<OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility>;\n\t};\n\n/** The permissions available for repository creation on an Organization. */\nexport enum OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility {\n\t/** All organization members are restricted from creating any repositories. */\n\tAll = \"ALL\",\n\t/** All organization members are restricted from creating public repositories. */\n\tPublic = \"PUBLIC\",\n\t/** All organization members are allowed to create any repositories. */\n\tNone = \"NONE\",\n\t/** All organization members are restricted from creating private repositories. */\n\tPrivate = \"PRIVATE\",\n\t/** All organization members are restricted from creating internal repositories. */\n\tInternal = \"INTERNAL\",\n\t/** All organization members are restricted from creating public or internal repositories. */\n\tPublicInternal = \"PUBLIC_INTERNAL\",\n\t/** All organization members are restricted from creating private or internal repositories. */\n\tPrivateInternal = \"PRIVATE_INTERNAL\",\n\t/** All organization members are restricted from creating public or private repositories. */\n\tPublicPrivate = \"PUBLIC_PRIVATE\",\n}\n\n/** Audit log entry for a org.update_member_repository_invitation_permission event. */\nexport type OrgUpdateMemberRepositoryInvitationPermissionAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** Can outside collaborators be invited to repositories in the organization. */\n\t\tcanInviteOutsideCollaboratorsToRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type Organization = Node &\n\tActor &\n\tPackageOwner &\n\tProjectOwner &\n\tRepositoryOwner &\n\tUniformResourceLocatable &\n\tMemberStatusable &\n\tProfileOwner &\n\tSponsorable & {\n\t\t__typename?: \"Organization\";\n\t\t/** Determine if this repository owner has any items that can be pinned to their profile. */\n\t\tanyPinnableItems: Scalars[\"Boolean\"];\n\t\t/** Audit log entries of the organization */\n\t\tauditLog: OrganizationAuditEntryConnection;\n\t\t/** A URL pointing to the organization's public avatar. */\n\t\tavatarUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The organization's public profile description. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** The organization's public profile description rendered to HTML. */\n\t\tdescriptionHTML?: Maybe<Scalars[\"String\"]>;\n\t\t/** The organization's public email. */\n\t\temail?: Maybe<Scalars[\"String\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The setting value for whether the organization has an IP allow list enabled. */\n\t\tipAllowListEnabledSetting: IpAllowListEnabledSettingValue;\n\t\t/** The IP addresses that are allowed to access resources owned by the organization. */\n\t\tipAllowListEntries: IpAllowListEntryConnection;\n\t\t/** Whether the organization has verified its profile email and website. */\n\t\tisVerified: Scalars[\"Boolean\"];\n\t\t/** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n\t\titemShowcase: ProfileItemShowcase;\n\t\t/** The organization's public profile location. */\n\t\tlocation?: Maybe<Scalars[\"String\"]>;\n\t\t/** The organization's login name. */\n\t\tlogin: Scalars[\"String\"];\n\t\t/** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n\t\tmemberStatuses: UserStatusConnection;\n\t\t/** A list of users who are members of this organization. */\n\t\tmembersWithRole: OrganizationMemberConnection;\n\t\t/** The organization's public profile name. */\n\t\tname?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path creating a new team */\n\t\tnewTeamResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL creating a new team */\n\t\tnewTeamUrl: Scalars[\"URI\"];\n\t\t/** The billing email for the organization. */\n\t\torganizationBillingEmail?: Maybe<Scalars[\"String\"]>;\n\t\t/** A list of packages under the owner. */\n\t\tpackages: PackageConnection;\n\t\t/** A list of users who have been invited to join this organization. */\n\t\tpendingMembers: UserConnection;\n\t\t/** A list of repositories and gists this profile owner can pin to their profile. */\n\t\tpinnableItems: PinnableItemConnection;\n\t\t/** A list of repositories and gists this profile owner has pinned to their profile */\n\t\tpinnedItems: PinnableItemConnection;\n\t\t/** Returns how many more items this profile owner can pin to their profile. */\n\t\tpinnedItemsRemaining: Scalars[\"Int\"];\n\t\t/** Find project by number. */\n\t\tproject?: Maybe<Project>;\n\t\t/** A list of projects under the owner. */\n\t\tprojects: ProjectConnection;\n\t\t/** The HTTP path listing organization's projects */\n\t\tprojectsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL listing organization's projects */\n\t\tprojectsUrl: Scalars[\"URI\"];\n\t\t/** A list of repositories that the user owns. */\n\t\trepositories: RepositoryConnection;\n\t\t/** Find Repository. */\n\t\trepository?: Maybe<Repository>;\n\t\t/** When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication. */\n\t\trequiresTwoFactorAuthentication?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The HTTP path for this organization. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The Organization's SAML identity providers */\n\t\tsamlIdentityProvider?: Maybe<OrganizationIdentityProvider>;\n\t\t/** The GitHub Sponsors listing for this user. */\n\t\tsponsorsListing?: Maybe<SponsorsListing>;\n\t\t/** This object's sponsorships as the maintainer. */\n\t\tsponsorshipsAsMaintainer: SponsorshipConnection;\n\t\t/** This object's sponsorships as the sponsor. */\n\t\tsponsorshipsAsSponsor: SponsorshipConnection;\n\t\t/** Find an organization's team by its slug. */\n\t\tteam?: Maybe<Team>;\n\t\t/** A list of teams in this organization. */\n\t\tteams: TeamConnection;\n\t\t/** The HTTP path listing organization's teams */\n\t\tteamsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL listing organization's teams */\n\t\tteamsUrl: Scalars[\"URI\"];\n\t\t/** The organization's Twitter username. */\n\t\ttwitterUsername?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this organization. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Organization is adminable by the viewer. */\n\t\tviewerCanAdminister: Scalars[\"Boolean\"];\n\t\t/** Can the viewer pin repositories and gists to the profile? */\n\t\tviewerCanChangePinnedItems: Scalars[\"Boolean\"];\n\t\t/** Can the current viewer create new projects on this owner. */\n\t\tviewerCanCreateProjects: Scalars[\"Boolean\"];\n\t\t/** Viewer can create repositories on this organization */\n\t\tviewerCanCreateRepositories: Scalars[\"Boolean\"];\n\t\t/** Viewer can create teams on this organization. */\n\t\tviewerCanCreateTeams: Scalars[\"Boolean\"];\n\t\t/** Viewer is an active member of this organization. */\n\t\tviewerIsAMember: Scalars[\"Boolean\"];\n\t\t/** The organization's public profile URL. */\n\t\twebsiteUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAnyPinnableItemsArgs = {\n\ttype?: Maybe<PinnableItemType>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAuditLogArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<AuditLogOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationIpAllowListEntriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<IpAllowListEntryOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMemberStatusesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<UserStatusOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationMembersWithRoleArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPackagesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tnames?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\trepositoryId?: Maybe<Scalars[\"ID\"]>;\n\tpackageType?: Maybe<PackageType>;\n\torderBy?: Maybe<PackageOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPendingMembersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnableItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationPinnedItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationProjectsArgs = {\n\torderBy?: Maybe<ProjectOrder>;\n\tsearch?: Maybe<Scalars[\"String\"]>;\n\tstates?: Maybe<Array<ProjectState>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoriesArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\taffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\townerAffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tisFork?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationRepositoryArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsMaintainerArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tincludePrivate?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationSponsorshipsAsSponsorArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamArgs = {\n\tslug: Scalars[\"String\"];\n};\n\n/** An account on GitHub, with one or more owners, that has repositories, members and teams. */\nexport type OrganizationTeamsArgs = {\n\tprivacy?: Maybe<TeamPrivacy>;\n\trole?: Maybe<TeamRole>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tuserLogins?: Maybe<Array<Scalars[\"String\"]>>;\n\torderBy?: Maybe<TeamOrder>;\n\tldapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\trootTeamsOnly?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An audit entry in an organization audit log. */\nexport type OrganizationAuditEntry =\n\t| MembersCanDeleteReposClearAuditEntry\n\t| MembersCanDeleteReposDisableAuditEntry\n\t| MembersCanDeleteReposEnableAuditEntry\n\t| OauthApplicationCreateAuditEntry\n\t| OrgAddBillingManagerAuditEntry\n\t| OrgAddMemberAuditEntry\n\t| OrgBlockUserAuditEntry\n\t| OrgConfigDisableCollaboratorsOnlyAuditEntry\n\t| OrgConfigEnableCollaboratorsOnlyAuditEntry\n\t| OrgCreateAuditEntry\n\t| OrgDisableOauthAppRestrictionsAuditEntry\n\t| OrgDisableSamlAuditEntry\n\t| OrgDisableTwoFactorRequirementAuditEntry\n\t| OrgEnableOauthAppRestrictionsAuditEntry\n\t| OrgEnableSamlAuditEntry\n\t| OrgEnableTwoFactorRequirementAuditEntry\n\t| OrgInviteMemberAuditEntry\n\t| OrgInviteToBusinessAuditEntry\n\t| OrgOauthAppAccessApprovedAuditEntry\n\t| OrgOauthAppAccessDeniedAuditEntry\n\t| OrgOauthAppAccessRequestedAuditEntry\n\t| OrgRemoveBillingManagerAuditEntry\n\t| OrgRemoveMemberAuditEntry\n\t| OrgRemoveOutsideCollaboratorAuditEntry\n\t| OrgRestoreMemberAuditEntry\n\t| OrgUnblockUserAuditEntry\n\t| OrgUpdateDefaultRepositoryPermissionAuditEntry\n\t| OrgUpdateMemberAuditEntry\n\t| OrgUpdateMemberRepositoryCreationPermissionAuditEntry\n\t| OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\n\t| PrivateRepositoryForkingDisableAuditEntry\n\t| PrivateRepositoryForkingEnableAuditEntry\n\t| RepoAccessAuditEntry\n\t| RepoAddMemberAuditEntry\n\t| RepoAddTopicAuditEntry\n\t| RepoArchivedAuditEntry\n\t| RepoChangeMergeSettingAuditEntry\n\t| RepoConfigDisableAnonymousGitAccessAuditEntry\n\t| RepoConfigDisableCollaboratorsOnlyAuditEntry\n\t| RepoConfigDisableContributorsOnlyAuditEntry\n\t| RepoConfigDisableSockpuppetDisallowedAuditEntry\n\t| RepoConfigEnableAnonymousGitAccessAuditEntry\n\t| RepoConfigEnableCollaboratorsOnlyAuditEntry\n\t| RepoConfigEnableContributorsOnlyAuditEntry\n\t| RepoConfigEnableSockpuppetDisallowedAuditEntry\n\t| RepoConfigLockAnonymousGitAccessAuditEntry\n\t| RepoConfigUnlockAnonymousGitAccessAuditEntry\n\t| RepoCreateAuditEntry\n\t| RepoDestroyAuditEntry\n\t| RepoRemoveMemberAuditEntry\n\t| RepoRemoveTopicAuditEntry\n\t| RepositoryVisibilityChangeDisableAuditEntry\n\t| RepositoryVisibilityChangeEnableAuditEntry\n\t| TeamAddMemberAuditEntry\n\t| TeamAddRepositoryAuditEntry\n\t| TeamChangeParentTeamAuditEntry\n\t| TeamRemoveMemberAuditEntry\n\t| TeamRemoveRepositoryAuditEntry;\n\n/** The connection type for OrganizationAuditEntry. */\nexport type OrganizationAuditEntryConnection = {\n\t__typename?: \"OrganizationAuditEntryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<OrganizationAuditEntryEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<OrganizationAuditEntry>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Metadata for an audit entry with action org.* */\nexport type OrganizationAuditEntryData = {\n\t/** The Organization associated with the Audit Entry. */\n\torganization?: Maybe<Organization>;\n\t/** The name of the Organization. */\n\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the organization */\n\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the organization */\n\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An edge in a connection. */\nexport type OrganizationAuditEntryEdge = {\n\t__typename?: \"OrganizationAuditEntryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<OrganizationAuditEntry>;\n};\n\n/** The connection type for Organization. */\nexport type OrganizationConnection = {\n\t__typename?: \"OrganizationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<OrganizationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Organization>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type OrganizationEdge = {\n\t__typename?: \"OrganizationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Organization>;\n};\n\n/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */\nexport type OrganizationIdentityProvider = Node & {\n\t__typename?: \"OrganizationIdentityProvider\";\n\t/** The digest algorithm used to sign SAML requests for the Identity Provider. */\n\tdigestMethod?: Maybe<Scalars[\"URI\"]>;\n\t/** External Identities provisioned by this Identity Provider */\n\texternalIdentities: ExternalIdentityConnection;\n\tid: Scalars[\"ID\"];\n\t/** The x509 certificate used by the Identity Provder to sign assertions and responses. */\n\tidpCertificate?: Maybe<Scalars[\"X509Certificate\"]>;\n\t/** The Issuer Entity ID for the SAML Identity Provider */\n\tissuer?: Maybe<Scalars[\"String\"]>;\n\t/** Organization this Identity Provider belongs to */\n\torganization?: Maybe<Organization>;\n\t/** The signature algorithm used to sign SAML requests for the Identity Provider. */\n\tsignatureMethod?: Maybe<Scalars[\"URI\"]>;\n\t/** The URL endpoint for the Identity Provider's SAML SSO. */\n\tssoUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */\nexport type OrganizationIdentityProviderExternalIdentitiesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An Invitation for a user to an organization. */\nexport type OrganizationInvitation = Node & {\n\t__typename?: \"OrganizationInvitation\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The email address of the user invited to the organization. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The type of invitation that was sent (e.g. email, user). */\n\tinvitationType: OrganizationInvitationType;\n\t/** The user who was invited to the organization. */\n\tinvitee?: Maybe<User>;\n\t/** The user who created the invitation. */\n\tinviter: User;\n\t/** The organization the invite is for */\n\torganization: Organization;\n\t/** The user's pending role in the organization (e.g. member, owner). */\n\trole: OrganizationInvitationRole;\n};\n\n/** The connection type for OrganizationInvitation. */\nexport type OrganizationInvitationConnection = {\n\t__typename?: \"OrganizationInvitationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<OrganizationInvitationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<OrganizationInvitation>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type OrganizationInvitationEdge = {\n\t__typename?: \"OrganizationInvitationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<OrganizationInvitation>;\n};\n\n/** The possible organization invitation roles. */\nexport enum OrganizationInvitationRole {\n\t/** The user is invited to be a direct member of the organization. */\n\tDirectMember = \"DIRECT_MEMBER\",\n\t/** The user is invited to be an admin of the organization. */\n\tAdmin = \"ADMIN\",\n\t/** The user is invited to be a billing manager of the organization. */\n\tBillingManager = \"BILLING_MANAGER\",\n\t/** The user's previous role will be reinstated. */\n\tReinstate = \"REINSTATE\",\n}\n\n/** The possible organization invitation types. */\nexport enum OrganizationInvitationType {\n\t/** The invitation was to an existing user. */\n\tUser = \"USER\",\n\t/** The invitation was to an email address. */\n\tEmail = \"EMAIL\",\n}\n\n/** The connection type for User. */\nexport type OrganizationMemberConnection = {\n\t__typename?: \"OrganizationMemberConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<OrganizationMemberEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user within an organization. */\nexport type OrganizationMemberEdge = {\n\t__typename?: \"OrganizationMemberEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer. */\n\thasTwoFactorEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<User>;\n\t/** The role this user has in the organization. */\n\trole?: Maybe<OrganizationMemberRole>;\n};\n\n/** The possible roles within an organization for its members. */\nexport enum OrganizationMemberRole {\n\t/** The user is a member of the organization. */\n\tMember = \"MEMBER\",\n\t/** The user is an administrator of the organization. */\n\tAdmin = \"ADMIN\",\n}\n\n/** The possible values for the members can create repositories setting on an organization. */\nexport enum OrganizationMembersCanCreateRepositoriesSettingValue {\n\t/** Members will be able to create public and private repositories. */\n\tAll = \"ALL\",\n\t/** Members will be able to create only private repositories. */\n\tPrivate = \"PRIVATE\",\n\t/** Members will not be able to create public or private repositories. */\n\tDisabled = \"DISABLED\",\n}\n\n/** Ordering options for organization connections. */\nexport type OrganizationOrder = {\n\t/** The field to order organizations by. */\n\tfield: OrganizationOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which organization connections can be ordered. */\nexport enum OrganizationOrderField {\n\t/** Order organizations by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order organizations by login */\n\tLogin = \"LOGIN\",\n}\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContext = HovercardContext & {\n\t__typename?: \"OrganizationTeamsHovercardContext\";\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n\t/** Teams in this organization the user is a member of that are relevant */\n\trelevantTeams: TeamConnection;\n\t/** The path for the full team list for this user */\n\tteamsResourcePath: Scalars[\"URI\"];\n\t/** The URL for the full team list for this user */\n\tteamsUrl: Scalars[\"URI\"];\n\t/** The total number of teams the user is on in the organization */\n\ttotalTeamCount: Scalars[\"Int\"];\n};\n\n/** An organization teams hovercard context */\nexport type OrganizationTeamsHovercardContextRelevantTeamsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContext = HovercardContext & {\n\t__typename?: \"OrganizationsHovercardContext\";\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n\t/** Organizations this user is a member of that are relevant */\n\trelevantOrganizations: OrganizationConnection;\n\t/** The total number of organizations this user is in */\n\ttotalOrganizationCount: Scalars[\"Int\"];\n};\n\n/** An organization list hovercard context */\nexport type OrganizationsHovercardContextRelevantOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Information for an uploaded package. */\nexport type Package = Node & {\n\t__typename?: \"Package\";\n\tid: Scalars[\"ID\"];\n\t/** Find the latest version for the package. */\n\tlatestVersion?: Maybe<PackageVersion>;\n\t/** Identifies the name of the package. */\n\tname: Scalars[\"String\"];\n\t/** Identifies the type of the package. */\n\tpackageType: PackageType;\n\t/** The repository this package belongs to. */\n\trepository?: Maybe<Repository>;\n\t/** Statistics about package activity. */\n\tstatistics?: Maybe<PackageStatistics>;\n\t/** Find package version by version string. */\n\tversion?: Maybe<PackageVersion>;\n\t/** list of versions for this package */\n\tversions: PackageVersionConnection;\n};\n\n/** Information for an uploaded package. */\nexport type PackageVersionArgs = {\n\tversion: Scalars[\"String\"];\n};\n\n/** Information for an uploaded package. */\nexport type PackageVersionsArgs = {\n\torderBy?: Maybe<PackageVersionOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Package. */\nexport type PackageConnection = {\n\t__typename?: \"PackageConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PackageEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Package>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageEdge = {\n\t__typename?: \"PackageEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Package>;\n};\n\n/** A file in a package version. */\nexport type PackageFile = Node & {\n\t__typename?: \"PackageFile\";\n\tid: Scalars[\"ID\"];\n\t/** MD5 hash of the file. */\n\tmd5?: Maybe<Scalars[\"String\"]>;\n\t/** Name of the file. */\n\tname: Scalars[\"String\"];\n\t/** The package version this file belongs to. */\n\tpackageVersion?: Maybe<PackageVersion>;\n\t/** SHA1 hash of the file. */\n\tsha1?: Maybe<Scalars[\"String\"]>;\n\t/** SHA256 hash of the file. */\n\tsha256?: Maybe<Scalars[\"String\"]>;\n\t/** Size of the file in bytes. */\n\tsize?: Maybe<Scalars[\"Int\"]>;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** URL to download the asset. */\n\turl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** The connection type for PackageFile. */\nexport type PackageFileConnection = {\n\t__typename?: \"PackageFileConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PackageFileEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PackageFile>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageFileEdge = {\n\t__typename?: \"PackageFileEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PackageFile>;\n};\n\n/** Ways in which lists of package files can be ordered upon return. */\nexport type PackageFileOrder = {\n\t/** The field in which to order package files by. */\n\tfield?: Maybe<PackageFileOrderField>;\n\t/** The direction in which to order package files by the specified field. */\n\tdirection?: Maybe<OrderDirection>;\n};\n\n/** Properties by which package file connections can be ordered. */\nexport enum PackageFileOrderField {\n\t/** Order package files by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Ways in which lists of packages can be ordered upon return. */\nexport type PackageOrder = {\n\t/** The field in which to order packages by. */\n\tfield?: Maybe<PackageOrderField>;\n\t/** The direction in which to order packages by the specified field. */\n\tdirection?: Maybe<OrderDirection>;\n};\n\n/** Properties by which package connections can be ordered. */\nexport enum PackageOrderField {\n\t/** Order packages by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Represents an owner of a package. */\nexport type PackageOwner = {\n\tid: Scalars[\"ID\"];\n\t/** A list of packages under the owner. */\n\tpackages: PackageConnection;\n};\n\n/** Represents an owner of a package. */\nexport type PackageOwnerPackagesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tnames?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\trepositoryId?: Maybe<Scalars[\"ID\"]>;\n\tpackageType?: Maybe<PackageType>;\n\torderBy?: Maybe<PackageOrder>;\n};\n\n/** Represents a object that contains package activity statistics such as downloads. */\nexport type PackageStatistics = {\n\t__typename?: \"PackageStatistics\";\n\t/** Number of times the package was downloaded since it was created. */\n\tdownloadsTotalCount: Scalars[\"Int\"];\n};\n\n/** A version tag contains the mapping between a tag name and a version. */\nexport type PackageTag = Node & {\n\t__typename?: \"PackageTag\";\n\tid: Scalars[\"ID\"];\n\t/** Identifies the tag name of the version. */\n\tname: Scalars[\"String\"];\n\t/** Version that the tag is associated with. */\n\tversion?: Maybe<PackageVersion>;\n};\n\n/** The possible types of a package. */\nexport enum PackageType {\n\t/** An npm package. */\n\tNpm = \"NPM\",\n\t/** A rubygems package. */\n\tRubygems = \"RUBYGEMS\",\n\t/** A maven package. */\n\tMaven = \"MAVEN\",\n\t/** A docker image. */\n\tDocker = \"DOCKER\",\n\t/** A debian package. */\n\tDebian = \"DEBIAN\",\n\t/** A nuget package. */\n\tNuget = \"NUGET\",\n\t/** A python package. */\n\tPypi = \"PYPI\",\n}\n\n/** Information about a specific package version. */\nexport type PackageVersion = Node & {\n\t__typename?: \"PackageVersion\";\n\t/** List of files associated with this package version */\n\tfiles: PackageFileConnection;\n\tid: Scalars[\"ID\"];\n\t/** The package associated with this version. */\n\tpackage?: Maybe<Package>;\n\t/** The platform this version was built for. */\n\tplatform?: Maybe<Scalars[\"String\"]>;\n\t/** Whether or not this version is a pre-release. */\n\tpreRelease: Scalars[\"Boolean\"];\n\t/** The README of this package version. */\n\treadme?: Maybe<Scalars[\"String\"]>;\n\t/** The release associated with this package version. */\n\trelease?: Maybe<Release>;\n\t/** Statistics about package activity. */\n\tstatistics?: Maybe<PackageVersionStatistics>;\n\t/** The package version summary. */\n\tsummary?: Maybe<Scalars[\"String\"]>;\n\t/** The version string. */\n\tversion: Scalars[\"String\"];\n};\n\n/** Information about a specific package version. */\nexport type PackageVersionFilesArgs = {\n\torderBy?: Maybe<PackageFileOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PackageVersion. */\nexport type PackageVersionConnection = {\n\t__typename?: \"PackageVersionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PackageVersionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PackageVersion>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PackageVersionEdge = {\n\t__typename?: \"PackageVersionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PackageVersion>;\n};\n\n/** Ways in which lists of package versions can be ordered upon return. */\nexport type PackageVersionOrder = {\n\t/** The field in which to order package versions by. */\n\tfield?: Maybe<PackageVersionOrderField>;\n\t/** The direction in which to order package versions by the specified field. */\n\tdirection?: Maybe<OrderDirection>;\n};\n\n/** Properties by which package version connections can be ordered. */\nexport enum PackageVersionOrderField {\n\t/** Order package versions by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a object that contains package version activity statistics such as downloads. */\nexport type PackageVersionStatistics = {\n\t__typename?: \"PackageVersionStatistics\";\n\t/** Number of times the package was downloaded since it was created. */\n\tdownloadsTotalCount: Scalars[\"Int\"];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n\t__typename?: \"PageInfo\";\n\t/** When paginating forwards, the cursor to continue. */\n\tendCursor?: Maybe<Scalars[\"String\"]>;\n\t/** When paginating forwards, are there more items? */\n\thasNextPage: Scalars[\"Boolean\"];\n\t/** When paginating backwards, are there more items? */\n\thasPreviousPage: Scalars[\"Boolean\"];\n\t/** When paginating backwards, the cursor to continue. */\n\tstartCursor?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Types that can grant permissions on a repository to a user */\nexport type PermissionGranter = Organization | Repository | Team;\n\n/** A level of permission and source for a user's access to a repository. */\nexport type PermissionSource = {\n\t__typename?: \"PermissionSource\";\n\t/** The organization the repository belongs to. */\n\torganization: Organization;\n\t/** The level of access this source has granted to the user. */\n\tpermission: DefaultRepositoryPermissionField;\n\t/** The source of this permission. */\n\tsource: PermissionGranter;\n};\n\n/** Types that can be pinned to a profile page. */\nexport type PinnableItem = Gist | Repository;\n\n/** The connection type for PinnableItem. */\nexport type PinnableItemConnection = {\n\t__typename?: \"PinnableItemConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PinnableItemEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PinnableItem>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PinnableItemEdge = {\n\t__typename?: \"PinnableItemEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PinnableItem>;\n};\n\n/** Represents items that can be pinned to a profile page or dashboard. */\nexport enum PinnableItemType {\n\t/** A repository. */\n\tRepository = \"REPOSITORY\",\n\t/** A gist. */\n\tGist = \"GIST\",\n\t/** An issue. */\n\tIssue = \"ISSUE\",\n\t/** A project. */\n\tProject = \"PROJECT\",\n\t/** A pull request. */\n\tPullRequest = \"PULL_REQUEST\",\n\t/** A user. */\n\tUser = \"USER\",\n\t/** An organization. */\n\tOrganization = \"ORGANIZATION\",\n\t/** A team. */\n\tTeam = \"TEAM\",\n}\n\n/** Represents a 'pinned' event on a given issue or pull request. */\nexport type PinnedEvent = Node & {\n\t__typename?: \"PinnedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the issue associated with the event. */\n\tissue: Issue;\n};\n\n/** Audit log entry for a private_repository_forking.disable event. */\nexport type PrivateRepositoryForkingDisableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"PrivateRepositoryForkingDisableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a private_repository_forking.enable event. */\nexport type PrivateRepositoryForkingEnableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"PrivateRepositoryForkingEnableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own. */\nexport type ProfileItemShowcase = {\n\t__typename?: \"ProfileItemShowcase\";\n\t/** Whether or not the owner has pinned any repositories or gists. */\n\thasPinnedItems: Scalars[\"Boolean\"];\n\t/** The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned. */\n\titems: PinnableItemConnection;\n};\n\n/** A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own. */\nexport type ProfileItemShowcaseItemsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwner = {\n\t/** Determine if this repository owner has any items that can be pinned to their profile. */\n\tanyPinnableItems: Scalars[\"Boolean\"];\n\t/** The public profile email. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n\titemShowcase: ProfileItemShowcase;\n\t/** The public profile location. */\n\tlocation?: Maybe<Scalars[\"String\"]>;\n\t/** The username used to login. */\n\tlogin: Scalars[\"String\"];\n\t/** The public profile name. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** A list of repositories and gists this profile owner can pin to their profile. */\n\tpinnableItems: PinnableItemConnection;\n\t/** A list of repositories and gists this profile owner has pinned to their profile */\n\tpinnedItems: PinnableItemConnection;\n\t/** Returns how many more items this profile owner can pin to their profile. */\n\tpinnedItemsRemaining: Scalars[\"Int\"];\n\t/** Can the viewer pin repositories and gists to the profile? */\n\tviewerCanChangePinnedItems: Scalars[\"Boolean\"];\n\t/** The public profile website URL. */\n\twebsiteUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerAnyPinnableItemsArgs = {\n\ttype?: Maybe<PinnableItemType>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnableItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents any entity on GitHub that has a profile page. */\nexport type ProfileOwnerPinnedItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type Project = Node &\n\tClosable &\n\tUpdatable & {\n\t\t__typename?: \"Project\";\n\t\t/** The project's description body. */\n\t\tbody?: Maybe<Scalars[\"String\"]>;\n\t\t/** The projects description body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** `true` if the object is closed (definition of closed may depend on type) */\n\t\tclosed: Scalars[\"Boolean\"];\n\t\t/** Identifies the date and time when the object was closed. */\n\t\tclosedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** List of columns in the project */\n\t\tcolumns: ProjectColumnConnection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** The actor who originally created the project. */\n\t\tcreator?: Maybe<Actor>;\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The project's name. */\n\t\tname: Scalars[\"String\"];\n\t\t/** The project's number. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** The project's owner. Currently limited to repositories, organizations, and users. */\n\t\towner: ProjectOwner;\n\t\t/** List of pending cards in this project */\n\t\tpendingCards: ProjectCardConnection;\n\t\t/** The HTTP path for this project */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Whether the project is open or closed. */\n\t\tstate: ProjectState;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this project */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectColumnsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Projects manage issues, pull requests and notes within a project owner. */\nexport type ProjectPendingCardsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tarchivedStates?: Maybe<Array<Maybe<ProjectCardArchivedState>>>;\n};\n\n/** A card in a project. */\nexport type ProjectCard = Node & {\n\t__typename?: \"ProjectCard\";\n\t/**\n\t * The project column this card is associated under. A card may only belong to one\n\t * project column at a time. The column field will be null if the card is created\n\t * in a pending state and has yet to be associated with a column. Once cards are\n\t * associated with a column, they will not become pending in the future.\n\t */\n\tcolumn?: Maybe<ProjectColumn>;\n\t/** The card content item */\n\tcontent?: Maybe<ProjectCardItem>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The actor who created this card */\n\tcreator?: Maybe<Actor>;\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** Whether the card is archived */\n\tisArchived: Scalars[\"Boolean\"];\n\t/** The card note */\n\tnote?: Maybe<Scalars[\"String\"]>;\n\t/** The project that contains this card. */\n\tproject: Project;\n\t/** The HTTP path for this card */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The state of ProjectCard */\n\tstate?: Maybe<ProjectCardState>;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The HTTP URL for this card */\n\turl: Scalars[\"URI\"];\n};\n\n/** The possible archived states of a project card. */\nexport enum ProjectCardArchivedState {\n\t/** A project card that is archived */\n\tArchived = \"ARCHIVED\",\n\t/** A project card that is not archived */\n\tNotArchived = \"NOT_ARCHIVED\",\n}\n\n/** The connection type for ProjectCard. */\nexport type ProjectCardConnection = {\n\t__typename?: \"ProjectCardConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ProjectCardEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ProjectCard>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectCardEdge = {\n\t__typename?: \"ProjectCardEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ProjectCard>;\n};\n\n/** Types that can be inside Project Cards. */\nexport type ProjectCardItem = Issue | PullRequest;\n\n/** Various content states of a ProjectCard */\nexport enum ProjectCardState {\n\t/** The card has content only. */\n\tContentOnly = \"CONTENT_ONLY\",\n\t/** The card has a note only. */\n\tNoteOnly = \"NOTE_ONLY\",\n\t/** The card is redacted. */\n\tRedacted = \"REDACTED\",\n}\n\n/** A column inside a project. */\nexport type ProjectColumn = Node & {\n\t__typename?: \"ProjectColumn\";\n\t/** List of cards in the column */\n\tcards: ProjectCardConnection;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The project column's name. */\n\tname: Scalars[\"String\"];\n\t/** The project that contains this column. */\n\tproject: Project;\n\t/** The semantic purpose of the column */\n\tpurpose?: Maybe<ProjectColumnPurpose>;\n\t/** The HTTP path for this project column */\n\tresourcePath: Scalars[\"URI\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The HTTP URL for this project column */\n\turl: Scalars[\"URI\"];\n};\n\n/** A column inside a project. */\nexport type ProjectColumnCardsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tarchivedStates?: Maybe<Array<Maybe<ProjectCardArchivedState>>>;\n};\n\n/** The connection type for ProjectColumn. */\nexport type ProjectColumnConnection = {\n\t__typename?: \"ProjectColumnConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ProjectColumnEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ProjectColumn>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectColumnEdge = {\n\t__typename?: \"ProjectColumnEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ProjectColumn>;\n};\n\n/** The semantic purpose of the column - todo, in progress, or done. */\nexport enum ProjectColumnPurpose {\n\t/** The column contains cards still to be worked on */\n\tTodo = \"TODO\",\n\t/** The column contains cards which are currently being worked on */\n\tInProgress = \"IN_PROGRESS\",\n\t/** The column contains cards which are complete */\n\tDone = \"DONE\",\n}\n\n/** A list of projects associated with the owner. */\nexport type ProjectConnection = {\n\t__typename?: \"ProjectConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ProjectEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Project>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ProjectEdge = {\n\t__typename?: \"ProjectEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Project>;\n};\n\n/** Ways in which lists of projects can be ordered upon return. */\nexport type ProjectOrder = {\n\t/** The field in which to order projects by. */\n\tfield: ProjectOrderField;\n\t/** The direction in which to order projects by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which project connections can be ordered. */\nexport enum ProjectOrderField {\n\t/** Order projects by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order projects by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order projects by name */\n\tName = \"NAME\",\n}\n\n/** Represents an owner of a Project. */\nexport type ProjectOwner = {\n\tid: Scalars[\"ID\"];\n\t/** Find project by number. */\n\tproject?: Maybe<Project>;\n\t/** A list of projects under the owner. */\n\tprojects: ProjectConnection;\n\t/** The HTTP path listing owners projects */\n\tprojectsResourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL listing owners projects */\n\tprojectsUrl: Scalars[\"URI\"];\n\t/** Can the current viewer create new projects on this owner. */\n\tviewerCanCreateProjects: Scalars[\"Boolean\"];\n};\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** Represents an owner of a Project. */\nexport type ProjectOwnerProjectsArgs = {\n\torderBy?: Maybe<ProjectOrder>;\n\tsearch?: Maybe<Scalars[\"String\"]>;\n\tstates?: Maybe<Array<ProjectState>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** State of the project; either 'open' or 'closed' */\nexport enum ProjectState {\n\t/** The project is open. */\n\tOpen = \"OPEN\",\n\t/** The project is closed. */\n\tClosed = \"CLOSED\",\n}\n\n/** GitHub-provided templates for Projects */\nexport enum ProjectTemplate {\n\t/** Create a board with columns for To do, In progress and Done. */\n\tBasicKanban = \"BASIC_KANBAN\",\n\t/** Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns. */\n\tAutomatedKanbanV2 = \"AUTOMATED_KANBAN_V2\",\n\t/** Create a board with triggers to automatically move cards across columns with review automation. */\n\tAutomatedReviewsKanban = \"AUTOMATED_REVIEWS_KANBAN\",\n\t/** Create a board to triage and prioritize bugs with To do, priority, and Done columns. */\n\tBugTriage = \"BUG_TRIAGE\",\n}\n\n/** A user's public key. */\nexport type PublicKey = Node & {\n\t__typename?: \"PublicKey\";\n\t/** The last time this authorization was used to perform an action. Values will be null for keys not owned by the user. */\n\taccessedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user. */\n\tcreatedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** The fingerprint for this PublicKey. */\n\tfingerprint: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user. */\n\tisReadOnly?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The public key string. */\n\tkey: Scalars[\"String\"];\n\t/** Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user. */\n\tupdatedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** The connection type for PublicKey. */\nexport type PublicKeyConnection = {\n\t__typename?: \"PublicKeyConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PublicKeyEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PublicKey>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PublicKeyEdge = {\n\t__typename?: \"PublicKeyEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PublicKey>;\n};\n\n/** A repository pull request. */\nexport type PullRequest = Node &\n\tAssignable &\n\tClosable &\n\tComment &\n\tUpdatable &\n\tUpdatableComment &\n\tLabelable &\n\tLockable &\n\tReactable &\n\tRepositoryNode &\n\tSubscribable &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"PullRequest\";\n\t\t/** Reason that the conversation was locked. */\n\t\tactiveLockReason?: Maybe<LockReason>;\n\t\t/** The number of additions in this pull request. */\n\t\tadditions: Scalars[\"Int\"];\n\t\t/** A list of Users assigned to this object. */\n\t\tassignees: UserConnection;\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** Identifies the base Ref associated with the pull request. */\n\t\tbaseRef?: Maybe<Ref>;\n\t\t/** Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted. */\n\t\tbaseRefName: Scalars[\"String\"];\n\t\t/** Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted. */\n\t\tbaseRefOid: Scalars[\"GitObjectID\"];\n\t\t/** The repository associated with this pull request's base Ref. */\n\t\tbaseRepository?: Maybe<Repository>;\n\t\t/** The body as Markdown. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** The number of changed files in this pull request. */\n\t\tchangedFiles: Scalars[\"Int\"];\n\t\t/** The HTTP path for the checks of this pull request. */\n\t\tchecksResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for the checks of this pull request. */\n\t\tchecksUrl: Scalars[\"URI\"];\n\t\t/** `true` if the pull request is closed */\n\t\tclosed: Scalars[\"Boolean\"];\n\t\t/** Identifies the date and time when the object was closed. */\n\t\tclosedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of comments associated with the pull request. */\n\t\tcomments: IssueCommentConnection;\n\t\t/** A list of commits present in this pull request's head branch not present in the base branch. */\n\t\tcommits: PullRequestCommitConnection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The number of deletions in this pull request. */\n\t\tdeletions: Scalars[\"Int\"];\n\t\t/** The actor who edited this pull request's body. */\n\t\teditor?: Maybe<Actor>;\n\t\t/** Lists the files changed within this pull request. */\n\t\tfiles?: Maybe<PullRequestChangedFileConnection>;\n\t\t/** Identifies the head Ref associated with the pull request. */\n\t\theadRef?: Maybe<Ref>;\n\t\t/** Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted. */\n\t\theadRefName: Scalars[\"String\"];\n\t\t/** Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted. */\n\t\theadRefOid: Scalars[\"GitObjectID\"];\n\t\t/** The repository associated with this pull request's head Ref. */\n\t\theadRepository?: Maybe<Repository>;\n\t\t/** The owner of the repository associated with this pull request's head Ref. */\n\t\theadRepositoryOwner?: Maybe<RepositoryOwner>;\n\t\t/** The hovercard information for this issue */\n\t\thovercard: Hovercard;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** The head and base repositories are different. */\n\t\tisCrossRepository: Scalars[\"Boolean\"];\n\t\t/** Identifies if the pull request is a draft. */\n\t\tisDraft: Scalars[\"Boolean\"];\n\t\t/** A list of labels associated with the object. */\n\t\tlabels?: Maybe<LabelConnection>;\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** `true` if the pull request is locked */\n\t\tlocked: Scalars[\"Boolean\"];\n\t\t/** Indicates whether maintainers can modify the pull request. */\n\t\tmaintainerCanModify: Scalars[\"Boolean\"];\n\t\t/** The commit that was created when this pull request was merged. */\n\t\tmergeCommit?: Maybe<Commit>;\n\t\t/** Whether or not the pull request can be merged based on the existence of merge conflicts. */\n\t\tmergeable: MergeableState;\n\t\t/** Whether or not the pull request was merged. */\n\t\tmerged: Scalars[\"Boolean\"];\n\t\t/** The date and time that the pull request was merged. */\n\t\tmergedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** The actor who merged the pull request. */\n\t\tmergedBy?: Maybe<Actor>;\n\t\t/** Identifies the milestone associated with the pull request. */\n\t\tmilestone?: Maybe<Milestone>;\n\t\t/** Identifies the pull request number. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** A list of Users that are participating in the Pull Request conversation. */\n\t\tparticipants: UserConnection;\n\t\t/** The permalink to the pull request. */\n\t\tpermalink: Scalars[\"URI\"];\n\t\t/** The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request. */\n\t\tpotentialMergeCommit?: Maybe<Commit>;\n\t\t/** List of project cards associated with this pull request. */\n\t\tprojectCards: ProjectCardConnection;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path for this pull request. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP path for reverting this pull request. */\n\t\trevertResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for reverting this pull request. */\n\t\trevertUrl: Scalars[\"URI\"];\n\t\t/** The current status of this pull request with respect to code review. */\n\t\treviewDecision?: Maybe<PullRequestReviewDecision>;\n\t\t/** A list of review requests associated with the pull request. */\n\t\treviewRequests?: Maybe<ReviewRequestConnection>;\n\t\t/** The list of all review threads for this pull request. */\n\t\treviewThreads: PullRequestReviewThreadConnection;\n\t\t/** A list of reviews associated with the pull request. */\n\t\treviews?: Maybe<PullRequestReviewConnection>;\n\t\t/** Identifies the state of the pull request. */\n\t\tstate: PullRequestState;\n\t\t/** A list of reviewer suggestions based on commit history and past review comments. */\n\t\tsuggestedReviewers: Array<Maybe<SuggestedReviewer>>;\n\t\t/**\n\t\t * A list of events, comments, commits, etc. associated with the pull request.\n\t\t * @deprecated `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.\n\t\t */\n\t\ttimeline: PullRequestTimelineConnection;\n\t\t/** A list of events, comments, commits, etc. associated with the pull request. */\n\t\ttimelineItems: PullRequestTimelineItemsConnection;\n\t\t/** Identifies the pull request title. */\n\t\ttitle: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this pull request. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Whether or not the viewer can apply suggestion. */\n\t\tviewerCanApplySuggestion: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t};\n\n/** A repository pull request. */\nexport type PullRequestAssigneesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestCommitsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestFilesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestHovercardArgs = {\n\tincludeNotificationContexts?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestLabelsArgs = {\n\torderBy?: Maybe<LabelOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestParticipantsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestProjectCardsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tarchivedStates?: Maybe<Array<Maybe<ProjectCardArchivedState>>>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewRequestsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewThreadsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestReviewsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tstates?: Maybe<Array<PullRequestReviewState>>;\n\tauthor?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestTimelineArgs = {\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestTimelineItemsArgs = {\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n\tskip?: Maybe<Scalars[\"Int\"]>;\n\titemTypes?: Maybe<Array<PullRequestTimelineItemsItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository pull request. */\nexport type PullRequestUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A file changed in a pull request. */\nexport type PullRequestChangedFile = {\n\t__typename?: \"PullRequestChangedFile\";\n\t/** The number of additions to the file. */\n\tadditions: Scalars[\"Int\"];\n\t/** The number of deletions to the file. */\n\tdeletions: Scalars[\"Int\"];\n\t/** The path of the file. */\n\tpath: Scalars[\"String\"];\n};\n\n/** The connection type for PullRequestChangedFile. */\nexport type PullRequestChangedFileConnection = {\n\t__typename?: \"PullRequestChangedFileConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestChangedFileEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestChangedFile>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestChangedFileEdge = {\n\t__typename?: \"PullRequestChangedFileEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestChangedFile>;\n};\n\n/** Represents a Git commit part of a pull request. */\nexport type PullRequestCommit = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"PullRequestCommit\";\n\t\t/** The Git commit object */\n\t\tcommit: Commit;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The pull request this commit belongs to */\n\t\tpullRequest: PullRequest;\n\t\t/** The HTTP path for this pull request commit */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this pull request commit */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThread = Node &\n\tRepositoryNode & {\n\t\t__typename?: \"PullRequestCommitCommentThread\";\n\t\t/** The comments that exist in this thread. */\n\t\tcomments: CommitCommentConnection;\n\t\t/** The commit the comments were made on. */\n\t\tcommit: Commit;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The file the comments were made on. */\n\t\tpath?: Maybe<Scalars[\"String\"]>;\n\t\t/** The position in the diff for the commit that the comment was made on. */\n\t\tposition?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The pull request this commit comment thread belongs to */\n\t\tpullRequest: PullRequest;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t};\n\n/** Represents a commit comment thread part of a pull request. */\nexport type PullRequestCommitCommentThreadCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PullRequestCommit. */\nexport type PullRequestCommitConnection = {\n\t__typename?: \"PullRequestCommitConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestCommitEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestCommit>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestCommitEdge = {\n\t__typename?: \"PullRequestCommitEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestCommit>;\n};\n\n/** The connection type for PullRequest. */\nexport type PullRequestConnection = {\n\t__typename?: \"PullRequestConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequest>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepository = {\n\t__typename?: \"PullRequestContributionsByRepository\";\n\t/** The pull request contributions. */\n\tcontributions: CreatedPullRequestContributionConnection;\n\t/** The repository in which the pull requests were opened. */\n\trepository: Repository;\n};\n\n/** This aggregates pull requests opened by a user within one repository. */\nexport type PullRequestContributionsByRepositoryContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** An edge in a connection. */\nexport type PullRequestEdge = {\n\t__typename?: \"PullRequestEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequest>;\n};\n\n/** Represents available types of methods to use when merging a pull request. */\nexport enum PullRequestMergeMethod {\n\t/** Add all commits from the head branch to the base branch with a merge commit. */\n\tMerge = \"MERGE\",\n\t/** Combine all commits from the head branch into a single commit in the base branch. */\n\tSquash = \"SQUASH\",\n\t/** Add all commits from the head branch onto the base branch individually. */\n\tRebase = \"REBASE\",\n}\n\n/** Ways in which lists of issues can be ordered upon return. */\nexport type PullRequestOrder = {\n\t/** The field in which to order pull requests by. */\n\tfield: PullRequestOrderField;\n\t/** The direction in which to order pull requests by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which pull_requests connections can be ordered. */\nexport enum PullRequestOrderField {\n\t/** Order pull_requests by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order pull_requests by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n}\n\n/** A review object for a given pull request. */\nexport type PullRequestReview = Node &\n\tComment &\n\tDeletable &\n\tUpdatable &\n\tUpdatableComment &\n\tReactable &\n\tRepositoryNode & {\n\t\t__typename?: \"PullRequestReview\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** Identifies the pull request review body. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body of this review rendered as plain text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** A list of review comments for the current pull request review. */\n\t\tcomments: PullRequestReviewCommentConnection;\n\t\t/** Identifies the commit associated with this pull request review. */\n\t\tcommit?: Maybe<Commit>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of teams that this review was made on behalf of. */\n\t\tonBehalfOf: TeamConnection;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the pull request associated with this pull request review. */\n\t\tpullRequest: PullRequest;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path permalink for this PullRequestReview. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the current state of the pull request review. */\n\t\tstate: PullRequestReviewState;\n\t\t/** Identifies when the Pull Request Review was submitted */\n\t\tsubmittedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL permalink for this PullRequestReview. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewOnBehalfOfArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** A review object for a given pull request. */\nexport type PullRequestReviewUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewComment = Node &\n\tComment &\n\tDeletable &\n\tMinimizable &\n\tUpdatable &\n\tUpdatableComment &\n\tReactable &\n\tRepositoryNode & {\n\t\t__typename?: \"PullRequestReviewComment\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the subject of the comment. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** The comment body of this review comment. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The comment body of this review comment rendered as plain text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** Identifies the commit associated with the comment. */\n\t\tcommit?: Maybe<Commit>;\n\t\t/** Identifies when the comment was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The diff hunk to which the comment applies. */\n\t\tdiffHunk: Scalars[\"String\"];\n\t\t/** Identifies when the comment was created in a draft state. */\n\t\tdraftedAt: Scalars[\"DateTime\"];\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not a comment has been minimized. */\n\t\tisMinimized: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Returns why the comment was minimized. */\n\t\tminimizedReason?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the original commit associated with the comment. */\n\t\toriginalCommit?: Maybe<Commit>;\n\t\t/** The original line index in the diff to which the comment applies. */\n\t\toriginalPosition: Scalars[\"Int\"];\n\t\t/** Identifies when the comment body is outdated */\n\t\toutdated: Scalars[\"Boolean\"];\n\t\t/** The path to which the comment applies. */\n\t\tpath: Scalars[\"String\"];\n\t\t/** The line index in the diff to which the comment applies. */\n\t\tposition?: Maybe<Scalars[\"Int\"]>;\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** The pull request associated with this review comment. */\n\t\tpullRequest: PullRequest;\n\t\t/** The pull request review associated with this review comment. */\n\t\tpullRequestReview?: Maybe<PullRequestReview>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The comment this is a reply to. */\n\t\treplyTo?: Maybe<PullRequestReviewComment>;\n\t\t/** The repository associated with this node. */\n\t\trepository: Repository;\n\t\t/** The HTTP path permalink for this review comment. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the state of the comment. */\n\t\tstate: PullRequestReviewCommentState;\n\t\t/** Identifies when the comment was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL permalink for this review comment. */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can minimize this object. */\n\t\tviewerCanMinimize: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** A review comment associated with a given repository pull request. */\nexport type PullRequestReviewCommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for PullRequestReviewComment. */\nexport type PullRequestReviewCommentConnection = {\n\t__typename?: \"PullRequestReviewCommentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestReviewCommentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestReviewComment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewCommentEdge = {\n\t__typename?: \"PullRequestReviewCommentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestReviewComment>;\n};\n\n/** The possible states of a pull request review comment. */\nexport enum PullRequestReviewCommentState {\n\t/** A comment that is part of a pending review */\n\tPending = \"PENDING\",\n\t/** A comment that is part of a submitted review */\n\tSubmitted = \"SUBMITTED\",\n}\n\n/** The connection type for PullRequestReview. */\nexport type PullRequestReviewConnection = {\n\t__typename?: \"PullRequestReviewConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestReviewEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestReview>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepository = {\n\t__typename?: \"PullRequestReviewContributionsByRepository\";\n\t/** The pull request review contributions. */\n\tcontributions: CreatedPullRequestReviewContributionConnection;\n\t/** The repository in which the pull request reviews were made. */\n\trepository: Repository;\n};\n\n/** This aggregates pull request reviews made by a user within one repository. */\nexport type PullRequestReviewContributionsByRepositoryContributionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<ContributionOrder>;\n};\n\n/** The review status of a pull request. */\nexport enum PullRequestReviewDecision {\n\t/** Changes have been requested on the pull request. */\n\tChangesRequested = \"CHANGES_REQUESTED\",\n\t/** The pull request has received an approving review. */\n\tApproved = \"APPROVED\",\n\t/** A review is required before the pull request can be merged. */\n\tReviewRequired = \"REVIEW_REQUIRED\",\n}\n\n/** An edge in a connection. */\nexport type PullRequestReviewEdge = {\n\t__typename?: \"PullRequestReviewEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestReview>;\n};\n\n/** The possible events to perform on a pull request review. */\nexport enum PullRequestReviewEvent {\n\t/** Submit general feedback without explicit approval. */\n\tComment = \"COMMENT\",\n\t/** Submit feedback and approve merging these changes. */\n\tApprove = \"APPROVE\",\n\t/** Submit feedback that must be addressed before merging. */\n\tRequestChanges = \"REQUEST_CHANGES\",\n\t/** Dismiss review so it now longer effects merging. */\n\tDismiss = \"DISMISS\",\n}\n\n/** The possible states of a pull request review. */\nexport enum PullRequestReviewState {\n\t/** A review that has not yet been submitted. */\n\tPending = \"PENDING\",\n\t/** An informational review. */\n\tCommented = \"COMMENTED\",\n\t/** A review allowing the pull request to merge. */\n\tApproved = \"APPROVED\",\n\t/** A review blocking the pull request from merging. */\n\tChangesRequested = \"CHANGES_REQUESTED\",\n\t/** A review that has been dismissed. */\n\tDismissed = \"DISMISSED\",\n}\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThread = Node & {\n\t__typename?: \"PullRequestReviewThread\";\n\t/** A list of pull request comments associated with the thread. */\n\tcomments: PullRequestReviewCommentConnection;\n\t/** The side of the diff on which this thread was placed. */\n\tdiffSide: DiffSide;\n\tid: Scalars[\"ID\"];\n\t/** Whether this thread has been resolved */\n\tisResolved: Scalars[\"Boolean\"];\n\t/** The line in the file to which this thread refers */\n\tline?: Maybe<Scalars[\"Int\"]>;\n\t/** The original line in the file to which this thread refers. */\n\toriginalLine?: Maybe<Scalars[\"Int\"]>;\n\t/** The original start line in the file to which this thread refers (multi-line only). */\n\toriginalStartLine?: Maybe<Scalars[\"Int\"]>;\n\t/** Identifies the pull request associated with this thread. */\n\tpullRequest: PullRequest;\n\t/** Identifies the repository associated with this thread. */\n\trepository: Repository;\n\t/** The user who resolved this thread */\n\tresolvedBy?: Maybe<User>;\n\t/** The side of the diff that the first line of the thread starts on (multi-line only) */\n\tstartDiffSide?: Maybe<DiffSide>;\n\t/** The start line in the file to which this thread refers (multi-line only) */\n\tstartLine?: Maybe<Scalars[\"Int\"]>;\n\t/** Whether or not the viewer can resolve this thread */\n\tviewerCanResolve: Scalars[\"Boolean\"];\n\t/** Whether or not the viewer can unresolve this thread */\n\tviewerCanUnresolve: Scalars[\"Boolean\"];\n};\n\n/** A threaded list of comments for a given pull request. */\nexport type PullRequestReviewThreadCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tskip?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Review comment threads for a pull request review. */\nexport type PullRequestReviewThreadConnection = {\n\t__typename?: \"PullRequestReviewThreadConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestReviewThreadEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestReviewThread>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestReviewThreadEdge = {\n\t__typename?: \"PullRequestReviewThreadEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\nexport type PullRequestRevisionMarker = {\n\t__typename?: \"PullRequestRevisionMarker\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The last commit the viewer has seen. */\n\tlastSeenCommit: Commit;\n\t/** The pull request to which the marker belongs. */\n\tpullRequest: PullRequest;\n};\n\n/** The possible states of a pull request. */\nexport enum PullRequestState {\n\t/** A pull request that is still open. */\n\tOpen = \"OPEN\",\n\t/** A pull request that has been closed without being merged. */\n\tClosed = \"CLOSED\",\n\t/** A pull request that has been closed by being merged. */\n\tMerged = \"MERGED\",\n}\n\n/** The connection type for PullRequestTimelineItem. */\nexport type PullRequestTimelineConnection = {\n\t__typename?: \"PullRequestTimelineConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestTimelineItemEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestTimelineItem>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An item in an pull request timeline */\nexport type PullRequestTimelineItem =\n\t| AssignedEvent\n\t| BaseRefForcePushedEvent\n\t| ClosedEvent\n\t| Commit\n\t| CommitCommentThread\n\t| CrossReferencedEvent\n\t| DemilestonedEvent\n\t| DeployedEvent\n\t| DeploymentEnvironmentChangedEvent\n\t| HeadRefDeletedEvent\n\t| HeadRefForcePushedEvent\n\t| HeadRefRestoredEvent\n\t| IssueComment\n\t| LabeledEvent\n\t| LockedEvent\n\t| MergedEvent\n\t| MilestonedEvent\n\t| PullRequestReview\n\t| PullRequestReviewComment\n\t| PullRequestReviewThread\n\t| ReferencedEvent\n\t| RenamedTitleEvent\n\t| ReopenedEvent\n\t| ReviewDismissedEvent\n\t| ReviewRequestRemovedEvent\n\t| ReviewRequestedEvent\n\t| SubscribedEvent\n\t| UnassignedEvent\n\t| UnlabeledEvent\n\t| UnlockedEvent\n\t| UnsubscribedEvent\n\t| UserBlockedEvent;\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemEdge = {\n\t__typename?: \"PullRequestTimelineItemEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestTimelineItem>;\n};\n\n/** An item in a pull request timeline */\nexport type PullRequestTimelineItems =\n\t| AddedToProjectEvent\n\t| AssignedEvent\n\t| AutomaticBaseChangeFailedEvent\n\t| AutomaticBaseChangeSucceededEvent\n\t| BaseRefChangedEvent\n\t| BaseRefForcePushedEvent\n\t| ClosedEvent\n\t| CommentDeletedEvent\n\t| ConnectedEvent\n\t| ConvertToDraftEvent\n\t| ConvertedNoteToIssueEvent\n\t| CrossReferencedEvent\n\t| DemilestonedEvent\n\t| DeployedEvent\n\t| DeploymentEnvironmentChangedEvent\n\t| DisconnectedEvent\n\t| HeadRefDeletedEvent\n\t| HeadRefForcePushedEvent\n\t| HeadRefRestoredEvent\n\t| IssueComment\n\t| LabeledEvent\n\t| LockedEvent\n\t| MarkedAsDuplicateEvent\n\t| MentionedEvent\n\t| MergedEvent\n\t| MilestonedEvent\n\t| MovedColumnsInProjectEvent\n\t| PinnedEvent\n\t| PullRequestCommit\n\t| PullRequestCommitCommentThread\n\t| PullRequestReview\n\t| PullRequestReviewThread\n\t| PullRequestRevisionMarker\n\t| ReadyForReviewEvent\n\t| ReferencedEvent\n\t| RemovedFromProjectEvent\n\t| RenamedTitleEvent\n\t| ReopenedEvent\n\t| ReviewDismissedEvent\n\t| ReviewRequestRemovedEvent\n\t| ReviewRequestedEvent\n\t| SubscribedEvent\n\t| TransferredEvent\n\t| UnassignedEvent\n\t| UnlabeledEvent\n\t| UnlockedEvent\n\t| UnmarkedAsDuplicateEvent\n\t| UnpinnedEvent\n\t| UnsubscribedEvent\n\t| UserBlockedEvent;\n\n/** The connection type for PullRequestTimelineItems. */\nexport type PullRequestTimelineItemsConnection = {\n\t__typename?: \"PullRequestTimelineItemsConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PullRequestTimelineItemsEdge>>>;\n\t/** Identifies the count of items after applying `before` and `after` filters. */\n\tfilteredCount: Scalars[\"Int\"];\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PullRequestTimelineItems>>>;\n\t/** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */\n\tpageCount: Scalars[\"Int\"];\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** Identifies the date and time when the timeline was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** An edge in a connection. */\nexport type PullRequestTimelineItemsEdge = {\n\t__typename?: \"PullRequestTimelineItemsEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PullRequestTimelineItems>;\n};\n\n/** The possible item types found in a timeline. */\nexport enum PullRequestTimelineItemsItemType {\n\t/** Represents a Git commit part of a pull request. */\n\tPullRequestCommit = \"PULL_REQUEST_COMMIT\",\n\t/** Represents a commit comment thread part of a pull request. */\n\tPullRequestCommitCommentThread = \"PULL_REQUEST_COMMIT_COMMENT_THREAD\",\n\t/** A review object for a given pull request. */\n\tPullRequestReview = \"PULL_REQUEST_REVIEW\",\n\t/** A threaded list of comments for a given pull request. */\n\tPullRequestReviewThread = \"PULL_REQUEST_REVIEW_THREAD\",\n\t/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */\n\tPullRequestRevisionMarker = \"PULL_REQUEST_REVISION_MARKER\",\n\t/** Represents a 'automatic_base_change_failed' event on a given pull request. */\n\tAutomaticBaseChangeFailedEvent = \"AUTOMATIC_BASE_CHANGE_FAILED_EVENT\",\n\t/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */\n\tAutomaticBaseChangeSucceededEvent = \"AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT\",\n\t/** Represents a 'base_ref_changed' event on a given issue or pull request. */\n\tBaseRefChangedEvent = \"BASE_REF_CHANGED_EVENT\",\n\t/** Represents a 'base_ref_force_pushed' event on a given pull request. */\n\tBaseRefForcePushedEvent = \"BASE_REF_FORCE_PUSHED_EVENT\",\n\t/** Represents a 'deployed' event on a given pull request. */\n\tDeployedEvent = \"DEPLOYED_EVENT\",\n\t/** Represents a 'deployment_environment_changed' event on a given pull request. */\n\tDeploymentEnvironmentChangedEvent = \"DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT\",\n\t/** Represents a 'head_ref_deleted' event on a given pull request. */\n\tHeadRefDeletedEvent = \"HEAD_REF_DELETED_EVENT\",\n\t/** Represents a 'head_ref_force_pushed' event on a given pull request. */\n\tHeadRefForcePushedEvent = \"HEAD_REF_FORCE_PUSHED_EVENT\",\n\t/** Represents a 'head_ref_restored' event on a given pull request. */\n\tHeadRefRestoredEvent = \"HEAD_REF_RESTORED_EVENT\",\n\t/** Represents a 'merged' event on a given pull request. */\n\tMergedEvent = \"MERGED_EVENT\",\n\t/** Represents a 'review_dismissed' event on a given issue or pull request. */\n\tReviewDismissedEvent = \"REVIEW_DISMISSED_EVENT\",\n\t/** Represents an 'review_requested' event on a given pull request. */\n\tReviewRequestedEvent = \"REVIEW_REQUESTED_EVENT\",\n\t/** Represents an 'review_request_removed' event on a given pull request. */\n\tReviewRequestRemovedEvent = \"REVIEW_REQUEST_REMOVED_EVENT\",\n\t/** Represents a 'ready_for_review' event on a given pull request. */\n\tReadyForReviewEvent = \"READY_FOR_REVIEW_EVENT\",\n\t/** Represents a 'convert_to_draft' event on a given pull request. */\n\tConvertToDraftEvent = \"CONVERT_TO_DRAFT_EVENT\",\n\t/** Represents a comment on an Issue. */\n\tIssueComment = \"ISSUE_COMMENT\",\n\t/** Represents a mention made by one issue or pull request to another. */\n\tCrossReferencedEvent = \"CROSS_REFERENCED_EVENT\",\n\t/** Represents a 'added_to_project' event on a given issue or pull request. */\n\tAddedToProjectEvent = \"ADDED_TO_PROJECT_EVENT\",\n\t/** Represents an 'assigned' event on any assignable object. */\n\tAssignedEvent = \"ASSIGNED_EVENT\",\n\t/** Represents a 'closed' event on any `Closable`. */\n\tClosedEvent = \"CLOSED_EVENT\",\n\t/** Represents a 'comment_deleted' event on a given issue or pull request. */\n\tCommentDeletedEvent = \"COMMENT_DELETED_EVENT\",\n\t/** Represents a 'connected' event on a given issue or pull request. */\n\tConnectedEvent = \"CONNECTED_EVENT\",\n\t/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */\n\tConvertedNoteToIssueEvent = \"CONVERTED_NOTE_TO_ISSUE_EVENT\",\n\t/** Represents a 'demilestoned' event on a given issue or pull request. */\n\tDemilestonedEvent = \"DEMILESTONED_EVENT\",\n\t/** Represents a 'disconnected' event on a given issue or pull request. */\n\tDisconnectedEvent = \"DISCONNECTED_EVENT\",\n\t/** Represents a 'labeled' event on a given issue or pull request. */\n\tLabeledEvent = \"LABELED_EVENT\",\n\t/** Represents a 'locked' event on a given issue or pull request. */\n\tLockedEvent = \"LOCKED_EVENT\",\n\t/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */\n\tMarkedAsDuplicateEvent = \"MARKED_AS_DUPLICATE_EVENT\",\n\t/** Represents a 'mentioned' event on a given issue or pull request. */\n\tMentionedEvent = \"MENTIONED_EVENT\",\n\t/** Represents a 'milestoned' event on a given issue or pull request. */\n\tMilestonedEvent = \"MILESTONED_EVENT\",\n\t/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */\n\tMovedColumnsInProjectEvent = \"MOVED_COLUMNS_IN_PROJECT_EVENT\",\n\t/** Represents a 'pinned' event on a given issue or pull request. */\n\tPinnedEvent = \"PINNED_EVENT\",\n\t/** Represents a 'referenced' event on a given `ReferencedSubject`. */\n\tReferencedEvent = \"REFERENCED_EVENT\",\n\t/** Represents a 'removed_from_project' event on a given issue or pull request. */\n\tRemovedFromProjectEvent = \"REMOVED_FROM_PROJECT_EVENT\",\n\t/** Represents a 'renamed' event on a given issue or pull request */\n\tRenamedTitleEvent = \"RENAMED_TITLE_EVENT\",\n\t/** Represents a 'reopened' event on any `Closable`. */\n\tReopenedEvent = \"REOPENED_EVENT\",\n\t/** Represents a 'subscribed' event on a given `Subscribable`. */\n\tSubscribedEvent = \"SUBSCRIBED_EVENT\",\n\t/** Represents a 'transferred' event on a given issue or pull request. */\n\tTransferredEvent = \"TRANSFERRED_EVENT\",\n\t/** Represents an 'unassigned' event on any assignable object. */\n\tUnassignedEvent = \"UNASSIGNED_EVENT\",\n\t/** Represents an 'unlabeled' event on a given issue or pull request. */\n\tUnlabeledEvent = \"UNLABELED_EVENT\",\n\t/** Represents an 'unlocked' event on a given issue or pull request. */\n\tUnlockedEvent = \"UNLOCKED_EVENT\",\n\t/** Represents a 'user_blocked' event on a given user. */\n\tUserBlockedEvent = \"USER_BLOCKED_EVENT\",\n\t/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\n\tUnmarkedAsDuplicateEvent = \"UNMARKED_AS_DUPLICATE_EVENT\",\n\t/** Represents an 'unpinned' event on a given issue or pull request. */\n\tUnpinnedEvent = \"UNPINNED_EVENT\",\n\t/** Represents an 'unsubscribed' event on a given `Subscribable`. */\n\tUnsubscribedEvent = \"UNSUBSCRIBED_EVENT\",\n}\n\n/** The possible target states when updating a pull request. */\nexport enum PullRequestUpdateState {\n\t/** A pull request that is still open. */\n\tOpen = \"OPEN\",\n\t/** A pull request that has been closed without being merged. */\n\tClosed = \"CLOSED\",\n}\n\n/** A team, user or app who has the ability to push to a protected branch. */\nexport type PushAllowance = Node & {\n\t__typename?: \"PushAllowance\";\n\t/** The actor that can push. */\n\tactor?: Maybe<PushAllowanceActor>;\n\t/** Identifies the branch protection rule associated with the allowed user or team. */\n\tbranchProtectionRule?: Maybe<BranchProtectionRule>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Types that can be an actor. */\nexport type PushAllowanceActor = App | Team | User;\n\n/** The connection type for PushAllowance. */\nexport type PushAllowanceConnection = {\n\t__typename?: \"PushAllowanceConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<PushAllowanceEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<PushAllowance>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type PushAllowanceEdge = {\n\t__typename?: \"PushAllowanceEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<PushAllowance>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type Query = {\n\t__typename?: \"Query\";\n\t/** Look up a code of conduct by its key */\n\tcodeOfConduct?: Maybe<CodeOfConduct>;\n\t/** Look up a code of conduct by its key */\n\tcodesOfConduct?: Maybe<Array<Maybe<CodeOfConduct>>>;\n\t/** Look up an enterprise by URL slug. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** Look up a pending enterprise administrator invitation by invitee, enterprise and role. */\n\tenterpriseAdministratorInvitation?: Maybe<EnterpriseAdministratorInvitation>;\n\t/** Look up a pending enterprise administrator invitation by invitation token. */\n\tenterpriseAdministratorInvitationByToken?: Maybe<EnterpriseAdministratorInvitation>;\n\t/** Look up an open source license by its key */\n\tlicense?: Maybe<License>;\n\t/** Return a list of known open source licenses */\n\tlicenses: Array<Maybe<License>>;\n\t/** Get alphabetically sorted list of Marketplace categories */\n\tmarketplaceCategories: Array<MarketplaceCategory>;\n\t/** Look up a Marketplace category by its slug. */\n\tmarketplaceCategory?: Maybe<MarketplaceCategory>;\n\t/** Look up a single Marketplace listing */\n\tmarketplaceListing?: Maybe<MarketplaceListing>;\n\t/** Look up Marketplace listings */\n\tmarketplaceListings: MarketplaceListingConnection;\n\t/** Return information about the GitHub instance */\n\tmeta: GitHubMetadata;\n\t/** Fetches an object given its ID. */\n\tnode?: Maybe<Node>;\n\t/** Lookup nodes by a list of IDs. */\n\tnodes: Array<Maybe<Node>>;\n\t/** Lookup a organization by login. */\n\torganization?: Maybe<Organization>;\n\t/** The client's rate limit information. */\n\trateLimit?: Maybe<RateLimit>;\n\t/** Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object */\n\trelay: Query;\n\t/** Lookup a given repository by the owner and repository name. */\n\trepository?: Maybe<Repository>;\n\t/** Lookup a repository owner (ie. either a User or an Organization) by login. */\n\trepositoryOwner?: Maybe<RepositoryOwner>;\n\t/** Lookup resource by a URL. */\n\tresource?: Maybe<UniformResourceLocatable>;\n\t/** Perform a search across resources. */\n\tsearch: SearchResultItemConnection;\n\t/** GitHub Security Advisories */\n\tsecurityAdvisories: SecurityAdvisoryConnection;\n\t/** Fetch a Security Advisory by its GHSA ID */\n\tsecurityAdvisory?: Maybe<SecurityAdvisory>;\n\t/** Software Vulnerabilities documented by GitHub Security Advisories */\n\tsecurityVulnerabilities: SecurityVulnerabilityConnection;\n\t/**\n\t * Look up a single Sponsors Listing\n\t * @deprecated `Query.sponsorsListing` will be removed. Use `Sponsorable.sponsorsListing` instead. Removal on 2020-04-01 UTC.\n\t */\n\tsponsorsListing?: Maybe<SponsorsListing>;\n\t/** Look up a topic by name. */\n\ttopic?: Maybe<Topic>;\n\t/** Lookup a user by login. */\n\tuser?: Maybe<User>;\n\t/** The currently authenticated user. */\n\tviewer: User;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryCodeOfConductArgs = {\n\tkey: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseArgs = {\n\tslug: Scalars[\"String\"];\n\tinvitationToken?: Maybe<Scalars[\"String\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationArgs = {\n\tuserLogin: Scalars[\"String\"];\n\tenterpriseSlug: Scalars[\"String\"];\n\trole: EnterpriseAdministratorRole;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryEnterpriseAdministratorInvitationByTokenArgs = {\n\tinvitationToken: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryLicenseArgs = {\n\tkey: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoriesArgs = {\n\tincludeCategories?: Maybe<Array<Scalars[\"String\"]>>;\n\texcludeEmpty?: Maybe<Scalars[\"Boolean\"]>;\n\texcludeSubcategories?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceCategoryArgs = {\n\tslug: Scalars[\"String\"];\n\tuseTopicAliases?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingArgs = {\n\tslug: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryMarketplaceListingsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcategorySlug?: Maybe<Scalars[\"String\"]>;\n\tuseTopicAliases?: Maybe<Scalars[\"Boolean\"]>;\n\tviewerCanAdmin?: Maybe<Scalars[\"Boolean\"]>;\n\tadminId?: Maybe<Scalars[\"ID\"]>;\n\torganizationId?: Maybe<Scalars[\"ID\"]>;\n\tallStates?: Maybe<Scalars[\"Boolean\"]>;\n\tslugs?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\tprimaryCategoryOnly?: Maybe<Scalars[\"Boolean\"]>;\n\twithFreeTrialsOnly?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodeArgs = {\n\tid: Scalars[\"ID\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryNodesArgs = {\n\tids: Array<Scalars[\"ID\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryOrganizationArgs = {\n\tlogin: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRateLimitArgs = {\n\tdryRun?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryArgs = {\n\towner: Scalars[\"String\"];\n\tname: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryRepositoryOwnerArgs = {\n\tlogin: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryResourceArgs = {\n\turl: Scalars[\"URI\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySearchArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tquery: Scalars[\"String\"];\n\ttype: SearchType;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoriesArgs = {\n\torderBy?: Maybe<SecurityAdvisoryOrder>;\n\tidentifier?: Maybe<SecurityAdvisoryIdentifierFilter>;\n\tpublishedSince?: Maybe<Scalars[\"DateTime\"]>;\n\tupdatedSince?: Maybe<Scalars[\"DateTime\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityAdvisoryArgs = {\n\tghsaId: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySecurityVulnerabilitiesArgs = {\n\torderBy?: Maybe<SecurityVulnerabilityOrder>;\n\tecosystem?: Maybe<SecurityAdvisoryEcosystem>;\n\tpackage?: Maybe<Scalars[\"String\"]>;\n\tseverities?: Maybe<Array<SecurityAdvisorySeverity>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QuerySponsorsListingArgs = {\n\tslug: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryTopicArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** The query root of GitHub's GraphQL interface. */\nexport type QueryUserArgs = {\n\tlogin: Scalars[\"String\"];\n};\n\n/** Represents the client's rate limit. */\nexport type RateLimit = {\n\t__typename?: \"RateLimit\";\n\t/** The point cost for the current query counting against the rate limit. */\n\tcost: Scalars[\"Int\"];\n\t/** The maximum number of points the client is permitted to consume in a 60 minute window. */\n\tlimit: Scalars[\"Int\"];\n\t/** The maximum number of nodes this query may return */\n\tnodeCount: Scalars[\"Int\"];\n\t/** The number of points remaining in the current rate limit window. */\n\tremaining: Scalars[\"Int\"];\n\t/** The time at which the current rate limit window resets in UTC epoch seconds. */\n\tresetAt: Scalars[\"DateTime\"];\n};\n\n/** Represents a subject that can be reacted on. */\nexport type Reactable = {\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** A list of reactions grouped by content left on the subject. */\n\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t/** A list of Reactions left on the Issue. */\n\treactions: ReactionConnection;\n\t/** Can user react to this subject */\n\tviewerCanReact: Scalars[\"Boolean\"];\n};\n\n/** Represents a subject that can be reacted on. */\nexport type ReactableReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** The connection type for User. */\nexport type ReactingUserConnection = {\n\t__typename?: \"ReactingUserConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReactingUserEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user that's made a reaction. */\nexport type ReactingUserEdge = {\n\t__typename?: \"ReactingUserEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\tnode: User;\n\t/** The moment when the user made the reaction. */\n\treactedAt: Scalars[\"DateTime\"];\n};\n\n/** An emoji reaction to a particular piece of content. */\nexport type Reaction = Node & {\n\t__typename?: \"Reaction\";\n\t/** Identifies the emoji reaction. */\n\tcontent: ReactionContent;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The reactable piece of content */\n\treactable: Reactable;\n\t/** Identifies the user who created this reaction. */\n\tuser?: Maybe<User>;\n};\n\n/** A list of reactions that have been left on the subject. */\nexport type ReactionConnection = {\n\t__typename?: \"ReactionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReactionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Reaction>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** Whether or not the authenticated user has left a reaction on the subject. */\n\tviewerHasReacted: Scalars[\"Boolean\"];\n};\n\n/** Emojis that can be attached to Issues, Pull Requests and Comments. */\nexport enum ReactionContent {\n\t/** Represents the `:+1:` emoji. */\n\tThumbsUp = \"THUMBS_UP\",\n\t/** Represents the `:-1:` emoji. */\n\tThumbsDown = \"THUMBS_DOWN\",\n\t/** Represents the `:laugh:` emoji. */\n\tLaugh = \"LAUGH\",\n\t/** Represents the `:hooray:` emoji. */\n\tHooray = \"HOORAY\",\n\t/** Represents the `:confused:` emoji. */\n\tConfused = \"CONFUSED\",\n\t/** Represents the `:heart:` emoji. */\n\tHeart = \"HEART\",\n\t/** Represents the `:rocket:` emoji. */\n\tRocket = \"ROCKET\",\n\t/** Represents the `:eyes:` emoji. */\n\tEyes = \"EYES\",\n}\n\n/** An edge in a connection. */\nexport type ReactionEdge = {\n\t__typename?: \"ReactionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Reaction>;\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroup = {\n\t__typename?: \"ReactionGroup\";\n\t/** Identifies the emoji reaction. */\n\tcontent: ReactionContent;\n\t/** Identifies when the reaction was created. */\n\tcreatedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** The subject that was reacted to. */\n\tsubject: Reactable;\n\t/** Users who have reacted to the reaction subject with the emotion represented by this reaction group */\n\tusers: ReactingUserConnection;\n\t/** Whether or not the authenticated user has left a reaction on the subject. */\n\tviewerHasReacted: Scalars[\"Boolean\"];\n};\n\n/** A group of emoji reactions to a particular piece of content. */\nexport type ReactionGroupUsersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Ways in which lists of reactions can be ordered upon return. */\nexport type ReactionOrder = {\n\t/** The field in which to order reactions by. */\n\tfield: ReactionOrderField;\n\t/** The direction in which to order reactions by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** A list of fields that reactions can be ordered by. */\nexport enum ReactionOrderField {\n\t/** Allows ordering a list of reactions by when they were created. */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** Represents a 'ready_for_review' event on a given pull request. */\nexport type ReadyForReviewEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"ReadyForReviewEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** PullRequest referenced by event. */\n\t\tpullRequest: PullRequest;\n\t\t/** The HTTP path for this ready for review event. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this ready for review event. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** Represents a Git reference. */\nexport type Ref = Node & {\n\t__typename?: \"Ref\";\n\t/** A list of pull requests with this ref as the head ref. */\n\tassociatedPullRequests: PullRequestConnection;\n\tid: Scalars[\"ID\"];\n\t/** The ref name. */\n\tname: Scalars[\"String\"];\n\t/** The ref's prefix, such as `refs/heads/` or `refs/tags/`. */\n\tprefix: Scalars[\"String\"];\n\t/** The repository the ref belongs to. */\n\trepository: Repository;\n\t/** The object the ref points to. Returns null when object does not exist. */\n\ttarget?: Maybe<GitObject>;\n};\n\n/** Represents a Git reference. */\nexport type RefAssociatedPullRequestsArgs = {\n\tstates?: Maybe<Array<PullRequestState>>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\theadRefName?: Maybe<Scalars[\"String\"]>;\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<IssueOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for Ref. */\nexport type RefConnection = {\n\t__typename?: \"RefConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RefEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Ref>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RefEdge = {\n\t__typename?: \"RefEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Ref>;\n};\n\n/** Ways in which lists of git refs can be ordered upon return. */\nexport type RefOrder = {\n\t/** The field in which to order refs by. */\n\tfield: RefOrderField;\n\t/** The direction in which to order refs by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which ref connections can be ordered. */\nexport enum RefOrderField {\n\t/** Order refs by underlying commit date if the ref prefix is refs/tags/ */\n\tTagCommitDate = \"TAG_COMMIT_DATE\",\n\t/** Order refs by their alphanumeric name */\n\tAlphabetical = \"ALPHABETICAL\",\n}\n\n/** Represents a 'referenced' event on a given `ReferencedSubject`. */\nexport type ReferencedEvent = Node & {\n\t__typename?: \"ReferencedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the commit associated with the 'referenced' event. */\n\tcommit?: Maybe<Commit>;\n\t/** Identifies the repository associated with the 'referenced' event. */\n\tcommitRepository: Repository;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Reference originated in a different repository. */\n\tisCrossRepository: Scalars[\"Boolean\"];\n\t/** Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference. */\n\tisDirectReference: Scalars[\"Boolean\"];\n\t/** Object referenced by event. */\n\tsubject: ReferencedSubject;\n};\n\n/** Any referencable object */\nexport type ReferencedSubject = Issue | PullRequest;\n\n/** Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesInput = {\n\t/** The ID of the enterprise on which to set an identity provider. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes */\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesPayload = {\n\t__typename?: \"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The identity provider for the enterprise. */\n\tidentityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** A release contains the content for a release. */\nexport type Release = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"Release\";\n\t\t/** The author of the release */\n\t\tauthor?: Maybe<User>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** The description of the release. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** The description of this release rendered to HTML. */\n\t\tdescriptionHTML?: Maybe<Scalars[\"HTML\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether or not the release is a draft */\n\t\tisDraft: Scalars[\"Boolean\"];\n\t\t/** Whether or not the release is a prerelease */\n\t\tisPrerelease: Scalars[\"Boolean\"];\n\t\t/** The title of the release. */\n\t\tname?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the date and time when the release was created. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** List of releases assets which are dependent on this release. */\n\t\treleaseAssets: ReleaseAssetConnection;\n\t\t/** The HTTP path for this issue */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** A description of the release, rendered to HTML without any links in it. */\n\t\tshortDescriptionHTML?: Maybe<Scalars[\"HTML\"]>;\n\t\t/** The Git tag the release points to */\n\t\ttag?: Maybe<Ref>;\n\t\t/** The name of the release's Git tag */\n\t\ttagName: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this issue */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** A release contains the content for a release. */\nexport type ReleaseReleaseAssetsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tname?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A release contains the content for a release. */\nexport type ReleaseShortDescriptionHtmlArgs = {\n\tlimit?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A release asset contains the content for a release asset. */\nexport type ReleaseAsset = Node & {\n\t__typename?: \"ReleaseAsset\";\n\t/** The asset's content-type */\n\tcontentType: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The number of times this asset was downloaded */\n\tdownloadCount: Scalars[\"Int\"];\n\t/** Identifies the URL where you can download the release asset via the browser. */\n\tdownloadUrl: Scalars[\"URI\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the title of the release asset. */\n\tname: Scalars[\"String\"];\n\t/** Release that the asset is associated with */\n\trelease?: Maybe<Release>;\n\t/** The size (in bytes) of the asset */\n\tsize: Scalars[\"Int\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The user that performed the upload */\n\tuploadedBy: User;\n\t/** Identifies the URL of the release asset. */\n\turl: Scalars[\"URI\"];\n};\n\n/** The connection type for ReleaseAsset. */\nexport type ReleaseAssetConnection = {\n\t__typename?: \"ReleaseAssetConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReleaseAssetEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ReleaseAsset>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReleaseAssetEdge = {\n\t__typename?: \"ReleaseAssetEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ReleaseAsset>;\n};\n\n/** The connection type for Release. */\nexport type ReleaseConnection = {\n\t__typename?: \"ReleaseConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReleaseEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Release>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReleaseEdge = {\n\t__typename?: \"ReleaseEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Release>;\n};\n\n/** Ways in which lists of releases can be ordered upon return. */\nexport type ReleaseOrder = {\n\t/** The field in which to order releases by. */\n\tfield: ReleaseOrderField;\n\t/** The direction in which to order releases by the specified field. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which release connections can be ordered. */\nexport enum ReleaseOrderField {\n\t/** Order releases by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order releases alphabetically by name */\n\tName = \"NAME\",\n}\n\n/** Autogenerated input type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignableInput = {\n\t/** The id of the assignable object to remove assignees from. */\n\tassignableId: Scalars[\"ID\"];\n\t/** The id of users to remove as assignees. */\n\tassigneeIds: Array<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveAssigneesFromAssignable */\nexport type RemoveAssigneesFromAssignablePayload = {\n\t__typename?: \"RemoveAssigneesFromAssignablePayload\";\n\t/** The item that was unassigned. */\n\tassignable?: Maybe<Assignable>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminInput = {\n\t/** The Enterprise ID from which to remove the administrator. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The login of the user to remove as an administrator. */\n\tlogin: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveEnterpriseAdmin */\nexport type RemoveEnterpriseAdminPayload = {\n\t__typename?: \"RemoveEnterpriseAdminPayload\";\n\t/** The user who was removed as an administrator. */\n\tadmin?: Maybe<User>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated enterprise. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of removing an administrator. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n\t/** The viewer performing the mutation. */\n\tviewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderInput = {\n\t/** The ID of the enterprise from which to remove the identity provider. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveEnterpriseIdentityProvider */\nexport type RemoveEnterpriseIdentityProviderPayload = {\n\t__typename?: \"RemoveEnterpriseIdentityProviderPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The identity provider that was removed from the enterprise. */\n\tidentityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Autogenerated input type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationInput = {\n\t/** The ID of the enterprise from which the organization should be removed. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The ID of the organization to remove from the enterprise. */\n\torganizationId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveEnterpriseOrganization */\nexport type RemoveEnterpriseOrganizationPayload = {\n\t__typename?: \"RemoveEnterpriseOrganizationPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated enterprise. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** The organization that was removed from the enterprise. */\n\torganization?: Maybe<Organization>;\n\t/** The viewer performing the mutation. */\n\tviewer?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelableInput = {\n\t/** The id of the Labelable to remove labels from. */\n\tlabelableId: Scalars[\"ID\"];\n\t/** The ids of labels to remove. */\n\tlabelIds: Array<Scalars[\"ID\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveLabelsFromLabelable */\nexport type RemoveLabelsFromLabelablePayload = {\n\t__typename?: \"RemoveLabelsFromLabelablePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The Labelable the labels were removed from. */\n\tlabelable?: Maybe<Labelable>;\n};\n\n/** Autogenerated input type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorInput = {\n\t/** The ID of the outside collaborator to remove. */\n\tuserId: Scalars[\"ID\"];\n\t/** The ID of the organization to remove the outside collaborator from. */\n\torganizationId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveOutsideCollaborator */\nexport type RemoveOutsideCollaboratorPayload = {\n\t__typename?: \"RemoveOutsideCollaboratorPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The user that was removed as an outside collaborator. */\n\tremovedUser?: Maybe<User>;\n};\n\n/** Autogenerated input type of RemoveReaction */\nexport type RemoveReactionInput = {\n\t/** The Node ID of the subject to modify. */\n\tsubjectId: Scalars[\"ID\"];\n\t/** The name of the emoji reaction to remove. */\n\tcontent: ReactionContent;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveReaction */\nexport type RemoveReactionPayload = {\n\t__typename?: \"RemoveReactionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The reaction object. */\n\treaction?: Maybe<Reaction>;\n\t/** The reactable subject. */\n\tsubject?: Maybe<Reactable>;\n};\n\n/** Autogenerated input type of RemoveStar */\nexport type RemoveStarInput = {\n\t/** The Starrable ID to unstar. */\n\tstarrableId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RemoveStar */\nexport type RemoveStarPayload = {\n\t__typename?: \"RemoveStarPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The starrable. */\n\tstarrable?: Maybe<Starrable>;\n};\n\n/** Represents a 'removed_from_project' event on a given issue or pull request. */\nexport type RemovedFromProjectEvent = Node & {\n\t__typename?: \"RemovedFromProjectEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Represents a 'renamed' event on a given issue or pull request */\nexport type RenamedTitleEvent = Node & {\n\t__typename?: \"RenamedTitleEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the current title of the issue or pull request. */\n\tcurrentTitle: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the previous title of the issue or pull request. */\n\tpreviousTitle: Scalars[\"String\"];\n\t/** Subject that was renamed. */\n\tsubject: RenamedTitleSubject;\n};\n\n/** An object which has a renamable title */\nexport type RenamedTitleSubject = Issue | PullRequest;\n\n/** Autogenerated input type of ReopenIssue */\nexport type ReopenIssueInput = {\n\t/** ID of the issue to be opened. */\n\tissueId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ReopenIssue */\nexport type ReopenIssuePayload = {\n\t__typename?: \"ReopenIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The issue that was opened. */\n\tissue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of ReopenPullRequest */\nexport type ReopenPullRequestInput = {\n\t/** ID of the pull request to be reopened. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ReopenPullRequest */\nexport type ReopenPullRequestPayload = {\n\t__typename?: \"ReopenPullRequestPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request that was reopened. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Represents a 'reopened' event on any `Closable`. */\nexport type ReopenedEvent = Node & {\n\t__typename?: \"ReopenedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Object that was reopened. */\n\tclosable: Closable;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n};\n\n/** Audit log entry for a repo.access event. */\nexport type RepoAccessAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoAccessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoAccessAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoAccessAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.add_member event. */\nexport type RepoAddMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoAddMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoAddMemberAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoAddMemberAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.add_topic event. */\nexport type RepoAddTopicAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData &\n\tTopicAuditEntryData & {\n\t\t__typename?: \"RepoAddTopicAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The name of the topic added to the repository */\n\t\ttopic?: Maybe<Topic>;\n\t\t/** The name of the topic added to the repository */\n\t\ttopicName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.archived event. */\nexport type RepoArchivedAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepoArchivedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoArchivedAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoArchivedAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.change_merge_setting event. */\nexport type RepoChangeMergeSettingAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepoChangeMergeSettingAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the change was to enable (true) or disable (false) the merge type */\n\t\tisEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The merge method affected by the change */\n\t\tmergeType?: Maybe<RepoChangeMergeSettingAuditEntryMergeType>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The merge options available for pull requests to this repository. */\nexport enum RepoChangeMergeSettingAuditEntryMergeType {\n\t/** The pull request is added to the base branch in a merge commit. */\n\tMerge = \"MERGE\",\n\t/** Commits from the pull request are added onto the base branch individually without a merge commit. */\n\tRebase = \"REBASE\",\n\t/** The pull request's commits are squashed into a single commit before they are merged to the base branch. */\n\tSquash = \"SQUASH\",\n}\n\n/** Audit log entry for a repo.config.disable_anonymous_git_access event. */\nexport type RepoConfigDisableAnonymousGitAccessAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigDisableAnonymousGitAccessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.disable_collaborators_only event. */\nexport type RepoConfigDisableCollaboratorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigDisableCollaboratorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.disable_contributors_only event. */\nexport type RepoConfigDisableContributorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigDisableContributorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.disable_sockpuppet_disallowed event. */\nexport type RepoConfigDisableSockpuppetDisallowedAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigDisableSockpuppetDisallowedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.enable_anonymous_git_access event. */\nexport type RepoConfigEnableAnonymousGitAccessAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigEnableAnonymousGitAccessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.enable_collaborators_only event. */\nexport type RepoConfigEnableCollaboratorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigEnableCollaboratorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.enable_contributors_only event. */\nexport type RepoConfigEnableContributorsOnlyAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigEnableContributorsOnlyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.enable_sockpuppet_disallowed event. */\nexport type RepoConfigEnableSockpuppetDisallowedAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigEnableSockpuppetDisallowedAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.lock_anonymous_git_access event. */\nexport type RepoConfigLockAnonymousGitAccessAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigLockAnonymousGitAccessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.config.unlock_anonymous_git_access event. */\nexport type RepoConfigUnlockAnonymousGitAccessAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoConfigUnlockAnonymousGitAccessAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repo.create event. */\nexport type RepoCreateAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepoCreateAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The name of the parent repository for this forked repository. */\n\t\tforkParentName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The name of the root repository for this netork. */\n\t\tforkSourceName?: Maybe<Scalars[\"String\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoCreateAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoCreateAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.destroy event. */\nexport type RepoDestroyAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepoDestroyAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoDestroyAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoDestroyAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.remove_member event. */\nexport type RepoRemoveMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData & {\n\t\t__typename?: \"RepoRemoveMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The visibility of the repository */\n\t\tvisibility?: Maybe<RepoRemoveMemberAuditEntryVisibility>;\n\t};\n\n/** The privacy of a repository */\nexport enum RepoRemoveMemberAuditEntryVisibility {\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n}\n\n/** Audit log entry for a repo.remove_topic event. */\nexport type RepoRemoveTopicAuditEntry = Node &\n\tAuditEntry &\n\tRepositoryAuditEntryData &\n\tOrganizationAuditEntryData &\n\tTopicAuditEntryData & {\n\t\t__typename?: \"RepoRemoveTopicAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The name of the topic added to the repository */\n\t\ttopic?: Maybe<Topic>;\n\t\t/** The name of the topic added to the repository */\n\t\ttopicName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The reasons a piece of content can be reported or minimized. */\nexport enum ReportedContentClassifiers {\n\t/** A spammy piece of content */\n\tSpam = \"SPAM\",\n\t/** An abusive or harassing piece of content */\n\tAbuse = \"ABUSE\",\n\t/** An irrelevant piece of content */\n\tOffTopic = \"OFF_TOPIC\",\n\t/** An outdated piece of content */\n\tOutdated = \"OUTDATED\",\n\t/** A duplicated piece of content */\n\tDuplicate = \"DUPLICATE\",\n\t/** The content has been resolved */\n\tResolved = \"RESOLVED\",\n}\n\n/** A repository contains the content for a project. */\nexport type Repository = Node &\n\tProjectOwner &\n\tPackageOwner &\n\tSubscribable &\n\tStarrable &\n\tUniformResourceLocatable &\n\tRepositoryInfo & {\n\t\t__typename?: \"Repository\";\n\t\t/** A list of users that can be assigned to issues in this repository. */\n\t\tassignableUsers: UserConnection;\n\t\t/** A list of branch protection rules for this repository. */\n\t\tbranchProtectionRules: BranchProtectionRuleConnection;\n\t\t/** Returns the code of conduct for this repository */\n\t\tcodeOfConduct?: Maybe<CodeOfConduct>;\n\t\t/** A list of collaborators associated with the repository. */\n\t\tcollaborators?: Maybe<RepositoryCollaboratorConnection>;\n\t\t/** A list of commit comments associated with the repository. */\n\t\tcommitComments: CommitCommentConnection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The Ref associated with the repository's default branch. */\n\t\tdefaultBranchRef?: Maybe<Ref>;\n\t\t/** Whether or not branches are automatically deleted when merged in this repository. */\n\t\tdeleteBranchOnMerge: Scalars[\"Boolean\"];\n\t\t/** A list of deploy keys that are on this repository. */\n\t\tdeployKeys: DeployKeyConnection;\n\t\t/** Deployments associated with the repository */\n\t\tdeployments: DeploymentConnection;\n\t\t/** The description of the repository. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** The description of the repository rendered to HTML. */\n\t\tdescriptionHTML: Scalars[\"HTML\"];\n\t\t/** The number of kilobytes this repository occupies on disk. */\n\t\tdiskUsage?: Maybe<Scalars[\"Int\"]>;\n\t\t/** Returns how many forks there are of this repository in the whole network. */\n\t\tforkCount: Scalars[\"Int\"];\n\t\t/** A list of direct forked repositories. */\n\t\tforks: RepositoryConnection;\n\t\t/** The funding links for this repository */\n\t\tfundingLinks: Array<FundingLink>;\n\t\t/** Indicates if the repository has issues feature enabled. */\n\t\thasIssuesEnabled: Scalars[\"Boolean\"];\n\t\t/** Indicates if the repository has the Projects feature enabled. */\n\t\thasProjectsEnabled: Scalars[\"Boolean\"];\n\t\t/** Indicates if the repository has wiki feature enabled. */\n\t\thasWikiEnabled: Scalars[\"Boolean\"];\n\t\t/** The repository's URL. */\n\t\thomepageUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Indicates if the repository is unmaintained. */\n\t\tisArchived: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not this repository disabled. */\n\t\tisDisabled: Scalars[\"Boolean\"];\n\t\t/** Returns whether or not this repository is empty. */\n\t\tisEmpty: Scalars[\"Boolean\"];\n\t\t/** Identifies if the repository is a fork. */\n\t\tisFork: Scalars[\"Boolean\"];\n\t\t/** Indicates if the repository has been locked or not. */\n\t\tisLocked: Scalars[\"Boolean\"];\n\t\t/** Identifies if the repository is a mirror. */\n\t\tisMirror: Scalars[\"Boolean\"];\n\t\t/** Identifies if the repository is private. */\n\t\tisPrivate: Scalars[\"Boolean\"];\n\t\t/** Identifies if the repository is a template that can be used to generate new repositories. */\n\t\tisTemplate: Scalars[\"Boolean\"];\n\t\t/** Returns a single issue from the current repository by number. */\n\t\tissue?: Maybe<Issue>;\n\t\t/** Returns a single issue-like object from the current repository by number. */\n\t\tissueOrPullRequest?: Maybe<IssueOrPullRequest>;\n\t\t/** A list of issues that have been opened in the repository. */\n\t\tissues: IssueConnection;\n\t\t/** Returns a single label by name */\n\t\tlabel?: Maybe<Label>;\n\t\t/** A list of labels associated with the repository. */\n\t\tlabels?: Maybe<LabelConnection>;\n\t\t/** A list containing a breakdown of the language composition of the repository. */\n\t\tlanguages?: Maybe<LanguageConnection>;\n\t\t/** The license associated with the repository */\n\t\tlicenseInfo?: Maybe<License>;\n\t\t/** The reason the repository has been locked. */\n\t\tlockReason?: Maybe<RepositoryLockReason>;\n\t\t/** A list of Users that can be mentioned in the context of the repository. */\n\t\tmentionableUsers: UserConnection;\n\t\t/** Whether or not PRs are merged with a merge commit on this repository. */\n\t\tmergeCommitAllowed: Scalars[\"Boolean\"];\n\t\t/** Returns a single milestone from the current repository by number. */\n\t\tmilestone?: Maybe<Milestone>;\n\t\t/** A list of milestones associated with the repository. */\n\t\tmilestones?: Maybe<MilestoneConnection>;\n\t\t/** The repository's original mirror URL. */\n\t\tmirrorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The name of the repository. */\n\t\tname: Scalars[\"String\"];\n\t\t/** The repository's name with owner. */\n\t\tnameWithOwner: Scalars[\"String\"];\n\t\t/** A Git object in the repository */\n\t\tobject?: Maybe<GitObject>;\n\t\t/** The image used to represent this repository in Open Graph data. */\n\t\topenGraphImageUrl: Scalars[\"URI\"];\n\t\t/** The User owner of the repository. */\n\t\towner: RepositoryOwner;\n\t\t/** A list of packages under the owner. */\n\t\tpackages: PackageConnection;\n\t\t/** The repository parent, if this is a fork. */\n\t\tparent?: Maybe<Repository>;\n\t\t/** The primary language of the repository's code. */\n\t\tprimaryLanguage?: Maybe<Language>;\n\t\t/** Find project by number. */\n\t\tproject?: Maybe<Project>;\n\t\t/** A list of projects under the owner. */\n\t\tprojects: ProjectConnection;\n\t\t/** The HTTP path listing the repository's projects */\n\t\tprojectsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL listing the repository's projects */\n\t\tprojectsUrl: Scalars[\"URI\"];\n\t\t/** Returns a single pull request from the current repository by number. */\n\t\tpullRequest?: Maybe<PullRequest>;\n\t\t/** A list of pull requests that have been opened in the repository. */\n\t\tpullRequests: PullRequestConnection;\n\t\t/** Identifies when the repository was last pushed to. */\n\t\tpushedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Whether or not rebase-merging is enabled on this repository. */\n\t\trebaseMergeAllowed: Scalars[\"Boolean\"];\n\t\t/** Fetch a given ref from the repository */\n\t\tref?: Maybe<Ref>;\n\t\t/** Fetch a list of refs from the repository */\n\t\trefs?: Maybe<RefConnection>;\n\t\t/** Lookup a single release given various criteria. */\n\t\trelease?: Maybe<Release>;\n\t\t/** List of releases which are dependent on this repository. */\n\t\treleases: ReleaseConnection;\n\t\t/** A list of applied repository-topic associations for this repository. */\n\t\trepositoryTopics: RepositoryTopicConnection;\n\t\t/** The HTTP path for this repository */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** A description of the repository, rendered to HTML without any links in it. */\n\t\tshortDescriptionHTML: Scalars[\"HTML\"];\n\t\t/** Whether or not squash-merging is enabled on this repository. */\n\t\tsquashMergeAllowed: Scalars[\"Boolean\"];\n\t\t/** The SSH URL to clone this repository */\n\t\tsshUrl: Scalars[\"GitSSHRemote\"];\n\t\t/** A list of users who have starred this starrable. */\n\t\tstargazers: StargazerConnection;\n\t\t/** Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit. */\n\t\tsubmodules: SubmoduleConnection;\n\t\t/** Temporary authentication token for cloning this repository. */\n\t\ttempCloneToken?: Maybe<Scalars[\"String\"]>;\n\t\t/** The repository from which this repository was generated, if any. */\n\t\ttemplateRepository?: Maybe<Repository>;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this repository */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n\t\tusesCustomOpenGraphImage: Scalars[\"Boolean\"];\n\t\t/** Indicates whether the viewer has admin permissions on this repository. */\n\t\tviewerCanAdminister: Scalars[\"Boolean\"];\n\t\t/** Can the current viewer create new projects on this owner. */\n\t\tviewerCanCreateProjects: Scalars[\"Boolean\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Indicates whether the viewer can update the topics of this repository. */\n\t\tviewerCanUpdateTopics: Scalars[\"Boolean\"];\n\t\t/** Returns a boolean indicating whether the viewing user has starred this starrable. */\n\t\tviewerHasStarred: Scalars[\"Boolean\"];\n\t\t/** The users permission level on the repository. Will return null if authenticated as an GitHub App. */\n\t\tviewerPermission?: Maybe<RepositoryPermission>;\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t\t/** A list of vulnerability alerts that are on this repository. */\n\t\tvulnerabilityAlerts?: Maybe<RepositoryVulnerabilityAlertConnection>;\n\t\t/** A list of users watching the repository. */\n\t\twatchers: UserConnection;\n\t};\n\n/** A repository contains the content for a project. */\nexport type RepositoryAssignableUsersArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryBranchProtectionRulesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryCollaboratorsArgs = {\n\taffiliation?: Maybe<CollaboratorAffiliation>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryCommitCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeployKeysArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryDeploymentsArgs = {\n\tenvironments?: Maybe<Array<Scalars[\"String\"]>>;\n\torderBy?: Maybe<DeploymentOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryForksArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\taffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\townerAffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssueOrPullRequestArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryIssuesArgs = {\n\torderBy?: Maybe<IssueOrder>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\tstates?: Maybe<Array<IssueState>>;\n\tfilterBy?: Maybe<IssueFilters>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLabelsArgs = {\n\torderBy?: Maybe<LabelOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryLanguagesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<LanguageOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMentionableUsersArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestoneArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryMilestonesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tstates?: Maybe<Array<MilestoneState>>;\n\torderBy?: Maybe<MilestoneOrder>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryObjectArgs = {\n\toid?: Maybe<Scalars[\"GitObjectID\"]>;\n\texpression?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPackagesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tnames?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\trepositoryId?: Maybe<Scalars[\"ID\"]>;\n\tpackageType?: Maybe<PackageType>;\n\torderBy?: Maybe<PackageOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryProjectsArgs = {\n\torderBy?: Maybe<ProjectOrder>;\n\tsearch?: Maybe<Scalars[\"String\"]>;\n\tstates?: Maybe<Array<ProjectState>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryPullRequestsArgs = {\n\tstates?: Maybe<Array<PullRequestState>>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\theadRefName?: Maybe<Scalars[\"String\"]>;\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<IssueOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefArgs = {\n\tqualifiedName: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRefsArgs = {\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\trefPrefix: Scalars[\"String\"];\n\tdirection?: Maybe<OrderDirection>;\n\torderBy?: Maybe<RefOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleaseArgs = {\n\ttagName: Scalars[\"String\"];\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryReleasesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<ReleaseOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryRepositoryTopicsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryShortDescriptionHtmlArgs = {\n\tlimit?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryStargazersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<StarOrder>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositorySubmodulesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryVulnerabilityAlertsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A repository contains the content for a project. */\nexport type RepositoryWatchersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The affiliation of a user to a repository */\nexport enum RepositoryAffiliation {\n\t/** Repositories that are owned by the authenticated user. */\n\tOwner = \"OWNER\",\n\t/** Repositories that the user has been added to as a collaborator. */\n\tCollaborator = \"COLLABORATOR\",\n\t/** Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on. */\n\tOrganizationMember = \"ORGANIZATION_MEMBER\",\n}\n\n/** Metadata for an audit entry with action repo.* */\nexport type RepositoryAuditEntryData = {\n\t/** The repository associated with the action */\n\trepository?: Maybe<Repository>;\n\t/** The name of the repository */\n\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for the repository */\n\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for the repository */\n\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** The connection type for User. */\nexport type RepositoryCollaboratorConnection = {\n\t__typename?: \"RepositoryCollaboratorConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RepositoryCollaboratorEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user who is a collaborator of a repository. */\nexport type RepositoryCollaboratorEdge = {\n\t__typename?: \"RepositoryCollaboratorEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\tnode: User;\n\t/**\n\t * The permission the user has on the repository.\n\t *\n\t * **Upcoming Change on 2020-10-01 UTC**\n\t * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.\n\t * **Reason:** This field may return additional values\n\t */\n\tpermission: RepositoryPermission;\n\t/** A list of sources for the user's access to the repository. */\n\tpermissionSources?: Maybe<Array<PermissionSource>>;\n};\n\n/** A list of repositories owned by the subject. */\nexport type RepositoryConnection = {\n\t__typename?: \"RepositoryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RepositoryEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Repository>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n\t/** The total size in kilobytes of all repositories in the connection. */\n\ttotalDiskUsage: Scalars[\"Int\"];\n};\n\n/** The reason a repository is listed as 'contributed'. */\nexport enum RepositoryContributionType {\n\t/** Created a commit */\n\tCommit = \"COMMIT\",\n\t/** Created an issue */\n\tIssue = \"ISSUE\",\n\t/** Created a pull request */\n\tPullRequest = \"PULL_REQUEST\",\n\t/** Created the repository */\n\tRepository = \"REPOSITORY\",\n\t/** Reviewed a pull request */\n\tPullRequestReview = \"PULL_REQUEST_REVIEW\",\n}\n\n/** An edge in a connection. */\nexport type RepositoryEdge = {\n\t__typename?: \"RepositoryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Repository>;\n};\n\n/** A subset of repository info. */\nexport type RepositoryInfo = {\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The description of the repository. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** The description of the repository rendered to HTML. */\n\tdescriptionHTML: Scalars[\"HTML\"];\n\t/** Returns how many forks there are of this repository in the whole network. */\n\tforkCount: Scalars[\"Int\"];\n\t/** Indicates if the repository has issues feature enabled. */\n\thasIssuesEnabled: Scalars[\"Boolean\"];\n\t/** Indicates if the repository has the Projects feature enabled. */\n\thasProjectsEnabled: Scalars[\"Boolean\"];\n\t/** Indicates if the repository has wiki feature enabled. */\n\thasWikiEnabled: Scalars[\"Boolean\"];\n\t/** The repository's URL. */\n\thomepageUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** Indicates if the repository is unmaintained. */\n\tisArchived: Scalars[\"Boolean\"];\n\t/** Identifies if the repository is a fork. */\n\tisFork: Scalars[\"Boolean\"];\n\t/** Indicates if the repository has been locked or not. */\n\tisLocked: Scalars[\"Boolean\"];\n\t/** Identifies if the repository is a mirror. */\n\tisMirror: Scalars[\"Boolean\"];\n\t/** Identifies if the repository is private. */\n\tisPrivate: Scalars[\"Boolean\"];\n\t/** Identifies if the repository is a template that can be used to generate new repositories. */\n\tisTemplate: Scalars[\"Boolean\"];\n\t/** The license associated with the repository */\n\tlicenseInfo?: Maybe<License>;\n\t/** The reason the repository has been locked. */\n\tlockReason?: Maybe<RepositoryLockReason>;\n\t/** The repository's original mirror URL. */\n\tmirrorUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** The name of the repository. */\n\tname: Scalars[\"String\"];\n\t/** The repository's name with owner. */\n\tnameWithOwner: Scalars[\"String\"];\n\t/** The image used to represent this repository in Open Graph data. */\n\topenGraphImageUrl: Scalars[\"URI\"];\n\t/** The User owner of the repository. */\n\towner: RepositoryOwner;\n\t/** Identifies when the repository was last pushed to. */\n\tpushedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** The HTTP path for this repository */\n\tresourcePath: Scalars[\"URI\"];\n\t/** A description of the repository, rendered to HTML without any links in it. */\n\tshortDescriptionHTML: Scalars[\"HTML\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The HTTP URL for this repository */\n\turl: Scalars[\"URI\"];\n\t/** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */\n\tusesCustomOpenGraphImage: Scalars[\"Boolean\"];\n};\n\n/** A subset of repository info. */\nexport type RepositoryInfoShortDescriptionHtmlArgs = {\n\tlimit?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** An invitation for a user to be added to a repository. */\nexport type RepositoryInvitation = Node & {\n\t__typename?: \"RepositoryInvitation\";\n\t/** The email address that received the invitation. */\n\temail?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The user who received the invitation. */\n\tinvitee?: Maybe<User>;\n\t/** The user who created the invitation. */\n\tinviter: User;\n\t/**\n\t * The permission granted on this repository by this invitation.\n\t *\n\t * **Upcoming Change on 2020-10-01 UTC**\n\t * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.\n\t * **Reason:** This field may return additional values\n\t */\n\tpermission: RepositoryPermission;\n\t/** The Repository the user is invited to. */\n\trepository?: Maybe<RepositoryInfo>;\n};\n\n/** The connection type for RepositoryInvitation. */\nexport type RepositoryInvitationConnection = {\n\t__typename?: \"RepositoryInvitationConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RepositoryInvitationEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<RepositoryInvitation>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RepositoryInvitationEdge = {\n\t__typename?: \"RepositoryInvitationEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<RepositoryInvitation>;\n};\n\n/** Ordering options for repository invitation connections. */\nexport type RepositoryInvitationOrder = {\n\t/** The field to order repository invitations by. */\n\tfield: RepositoryInvitationOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which repository invitation connections can be ordered. */\nexport enum RepositoryInvitationOrderField {\n\t/** Order repository invitations by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order repository invitations by invitee login */\n\tInviteeLogin = \"INVITEE_LOGIN\",\n}\n\n/** The possible reasons a given repository could be in a locked state. */\nexport enum RepositoryLockReason {\n\t/** The repository is locked due to a move. */\n\tMoving = \"MOVING\",\n\t/** The repository is locked due to a billing related reason. */\n\tBilling = \"BILLING\",\n\t/** The repository is locked due to a rename. */\n\tRename = \"RENAME\",\n\t/** The repository is locked due to a migration. */\n\tMigrating = \"MIGRATING\",\n}\n\n/** Represents a object that belongs to a repository. */\nexport type RepositoryNode = {\n\t/** The repository associated with this node. */\n\trepository: Repository;\n};\n\n/** Ordering options for repository connections */\nexport type RepositoryOrder = {\n\t/** The field to order repositories by. */\n\tfield: RepositoryOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which repository connections can be ordered. */\nexport enum RepositoryOrderField {\n\t/** Order repositories by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order repositories by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order repositories by push time */\n\tPushedAt = \"PUSHED_AT\",\n\t/** Order repositories by name */\n\tName = \"NAME\",\n\t/** Order repositories by number of stargazers */\n\tStargazers = \"STARGAZERS\",\n}\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwner = {\n\t/** A URL pointing to the owner's public avatar. */\n\tavatarUrl: Scalars[\"URI\"];\n\tid: Scalars[\"ID\"];\n\t/** The username used to login. */\n\tlogin: Scalars[\"String\"];\n\t/** A list of repositories that the user owns. */\n\trepositories: RepositoryConnection;\n\t/** Find Repository. */\n\trepository?: Maybe<Repository>;\n\t/** The HTTP URL for the owner. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for the owner. */\n\turl: Scalars[\"URI\"];\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoriesArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\taffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\townerAffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tisFork?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Represents an owner of a Repository. */\nexport type RepositoryOwnerRepositoryArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** The access level to a repository */\nexport enum RepositoryPermission {\n\t/** Can read, clone, and push to this repository. Can also manage issues, pull requests, and repository settings, including adding collaborators */\n\tAdmin = \"ADMIN\",\n\t/** Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings */\n\tMaintain = \"MAINTAIN\",\n\t/** Can read, clone, and push to this repository. Can also manage issues and pull requests */\n\tWrite = \"WRITE\",\n\t/** Can read and clone this repository. Can also manage issues and pull requests */\n\tTriage = \"TRIAGE\",\n\t/** Can read and clone this repository. Can also open and comment on issues and pull requests */\n\tRead = \"READ\",\n}\n\n/** The privacy of a repository */\nexport enum RepositoryPrivacy {\n\t/** Public */\n\tPublic = \"PUBLIC\",\n\t/** Private */\n\tPrivate = \"PRIVATE\",\n}\n\n/** A repository-topic connects a repository to a topic. */\nexport type RepositoryTopic = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"RepositoryTopic\";\n\t\tid: Scalars[\"ID\"];\n\t\t/** The HTTP path for this repository-topic. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The topic. */\n\t\ttopic: Topic;\n\t\t/** The HTTP URL for this repository-topic. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** The connection type for RepositoryTopic. */\nexport type RepositoryTopicConnection = {\n\t__typename?: \"RepositoryTopicConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RepositoryTopicEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<RepositoryTopic>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RepositoryTopicEdge = {\n\t__typename?: \"RepositoryTopicEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<RepositoryTopic>;\n};\n\n/** The repository's visibility level. */\nexport enum RepositoryVisibility {\n\t/** The repository is visible only to those with explicit access. */\n\tPrivate = \"PRIVATE\",\n\t/** The repository is visible to everyone. */\n\tPublic = \"PUBLIC\",\n\t/** The repository is visible only to users in the same business. */\n\tInternal = \"INTERNAL\",\n}\n\n/** Audit log entry for a repository_visibility_change.disable event. */\nexport type RepositoryVisibilityChangeDisableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepositoryVisibilityChangeDisableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a repository_visibility_change.enable event. */\nexport type RepositoryVisibilityChangeEnableAuditEntry = Node &\n\tAuditEntry &\n\tEnterpriseAuditEntryData &\n\tOrganizationAuditEntryData & {\n\t\t__typename?: \"RepositoryVisibilityChangeEnableAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\t/** The HTTP path for this enterprise. */\n\t\tenterpriseResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The slug of the enterprise. */\n\t\tenterpriseSlug?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP URL for this enterprise. */\n\t\tenterpriseUrl?: Maybe<Scalars[\"URI\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** A alert for a repository with an affected vulnerability. */\nexport type RepositoryVulnerabilityAlert = Node &\n\tRepositoryNode & {\n\t\t__typename?: \"RepositoryVulnerabilityAlert\";\n\t\t/** When was the alert created? */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** The reason the alert was dismissed */\n\t\tdismissReason?: Maybe<Scalars[\"String\"]>;\n\t\t/** When was the alert dimissed? */\n\t\tdismissedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** The user who dismissed the alert */\n\t\tdismisser?: Maybe<User>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The associated repository */\n\t\trepository: Repository;\n\t\t/** The associated security advisory */\n\t\tsecurityAdvisory?: Maybe<SecurityAdvisory>;\n\t\t/** The associated security vulnerablity */\n\t\tsecurityVulnerability?: Maybe<SecurityVulnerability>;\n\t\t/** The vulnerable manifest filename */\n\t\tvulnerableManifestFilename: Scalars[\"String\"];\n\t\t/** The vulnerable manifest path */\n\t\tvulnerableManifestPath: Scalars[\"String\"];\n\t\t/** The vulnerable requirements */\n\t\tvulnerableRequirements?: Maybe<Scalars[\"String\"]>;\n\t};\n\n/** The connection type for RepositoryVulnerabilityAlert. */\nexport type RepositoryVulnerabilityAlertConnection = {\n\t__typename?: \"RepositoryVulnerabilityAlertConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<RepositoryVulnerabilityAlertEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<RepositoryVulnerabilityAlert>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type RepositoryVulnerabilityAlertEdge = {\n\t__typename?: \"RepositoryVulnerabilityAlertEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<RepositoryVulnerabilityAlert>;\n};\n\n/** Autogenerated input type of RequestReviews */\nexport type RequestReviewsInput = {\n\t/** The Node ID of the pull request to modify. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/** The Node IDs of the user to request. */\n\tuserIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** The Node IDs of the team to request. */\n\tteamIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** Add users to the set rather than replace. */\n\tunion?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of RequestReviews */\nexport type RequestReviewsPayload = {\n\t__typename?: \"RequestReviewsPayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The pull request that is getting requests. */\n\tpullRequest?: Maybe<PullRequest>;\n\t/** The edge from the pull request to the requested reviewers. */\n\trequestedReviewersEdge?: Maybe<UserEdge>;\n};\n\n/** Types that can be requested reviewers. */\nexport type RequestedReviewer = Mannequin | Team | User;\n\n/** Autogenerated input type of ResolveReviewThread */\nexport type ResolveReviewThreadInput = {\n\t/** The ID of the thread to resolve */\n\tthreadId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of ResolveReviewThread */\nexport type ResolveReviewThreadPayload = {\n\t__typename?: \"ResolveReviewThreadPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The thread to resolve. */\n\tthread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents a private contribution a user made on GitHub. */\nexport type RestrictedContribution = Contribution & {\n\t__typename?: \"RestrictedContribution\";\n\t/**\n\t * Whether this contribution is associated with a record you do not have access to. For\n\t * example, your own 'first issue' contribution may have been made on a repository you can no\n\t * longer access.\n\t */\n\tisRestricted: Scalars[\"Boolean\"];\n\t/** When this contribution was made. */\n\toccurredAt: Scalars[\"DateTime\"];\n\t/** The HTTP path for this contribution. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL for this contribution. */\n\turl: Scalars[\"URI\"];\n\t/** The user who made this contribution. */\n\tuser: User;\n};\n\n/** A team or user who has the ability to dismiss a review on a protected branch. */\nexport type ReviewDismissalAllowance = Node & {\n\t__typename?: \"ReviewDismissalAllowance\";\n\t/** The actor that can dismiss. */\n\tactor?: Maybe<ReviewDismissalAllowanceActor>;\n\t/** Identifies the branch protection rule associated with the allowed user or team. */\n\tbranchProtectionRule?: Maybe<BranchProtectionRule>;\n\tid: Scalars[\"ID\"];\n};\n\n/** Types that can be an actor. */\nexport type ReviewDismissalAllowanceActor = Team | User;\n\n/** The connection type for ReviewDismissalAllowance. */\nexport type ReviewDismissalAllowanceConnection = {\n\t__typename?: \"ReviewDismissalAllowanceConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReviewDismissalAllowanceEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ReviewDismissalAllowance>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReviewDismissalAllowanceEdge = {\n\t__typename?: \"ReviewDismissalAllowanceEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ReviewDismissalAllowance>;\n};\n\n/** Represents a 'review_dismissed' event on a given issue or pull request. */\nexport type ReviewDismissedEvent = Node &\n\tUniformResourceLocatable & {\n\t\t__typename?: \"ReviewDismissedEvent\";\n\t\t/** Identifies the actor who performed the event. */\n\t\tactor?: Maybe<Actor>;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** Identifies the optional message associated with the 'review_dismissed' event. */\n\t\tdismissalMessage?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the optional message associated with the event, rendered to HTML. */\n\t\tdismissalMessageHTML?: Maybe<Scalars[\"String\"]>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Identifies the previous state of the review with the 'review_dismissed' event. */\n\t\tpreviousReviewState: PullRequestReviewState;\n\t\t/** PullRequest referenced by event. */\n\t\tpullRequest: PullRequest;\n\t\t/** Identifies the commit which caused the review to become stale. */\n\t\tpullRequestCommit?: Maybe<PullRequestCommit>;\n\t\t/** The HTTP path for this review dismissed event. */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the review associated with the 'review_dismissed' event. */\n\t\treview?: Maybe<PullRequestReview>;\n\t\t/** The HTTP URL for this review dismissed event. */\n\t\turl: Scalars[\"URI\"];\n\t};\n\n/** A request for a user to review a pull request. */\nexport type ReviewRequest = Node & {\n\t__typename?: \"ReviewRequest\";\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** Identifies the pull request associated with this review request. */\n\tpullRequest: PullRequest;\n\t/** The reviewer that is requested. */\n\trequestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** The connection type for ReviewRequest. */\nexport type ReviewRequestConnection = {\n\t__typename?: \"ReviewRequestConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<ReviewRequestEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<ReviewRequest>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type ReviewRequestEdge = {\n\t__typename?: \"ReviewRequestEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<ReviewRequest>;\n};\n\n/** Represents an 'review_request_removed' event on a given pull request. */\nexport type ReviewRequestRemovedEvent = Node & {\n\t__typename?: \"ReviewRequestRemovedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n\t/** Identifies the reviewer whose review request was removed. */\n\trequestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/** Represents an 'review_requested' event on a given pull request. */\nexport type ReviewRequestedEvent = Node & {\n\t__typename?: \"ReviewRequestedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** PullRequest referenced by event. */\n\tpullRequest: PullRequest;\n\t/** Identifies the reviewer whose review was requested. */\n\trequestedReviewer?: Maybe<RequestedReviewer>;\n};\n\n/**\n * A hovercard context with a message describing the current code review state of the pull\n * request.\n */\nexport type ReviewStatusHovercardContext = HovercardContext & {\n\t__typename?: \"ReviewStatusHovercardContext\";\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n\t/** The current status of the pull request with respect to code review. */\n\treviewDecision?: Maybe<PullRequestReviewDecision>;\n};\n\n/** The possible digest algorithms used to sign SAML requests for an identity provider. */\nexport enum SamlDigestAlgorithm {\n\t/** SHA1 */\n\tSha1 = \"SHA1\",\n\t/** SHA256 */\n\tSha256 = \"SHA256\",\n\t/** SHA384 */\n\tSha384 = \"SHA384\",\n\t/** SHA512 */\n\tSha512 = \"SHA512\",\n}\n\n/** The possible signature algorithms used to sign SAML requests for a Identity Provider. */\nexport enum SamlSignatureAlgorithm {\n\t/** RSA-SHA1 */\n\tRsaSha1 = \"RSA_SHA1\",\n\t/** RSA-SHA256 */\n\tRsaSha256 = \"RSA_SHA256\",\n\t/** RSA-SHA384 */\n\tRsaSha384 = \"RSA_SHA384\",\n\t/** RSA-SHA512 */\n\tRsaSha512 = \"RSA_SHA512\",\n}\n\n/** A Saved Reply is text a user can use to reply quickly. */\nexport type SavedReply = Node & {\n\t__typename?: \"SavedReply\";\n\t/** The body of the saved reply. */\n\tbody: Scalars[\"String\"];\n\t/** The saved reply body rendered to HTML. */\n\tbodyHTML: Scalars[\"HTML\"];\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The title of the saved reply. */\n\ttitle: Scalars[\"String\"];\n\t/** The user that saved this reply. */\n\tuser?: Maybe<Actor>;\n};\n\n/** The connection type for SavedReply. */\nexport type SavedReplyConnection = {\n\t__typename?: \"SavedReplyConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SavedReplyEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<SavedReply>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SavedReplyEdge = {\n\t__typename?: \"SavedReplyEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<SavedReply>;\n};\n\n/** Ordering options for saved reply connections. */\nexport type SavedReplyOrder = {\n\t/** The field to order saved replies by. */\n\tfield: SavedReplyOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which saved reply connections can be ordered. */\nexport enum SavedReplyOrderField {\n\t/** Order saved reply by when they were updated. */\n\tUpdatedAt = \"UPDATED_AT\",\n}\n\n/** The results of a search. */\nexport type SearchResultItem = App | Issue | MarketplaceListing | Organization | PullRequest | Repository | User;\n\n/** A list of results that matched against a search query. */\nexport type SearchResultItemConnection = {\n\t__typename?: \"SearchResultItemConnection\";\n\t/** The number of pieces of code that matched the search query. */\n\tcodeCount: Scalars[\"Int\"];\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SearchResultItemEdge>>>;\n\t/** The number of issues that matched the search query. */\n\tissueCount: Scalars[\"Int\"];\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<SearchResultItem>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** The number of repositories that matched the search query. */\n\trepositoryCount: Scalars[\"Int\"];\n\t/** The number of users that matched the search query. */\n\tuserCount: Scalars[\"Int\"];\n\t/** The number of wiki pages that matched the search query. */\n\twikiCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SearchResultItemEdge = {\n\t__typename?: \"SearchResultItemEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<SearchResultItem>;\n\t/** Text matches on the result found. */\n\ttextMatches?: Maybe<Array<Maybe<TextMatch>>>;\n};\n\n/** Represents the individual results of a search. */\nexport enum SearchType {\n\t/** Returns results matching issues in repositories. */\n\tIssue = \"ISSUE\",\n\t/** Returns results matching repositories. */\n\tRepository = \"REPOSITORY\",\n\t/** Returns results matching users and organizations on GitHub. */\n\tUser = \"USER\",\n}\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisory = Node & {\n\t__typename?: \"SecurityAdvisory\";\n\t/** Identifies the primary key from the database. */\n\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t/** This is a long plaintext description of the advisory */\n\tdescription: Scalars[\"String\"];\n\t/** The GitHub Security Advisory ID */\n\tghsaId: Scalars[\"String\"];\n\tid: Scalars[\"ID\"];\n\t/** A list of identifiers for this advisory */\n\tidentifiers: Array<SecurityAdvisoryIdentifier>;\n\t/** The organization that originated the advisory */\n\torigin: Scalars[\"String\"];\n\t/** The permalink for the advisory */\n\tpermalink?: Maybe<Scalars[\"URI\"]>;\n\t/** When the advisory was published */\n\tpublishedAt: Scalars[\"DateTime\"];\n\t/** A list of references for this advisory */\n\treferences: Array<SecurityAdvisoryReference>;\n\t/** The severity of the advisory */\n\tseverity: SecurityAdvisorySeverity;\n\t/** A short plaintext summary of the advisory */\n\tsummary: Scalars[\"String\"];\n\t/** When the advisory was last updated */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** Vulnerabilities associated with this Advisory */\n\tvulnerabilities: SecurityVulnerabilityConnection;\n\t/** When the advisory was withdrawn, if it has been withdrawn */\n\twithdrawnAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** A GitHub Security Advisory */\nexport type SecurityAdvisoryVulnerabilitiesArgs = {\n\torderBy?: Maybe<SecurityVulnerabilityOrder>;\n\tecosystem?: Maybe<SecurityAdvisoryEcosystem>;\n\tpackage?: Maybe<Scalars[\"String\"]>;\n\tseverities?: Maybe<Array<SecurityAdvisorySeverity>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for SecurityAdvisory. */\nexport type SecurityAdvisoryConnection = {\n\t__typename?: \"SecurityAdvisoryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SecurityAdvisoryEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<SecurityAdvisory>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** The possible ecosystems of a security vulnerability's package. */\nexport enum SecurityAdvisoryEcosystem {\n\t/** Ruby gems hosted at RubyGems.org */\n\tRubygems = \"RUBYGEMS\",\n\t/** JavaScript packages hosted at npmjs.com */\n\tNpm = \"NPM\",\n\t/** Python packages hosted at PyPI.org */\n\tPip = \"PIP\",\n\t/** Java artifacts hosted at the Maven central repository */\n\tMaven = \"MAVEN\",\n\t/** .NET packages hosted at the NuGet Gallery */\n\tNuget = \"NUGET\",\n\t/** PHP packages hosted at packagist.org */\n\tComposer = \"COMPOSER\",\n}\n\n/** An edge in a connection. */\nexport type SecurityAdvisoryEdge = {\n\t__typename?: \"SecurityAdvisoryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<SecurityAdvisory>;\n};\n\n/** A GitHub Security Advisory Identifier */\nexport type SecurityAdvisoryIdentifier = {\n\t__typename?: \"SecurityAdvisoryIdentifier\";\n\t/** The identifier type, e.g. GHSA, CVE */\n\ttype: Scalars[\"String\"];\n\t/** The identifier */\n\tvalue: Scalars[\"String\"];\n};\n\n/** An advisory identifier to filter results on. */\nexport type SecurityAdvisoryIdentifierFilter = {\n\t/** The identifier type. */\n\ttype: SecurityAdvisoryIdentifierType;\n\t/** The identifier string. Supports exact or partial matching. */\n\tvalue: Scalars[\"String\"];\n};\n\n/** Identifier formats available for advisories. */\nexport enum SecurityAdvisoryIdentifierType {\n\t/** Common Vulnerabilities and Exposures Identifier. */\n\tCve = \"CVE\",\n\t/** GitHub Security Advisory ID. */\n\tGhsa = \"GHSA\",\n}\n\n/** Ordering options for security advisory connections */\nexport type SecurityAdvisoryOrder = {\n\t/** The field to order security advisories by. */\n\tfield: SecurityAdvisoryOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which security advisory connections can be ordered. */\nexport enum SecurityAdvisoryOrderField {\n\t/** Order advisories by publication time */\n\tPublishedAt = \"PUBLISHED_AT\",\n\t/** Order advisories by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n}\n\n/** An individual package */\nexport type SecurityAdvisoryPackage = {\n\t__typename?: \"SecurityAdvisoryPackage\";\n\t/** The ecosystem the package belongs to, e.g. RUBYGEMS, NPM */\n\tecosystem: SecurityAdvisoryEcosystem;\n\t/** The package name */\n\tname: Scalars[\"String\"];\n};\n\n/** An individual package version */\nexport type SecurityAdvisoryPackageVersion = {\n\t__typename?: \"SecurityAdvisoryPackageVersion\";\n\t/** The package name or version */\n\tidentifier: Scalars[\"String\"];\n};\n\n/** A GitHub Security Advisory Reference */\nexport type SecurityAdvisoryReference = {\n\t__typename?: \"SecurityAdvisoryReference\";\n\t/** A publicly accessible reference */\n\turl: Scalars[\"URI\"];\n};\n\n/** Severity of the vulnerability. */\nexport enum SecurityAdvisorySeverity {\n\t/** Low. */\n\tLow = \"LOW\",\n\t/** Moderate. */\n\tModerate = \"MODERATE\",\n\t/** High. */\n\tHigh = \"HIGH\",\n\t/** Critical. */\n\tCritical = \"CRITICAL\",\n}\n\n/** An individual vulnerability within an Advisory */\nexport type SecurityVulnerability = {\n\t__typename?: \"SecurityVulnerability\";\n\t/** The Advisory associated with this Vulnerability */\n\tadvisory: SecurityAdvisory;\n\t/** The first version containing a fix for the vulnerability */\n\tfirstPatchedVersion?: Maybe<SecurityAdvisoryPackageVersion>;\n\t/** A description of the vulnerable package */\n\tpackage: SecurityAdvisoryPackage;\n\t/** The severity of the vulnerability within this package */\n\tseverity: SecurityAdvisorySeverity;\n\t/** When the vulnerability was last updated */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/**\n\t * A string that describes the vulnerable package versions.\n\t * This string follows a basic syntax with a few forms.\n\t * + `= 0.2.0` denotes a single vulnerable version.\n\t * + `<= 1.0.8` denotes a version range up to and including the specified version\n\t * + `< 0.1.11` denotes a version range up to, but excluding, the specified version\n\t * + `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.\n\t * + `>= 0.0.1` denotes a version range with a known minimum, but no known maximum\n\t */\n\tvulnerableVersionRange: Scalars[\"String\"];\n};\n\n/** The connection type for SecurityVulnerability. */\nexport type SecurityVulnerabilityConnection = {\n\t__typename?: \"SecurityVulnerabilityConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SecurityVulnerabilityEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<SecurityVulnerability>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SecurityVulnerabilityEdge = {\n\t__typename?: \"SecurityVulnerabilityEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<SecurityVulnerability>;\n};\n\n/** Ordering options for security vulnerability connections */\nexport type SecurityVulnerabilityOrder = {\n\t/** The field to order security vulnerabilities by. */\n\tfield: SecurityVulnerabilityOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which security vulnerability connections can be ordered. */\nexport enum SecurityVulnerabilityOrderField {\n\t/** Order vulnerability by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n}\n\n/** Autogenerated input type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderInput = {\n\t/** The ID of the enterprise on which to set an identity provider. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The URL endpoint for the identity provider's SAML SSO. */\n\tssoUrl: Scalars[\"URI\"];\n\t/** The Issuer Entity ID for the SAML identity provider */\n\tissuer?: Maybe<Scalars[\"String\"]>;\n\t/** The x509 certificate used by the identity provider to sign assertions and responses. */\n\tidpCertificate: Scalars[\"String\"];\n\t/** The signature algorithm used to sign SAML requests for the identity provider. */\n\tsignatureMethod: SamlSignatureAlgorithm;\n\t/** The digest algorithm used to sign SAML requests for the identity provider. */\n\tdigestMethod: SamlDigestAlgorithm;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of SetEnterpriseIdentityProvider */\nexport type SetEnterpriseIdentityProviderPayload = {\n\t__typename?: \"SetEnterpriseIdentityProviderPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The identity provider for the enterprise. */\n\tidentityProvider?: Maybe<EnterpriseIdentityProvider>;\n};\n\n/** Represents an S/MIME signature on a Commit or Tag. */\nexport type SmimeSignature = GitSignature & {\n\t__typename?: \"SmimeSignature\";\n\t/** Email used to sign this object. */\n\temail: Scalars[\"String\"];\n\t/** True if the signature is valid and verified by GitHub. */\n\tisValid: Scalars[\"Boolean\"];\n\t/** Payload for GPG signing object. Raw ODB object without the signature header. */\n\tpayload: Scalars[\"String\"];\n\t/** ASCII-armored signature header from object. */\n\tsignature: Scalars[\"String\"];\n\t/** GitHub user corresponding to the email signing this commit. */\n\tsigner?: Maybe<User>;\n\t/** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n\tstate: GitSignatureState;\n\t/** True if the signature was made with GitHub's signing key. */\n\twasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Entites that can sponsor others via GitHub Sponsors */\nexport type Sponsor = Organization | User;\n\n/** Entities that can be sponsored through GitHub Sponsors */\nexport type Sponsorable = {\n\t/** The GitHub Sponsors listing for this user. */\n\tsponsorsListing?: Maybe<SponsorsListing>;\n\t/** This object's sponsorships as the maintainer. */\n\tsponsorshipsAsMaintainer: SponsorshipConnection;\n\t/** This object's sponsorships as the sponsor. */\n\tsponsorshipsAsSponsor: SponsorshipConnection;\n};\n\n/** Entities that can be sponsored through GitHub Sponsors */\nexport type SponsorableSponsorshipsAsMaintainerArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tincludePrivate?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** Entities that can be sponsored through GitHub Sponsors */\nexport type SponsorableSponsorshipsAsSponsorArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListing = Node & {\n\t__typename?: \"SponsorsListing\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The full description of the listing. */\n\tfullDescription: Scalars[\"String\"];\n\t/** The full description of the listing rendered to HTML. */\n\tfullDescriptionHTML: Scalars[\"HTML\"];\n\tid: Scalars[\"ID\"];\n\t/** The listing's full name. */\n\tname: Scalars[\"String\"];\n\t/** The short description of the listing. */\n\tshortDescription: Scalars[\"String\"];\n\t/** The short name of the listing. */\n\tslug: Scalars[\"String\"];\n\t/** The published tiers for this GitHub Sponsors listing. */\n\ttiers?: Maybe<SponsorsTierConnection>;\n};\n\n/** A GitHub Sponsors listing. */\nexport type SponsorsListingTiersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<SponsorsTierOrder>;\n};\n\n/** A GitHub Sponsors tier associated with a GitHub Sponsors listing. */\nexport type SponsorsTier = Node & {\n\t__typename?: \"SponsorsTier\";\n\t/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\n\tadminInfo?: Maybe<SponsorsTierAdminInfo>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The description of the tier. */\n\tdescription: Scalars[\"String\"];\n\t/** The tier description rendered to HTML */\n\tdescriptionHTML: Scalars[\"HTML\"];\n\tid: Scalars[\"ID\"];\n\t/** How much this tier costs per month in cents. */\n\tmonthlyPriceInCents: Scalars[\"Int\"];\n\t/** How much this tier costs per month in dollars. */\n\tmonthlyPriceInDollars: Scalars[\"Int\"];\n\t/** The name of the tier. */\n\tname: Scalars[\"String\"];\n\t/** The sponsors listing that this tier belongs to. */\n\tsponsorsListing: SponsorsListing;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfo = {\n\t__typename?: \"SponsorsTierAdminInfo\";\n\t/** The sponsorships associated with this tier. */\n\tsponsorships: SponsorshipConnection;\n};\n\n/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */\nexport type SponsorsTierAdminInfoSponsorshipsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tincludePrivate?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** The connection type for SponsorsTier. */\nexport type SponsorsTierConnection = {\n\t__typename?: \"SponsorsTierConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SponsorsTierEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<SponsorsTier>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorsTierEdge = {\n\t__typename?: \"SponsorsTierEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<SponsorsTier>;\n};\n\n/** Ordering options for Sponsors tiers connections. */\nexport type SponsorsTierOrder = {\n\t/** The field to order tiers by. */\n\tfield: SponsorsTierOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which Sponsors tiers connections can be ordered. */\nexport enum SponsorsTierOrderField {\n\t/** Order tiers by creation time. */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order tiers by their monthly price in cents */\n\tMonthlyPriceInCents = \"MONTHLY_PRICE_IN_CENTS\",\n}\n\n/** A sponsorship relationship between a sponsor and a maintainer */\nexport type Sponsorship = Node & {\n\t__typename?: \"Sponsorship\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/**\n\t * The entity that is being sponsored\n\t * @deprecated `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC.\n\t */\n\tmaintainer: User;\n\t/** The privacy level for this sponsorship. */\n\tprivacyLevel: SponsorshipPrivacy;\n\t/**\n\t * The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.\n\t * @deprecated `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC.\n\t */\n\tsponsor?: Maybe<User>;\n\t/** The user or organization that is sponsoring. Returns null if the sponsorship is private. */\n\tsponsorEntity?: Maybe<Sponsor>;\n\t/** The entity that is being sponsored */\n\tsponsorable: Sponsorable;\n\t/** The associated sponsorship tier */\n\ttier?: Maybe<SponsorsTier>;\n};\n\n/** The connection type for Sponsorship. */\nexport type SponsorshipConnection = {\n\t__typename?: \"SponsorshipConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SponsorshipEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Sponsorship>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SponsorshipEdge = {\n\t__typename?: \"SponsorshipEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Sponsorship>;\n};\n\n/** Ordering options for sponsorship connections. */\nexport type SponsorshipOrder = {\n\t/** The field to order sponsorship by. */\n\tfield: SponsorshipOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which sponsorship connections can be ordered. */\nexport enum SponsorshipOrderField {\n\t/** Order sponsorship by creation time. */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** The privacy of a sponsorship */\nexport enum SponsorshipPrivacy {\n\t/** Public */\n\tPublic = \"PUBLIC\",\n\t/** Private */\n\tPrivate = \"PRIVATE\",\n}\n\n/** Ways in which star connections can be ordered. */\nexport type StarOrder = {\n\t/** The field in which to order nodes by. */\n\tfield: StarOrderField;\n\t/** The direction in which to order nodes. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which star connections can be ordered. */\nexport enum StarOrderField {\n\t/** Allows ordering a list of stars by when they were created. */\n\tStarredAt = \"STARRED_AT\",\n}\n\n/** The connection type for User. */\nexport type StargazerConnection = {\n\t__typename?: \"StargazerConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<StargazerEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user that's starred a repository. */\nexport type StargazerEdge = {\n\t__typename?: \"StargazerEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\tnode: User;\n\t/** Identifies when the item was starred. */\n\tstarredAt: Scalars[\"DateTime\"];\n};\n\n/** Things that can be starred. */\nexport type Starrable = {\n\tid: Scalars[\"ID\"];\n\t/** A list of users who have starred this starrable. */\n\tstargazers: StargazerConnection;\n\t/** Returns a boolean indicating whether the viewing user has starred this starrable. */\n\tviewerHasStarred: Scalars[\"Boolean\"];\n};\n\n/** Things that can be starred. */\nexport type StarrableStargazersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<StarOrder>;\n};\n\n/** The connection type for Repository. */\nexport type StarredRepositoryConnection = {\n\t__typename?: \"StarredRepositoryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<StarredRepositoryEdge>>>;\n\t/** Is the list of stars for this user truncated? This is true for users that have many stars. */\n\tisOverLimit: Scalars[\"Boolean\"];\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Repository>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a starred repository. */\nexport type StarredRepositoryEdge = {\n\t__typename?: \"StarredRepositoryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\tnode: Repository;\n\t/** Identifies when the item was starred. */\n\tstarredAt: Scalars[\"DateTime\"];\n};\n\n/** Represents a commit status. */\nexport type Status = Node & {\n\t__typename?: \"Status\";\n\t/** The commit this status is attached to. */\n\tcommit?: Maybe<Commit>;\n\t/** Looks up an individual status context by context name. */\n\tcontext?: Maybe<StatusContext>;\n\t/** The individual status contexts for this commit. */\n\tcontexts: Array<StatusContext>;\n\tid: Scalars[\"ID\"];\n\t/** The combined commit status. */\n\tstate: StatusState;\n};\n\n/** Represents a commit status. */\nexport type StatusContextArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollup = Node & {\n\t__typename?: \"StatusCheckRollup\";\n\t/** The commit the status and check runs are attached to. */\n\tcommit?: Maybe<Commit>;\n\t/** A list of status contexts and check runs for this commit. */\n\tcontexts: StatusCheckRollupContextConnection;\n\tid: Scalars[\"ID\"];\n\t/** The combined status for the commit. */\n\tstate: StatusState;\n};\n\n/** Represents the rollup for both the check runs and status for a commit. */\nexport type StatusCheckRollupContextsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Types that can be inside a StatusCheckRollup context. */\nexport type StatusCheckRollupContext = StatusContext;\n\n/** The connection type for StatusCheckRollupContext. */\nexport type StatusCheckRollupContextConnection = {\n\t__typename?: \"StatusCheckRollupContextConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<StatusCheckRollupContextEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<StatusCheckRollupContext>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type StatusCheckRollupContextEdge = {\n\t__typename?: \"StatusCheckRollupContextEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<StatusCheckRollupContext>;\n};\n\n/** Represents an individual commit status context */\nexport type StatusContext = Node & {\n\t__typename?: \"StatusContext\";\n\t/** The avatar of the OAuth application or the user that created the status */\n\tavatarUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** This commit this status context is attached to. */\n\tcommit?: Maybe<Commit>;\n\t/** The name of this status context. */\n\tcontext: Scalars[\"String\"];\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The actor who created this status context. */\n\tcreator?: Maybe<Actor>;\n\t/** The description for this status context. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\tid: Scalars[\"ID\"];\n\t/** The state of this status context. */\n\tstate: StatusState;\n\t/** The URL for this status context. */\n\ttargetUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Represents an individual commit status context */\nexport type StatusContextAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The possible commit status states. */\nexport enum StatusState {\n\t/** Status is expected. */\n\tExpected = \"EXPECTED\",\n\t/** Status is errored. */\n\tError = \"ERROR\",\n\t/** Status is failing. */\n\tFailure = \"FAILURE\",\n\t/** Status is pending. */\n\tPending = \"PENDING\",\n\t/** Status is successful. */\n\tSuccess = \"SUCCESS\",\n}\n\n/** Autogenerated input type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewInput = {\n\t/** The Pull Request ID to submit any pending reviews. */\n\tpullRequestId?: Maybe<Scalars[\"ID\"]>;\n\t/** The Pull Request Review ID to submit. */\n\tpullRequestReviewId?: Maybe<Scalars[\"ID\"]>;\n\t/** The event to send to the Pull Request Review. */\n\tevent: PullRequestReviewEvent;\n\t/** The text field to set on the Pull Request Review. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of SubmitPullRequestReview */\nexport type SubmitPullRequestReviewPayload = {\n\t__typename?: \"SubmitPullRequestReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The submitted pull request review. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** A pointer to a repository at a specific revision embedded inside another repository. */\nexport type Submodule = {\n\t__typename?: \"Submodule\";\n\t/** The branch of the upstream submodule for tracking updates */\n\tbranch?: Maybe<Scalars[\"String\"]>;\n\t/** The git URL of the submodule repository */\n\tgitUrl: Scalars[\"URI\"];\n\t/** The name of the submodule in .gitmodules */\n\tname: Scalars[\"String\"];\n\t/** The path in the superproject that this submodule is located in */\n\tpath: Scalars[\"String\"];\n\t/** The commit revision of the subproject repository being tracked by the submodule */\n\tsubprojectCommitOid?: Maybe<Scalars[\"GitObjectID\"]>;\n};\n\n/** The connection type for Submodule. */\nexport type SubmoduleConnection = {\n\t__typename?: \"SubmoduleConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<SubmoduleEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Submodule>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type SubmoduleEdge = {\n\t__typename?: \"SubmoduleEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Submodule>;\n};\n\n/** Entities that can be subscribed to for web and email notifications. */\nexport type Subscribable = {\n\tid: Scalars[\"ID\"];\n\t/** Check if the viewer is able to change their subscription status for the repository. */\n\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\tviewerSubscription?: Maybe<SubscriptionState>;\n};\n\n/** Represents a 'subscribed' event on a given `Subscribable`. */\nexport type SubscribedEvent = Node & {\n\t__typename?: \"SubscribedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Object referenced by event. */\n\tsubscribable: Subscribable;\n};\n\n/** The possible states of a subscription. */\nexport enum SubscriptionState {\n\t/** The User is only notified when participating or @mentioned. */\n\tUnsubscribed = \"UNSUBSCRIBED\",\n\t/** The User is notified of all conversations. */\n\tSubscribed = \"SUBSCRIBED\",\n\t/** The User is never notified. */\n\tIgnored = \"IGNORED\",\n}\n\n/** A suggestion to review a pull request based on a user's commit history and review comments. */\nexport type SuggestedReviewer = {\n\t__typename?: \"SuggestedReviewer\";\n\t/** Is this suggestion based on past commits? */\n\tisAuthor: Scalars[\"Boolean\"];\n\t/** Is this suggestion based on past review comments? */\n\tisCommenter: Scalars[\"Boolean\"];\n\t/** Identifies the user suggested to review the pull request. */\n\treviewer: User;\n};\n\n/** Represents a Git tag. */\nexport type Tag = Node &\n\tGitObject & {\n\t\t__typename?: \"Tag\";\n\t\t/** An abbreviated version of the Git object ID */\n\t\tabbreviatedOid: Scalars[\"String\"];\n\t\t/** The HTTP path for this Git object */\n\t\tcommitResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this Git object */\n\t\tcommitUrl: Scalars[\"URI\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** The Git tag message. */\n\t\tmessage?: Maybe<Scalars[\"String\"]>;\n\t\t/** The Git tag name. */\n\t\tname: Scalars[\"String\"];\n\t\t/** The Git object ID */\n\t\toid: Scalars[\"GitObjectID\"];\n\t\t/** The Repository the Git object belongs to */\n\t\trepository: Repository;\n\t\t/** Details about the tag author. */\n\t\ttagger?: Maybe<GitActor>;\n\t\t/** The Git object the tag points to. */\n\t\ttarget: GitObject;\n\t};\n\n/** A team of users in an organization. */\nexport type Team = Node &\n\tSubscribable &\n\tMemberStatusable & {\n\t\t__typename?: \"Team\";\n\t\t/** A list of teams that are ancestors of this team. */\n\t\tancestors: TeamConnection;\n\t\t/** A URL pointing to the team's avatar. */\n\t\tavatarUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** List of child teams belonging to this team */\n\t\tchildTeams: TeamConnection;\n\t\t/** The slug corresponding to the organization and team. */\n\t\tcombinedSlug: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The description of the team. */\n\t\tdescription?: Maybe<Scalars[\"String\"]>;\n\t\t/** Find a team discussion by its number. */\n\t\tdiscussion?: Maybe<TeamDiscussion>;\n\t\t/** A list of team discussions. */\n\t\tdiscussions: TeamDiscussionConnection;\n\t\t/** The HTTP path for team discussions */\n\t\tdiscussionsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for team discussions */\n\t\tdiscussionsUrl: Scalars[\"URI\"];\n\t\t/** The HTTP path for editing this team */\n\t\teditTeamResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for editing this team */\n\t\teditTeamUrl: Scalars[\"URI\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** A list of pending invitations for users to this team */\n\t\tinvitations?: Maybe<OrganizationInvitationConnection>;\n\t\t/** Get the status messages members of this entity have set that are either public or visible only to the organization. */\n\t\tmemberStatuses: UserStatusConnection;\n\t\t/** A list of users who are members of this team. */\n\t\tmembers: TeamMemberConnection;\n\t\t/** The HTTP path for the team' members */\n\t\tmembersResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for the team' members */\n\t\tmembersUrl: Scalars[\"URI\"];\n\t\t/** The name of the team. */\n\t\tname: Scalars[\"String\"];\n\t\t/** The HTTP path creating a new team */\n\t\tnewTeamResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL creating a new team */\n\t\tnewTeamUrl: Scalars[\"URI\"];\n\t\t/** The organization that owns this team. */\n\t\torganization: Organization;\n\t\t/** The parent team of the team. */\n\t\tparentTeam?: Maybe<Team>;\n\t\t/** The level of privacy the team has. */\n\t\tprivacy: TeamPrivacy;\n\t\t/** A list of repositories this team has access to. */\n\t\trepositories: TeamRepositoryConnection;\n\t\t/** The HTTP path for this team's repositories */\n\t\trepositoriesResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this team's repositories */\n\t\trepositoriesUrl: Scalars[\"URI\"];\n\t\t/** The HTTP path for this team */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The slug corresponding to the team. */\n\t\tslug: Scalars[\"String\"];\n\t\t/** The HTTP path for this team's teams */\n\t\tteamsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this team's teams */\n\t\tteamsUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this team */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Team is adminable by the viewer. */\n\t\tviewerCanAdminister: Scalars[\"Boolean\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t};\n\n/** A team of users in an organization. */\nexport type TeamAncestorsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamChildTeamsArgs = {\n\torderBy?: Maybe<TeamOrder>;\n\tuserLogins?: Maybe<Array<Scalars[\"String\"]>>;\n\timmediateOnly?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamDiscussionArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A team of users in an organization. */\nexport type TeamDiscussionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tisPinned?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<TeamDiscussionOrder>;\n};\n\n/** A team of users in an organization. */\nexport type TeamInvitationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A team of users in an organization. */\nexport type TeamMemberStatusesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<UserStatusOrder>;\n};\n\n/** A team of users in an organization. */\nexport type TeamMembersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\tmembership?: Maybe<TeamMembershipType>;\n\trole?: Maybe<TeamMemberRole>;\n\torderBy?: Maybe<TeamMemberOrder>;\n};\n\n/** A team of users in an organization. */\nexport type TeamRepositoriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tquery?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<TeamRepositoryOrder>;\n};\n\n/** Audit log entry for a team.add_member event. */\nexport type TeamAddMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tTeamAuditEntryData & {\n\t\t__typename?: \"TeamAddMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the team was mapped to an LDAP Group. */\n\t\tisLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The team associated with the action */\n\t\tteam?: Maybe<Team>;\n\t\t/** The name of the team */\n\t\tteamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for this team */\n\t\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for this team */\n\t\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a team.add_repository event. */\nexport type TeamAddRepositoryAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData &\n\tTeamAuditEntryData & {\n\t\t__typename?: \"TeamAddRepositoryAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the team was mapped to an LDAP Group. */\n\t\tisLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The team associated with the action */\n\t\tteam?: Maybe<Team>;\n\t\t/** The name of the team */\n\t\tteamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for this team */\n\t\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for this team */\n\t\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Metadata for an audit entry with action team.* */\nexport type TeamAuditEntryData = {\n\t/** The team associated with the action */\n\tteam?: Maybe<Team>;\n\t/** The name of the team */\n\tteamName?: Maybe<Scalars[\"String\"]>;\n\t/** The HTTP path for this team */\n\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t/** The HTTP URL for this team */\n\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n};\n\n/** Audit log entry for a team.change_parent_team event. */\nexport type TeamChangeParentTeamAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tTeamAuditEntryData & {\n\t\t__typename?: \"TeamChangeParentTeamAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the team was mapped to an LDAP Group. */\n\t\tisLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The new parent team. */\n\t\tparentTeam?: Maybe<Team>;\n\t\t/** The name of the new parent team */\n\t\tparentTeamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The name of the former parent team */\n\t\tparentTeamNameWas?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the parent team */\n\t\tparentTeamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the parent team */\n\t\tparentTeamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The former parent team. */\n\t\tparentTeamWas?: Maybe<Team>;\n\t\t/** The HTTP path for the previous parent team */\n\t\tparentTeamWasResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the previous parent team */\n\t\tparentTeamWasUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The team associated with the action */\n\t\tteam?: Maybe<Team>;\n\t\t/** The name of the team */\n\t\tteamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for this team */\n\t\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for this team */\n\t\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The connection type for Team. */\nexport type TeamConnection = {\n\t__typename?: \"TeamConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<TeamEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Team>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** A team discussion. */\nexport type TeamDiscussion = Node &\n\tComment &\n\tDeletable &\n\tReactable &\n\tSubscribable &\n\tUniformResourceLocatable &\n\tUpdatable &\n\tUpdatableComment & {\n\t\t__typename?: \"TeamDiscussion\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the discussion's team. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** The body as Markdown. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** Identifies the discussion body hash. */\n\t\tbodyVersion: Scalars[\"String\"];\n\t\t/** A list of comments on this discussion. */\n\t\tcomments: TeamDiscussionCommentConnection;\n\t\t/** The HTTP path for discussion comments */\n\t\tcommentsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for discussion comments */\n\t\tcommentsUrl: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** Whether or not the discussion is pinned. */\n\t\tisPinned: Scalars[\"Boolean\"];\n\t\t/** Whether or not the discussion is only visible to team members and org admins. */\n\t\tisPrivate: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the discussion within its team. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The HTTP path for this discussion */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** The team that defines the context of this discussion. */\n\t\tteam: Team;\n\t\t/** The title of the discussion */\n\t\ttitle: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this discussion */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Whether or not the current viewer can pin this discussion. */\n\t\tviewerCanPin: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the viewer is able to change their subscription status for the repository. */\n\t\tviewerCanSubscribe: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t\t/** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */\n\t\tviewerSubscription?: Maybe<SubscriptionState>;\n\t};\n\n/** A team discussion. */\nexport type TeamDiscussionCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<TeamDiscussionCommentOrder>;\n\tfromComment?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A team discussion. */\nexport type TeamDiscussionReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** A team discussion. */\nexport type TeamDiscussionUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionComment = Node &\n\tComment &\n\tDeletable &\n\tReactable &\n\tUniformResourceLocatable &\n\tUpdatable &\n\tUpdatableComment & {\n\t\t__typename?: \"TeamDiscussionComment\";\n\t\t/** The actor who authored the comment. */\n\t\tauthor?: Maybe<Actor>;\n\t\t/** Author's association with the comment's team. */\n\t\tauthorAssociation: CommentAuthorAssociation;\n\t\t/** The body as Markdown. */\n\t\tbody: Scalars[\"String\"];\n\t\t/** The body rendered to HTML. */\n\t\tbodyHTML: Scalars[\"HTML\"];\n\t\t/** The body rendered to text. */\n\t\tbodyText: Scalars[\"String\"];\n\t\t/** The current version of the body content. */\n\t\tbodyVersion: Scalars[\"String\"];\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Check if this comment was created via an email reply. */\n\t\tcreatedViaEmail: Scalars[\"Boolean\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The discussion this comment is about. */\n\t\tdiscussion: TeamDiscussion;\n\t\t/** The actor who edited the comment. */\n\t\teditor?: Maybe<Actor>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Check if this comment was edited and includes an edit with the creation data */\n\t\tincludesCreatedEdit: Scalars[\"Boolean\"];\n\t\t/** The moment the editor made the last edit */\n\t\tlastEditedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** Identifies the comment number. */\n\t\tnumber: Scalars[\"Int\"];\n\t\t/** Identifies when the comment was published at. */\n\t\tpublishedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t\t/** A list of reactions grouped by content left on the subject. */\n\t\treactionGroups?: Maybe<Array<ReactionGroup>>;\n\t\t/** A list of Reactions left on the Issue. */\n\t\treactions: ReactionConnection;\n\t\t/** The HTTP path for this comment */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this comment */\n\t\turl: Scalars[\"URI\"];\n\t\t/** A list of edits to this content. */\n\t\tuserContentEdits?: Maybe<UserContentEditConnection>;\n\t\t/** Check if the current viewer can delete this object. */\n\t\tviewerCanDelete: Scalars[\"Boolean\"];\n\t\t/** Can user react to this subject */\n\t\tviewerCanReact: Scalars[\"Boolean\"];\n\t\t/** Check if the current viewer can update this object. */\n\t\tviewerCanUpdate: Scalars[\"Boolean\"];\n\t\t/** Reasons why the current viewer can not update this comment. */\n\t\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n\t\t/** Did the viewer author this comment. */\n\t\tviewerDidAuthor: Scalars[\"Boolean\"];\n\t};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentReactionsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tcontent?: Maybe<ReactionContent>;\n\torderBy?: Maybe<ReactionOrder>;\n};\n\n/** A comment on a team discussion. */\nexport type TeamDiscussionCommentUserContentEditsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The connection type for TeamDiscussionComment. */\nexport type TeamDiscussionCommentConnection = {\n\t__typename?: \"TeamDiscussionCommentConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<TeamDiscussionCommentEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<TeamDiscussionComment>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionCommentEdge = {\n\t__typename?: \"TeamDiscussionCommentEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<TeamDiscussionComment>;\n};\n\n/** Ways in which team discussion comment connections can be ordered. */\nexport type TeamDiscussionCommentOrder = {\n\t/** The field by which to order nodes. */\n\tfield: TeamDiscussionCommentOrderField;\n\t/** The direction in which to order nodes. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which team discussion comment connections can be ordered. */\nexport enum TeamDiscussionCommentOrderField {\n\t/** Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering). */\n\tNumber = \"NUMBER\",\n}\n\n/** The connection type for TeamDiscussion. */\nexport type TeamDiscussionConnection = {\n\t__typename?: \"TeamDiscussionConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<TeamDiscussionEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<TeamDiscussion>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type TeamDiscussionEdge = {\n\t__typename?: \"TeamDiscussionEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<TeamDiscussion>;\n};\n\n/** Ways in which team discussion connections can be ordered. */\nexport type TeamDiscussionOrder = {\n\t/** The field by which to order nodes. */\n\tfield: TeamDiscussionOrderField;\n\t/** The direction in which to order nodes. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which team discussion connections can be ordered. */\nexport enum TeamDiscussionOrderField {\n\t/** Allows chronological ordering of team discussions. */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** An edge in a connection. */\nexport type TeamEdge = {\n\t__typename?: \"TeamEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<Team>;\n};\n\n/** The connection type for User. */\nexport type TeamMemberConnection = {\n\t__typename?: \"TeamMemberConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<TeamMemberEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a user who is a member of a team. */\nexport type TeamMemberEdge = {\n\t__typename?: \"TeamMemberEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The HTTP path to the organization's member access page. */\n\tmemberAccessResourcePath: Scalars[\"URI\"];\n\t/** The HTTP URL to the organization's member access page. */\n\tmemberAccessUrl: Scalars[\"URI\"];\n\tnode: User;\n\t/** The role the member has on the team. */\n\trole: TeamMemberRole;\n};\n\n/** Ordering options for team member connections */\nexport type TeamMemberOrder = {\n\t/** The field to order team members by. */\n\tfield: TeamMemberOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which team member connections can be ordered. */\nexport enum TeamMemberOrderField {\n\t/** Order team members by login */\n\tLogin = \"LOGIN\",\n\t/** Order team members by creation time */\n\tCreatedAt = \"CREATED_AT\",\n}\n\n/** The possible team member roles; either 'maintainer' or 'member'. */\nexport enum TeamMemberRole {\n\t/** A team maintainer has permission to add and remove team members. */\n\tMaintainer = \"MAINTAINER\",\n\t/** A team member has no administrative permissions on the team. */\n\tMember = \"MEMBER\",\n}\n\n/** Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL. */\nexport enum TeamMembershipType {\n\t/** Includes only immediate members of the team. */\n\tImmediate = \"IMMEDIATE\",\n\t/** Includes only child team members for the team. */\n\tChildTeam = \"CHILD_TEAM\",\n\t/** Includes immediate and child team members for the team. */\n\tAll = \"ALL\",\n}\n\n/** Ways in which team connections can be ordered. */\nexport type TeamOrder = {\n\t/** The field in which to order nodes by. */\n\tfield: TeamOrderField;\n\t/** The direction in which to order nodes. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which team connections can be ordered. */\nexport enum TeamOrderField {\n\t/** Allows ordering a list of teams by name. */\n\tName = \"NAME\",\n}\n\n/** The possible team privacy values. */\nexport enum TeamPrivacy {\n\t/** A secret team can only be seen by its members. */\n\tSecret = \"SECRET\",\n\t/** A visible team can be seen and @mentioned by every member of the organization. */\n\tVisible = \"VISIBLE\",\n}\n\n/** Audit log entry for a team.remove_member event. */\nexport type TeamRemoveMemberAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tTeamAuditEntryData & {\n\t\t__typename?: \"TeamRemoveMemberAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the team was mapped to an LDAP Group. */\n\t\tisLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The team associated with the action */\n\t\tteam?: Maybe<Team>;\n\t\t/** The name of the team */\n\t\tteamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for this team */\n\t\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for this team */\n\t\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** Audit log entry for a team.remove_repository event. */\nexport type TeamRemoveRepositoryAuditEntry = Node &\n\tAuditEntry &\n\tOrganizationAuditEntryData &\n\tRepositoryAuditEntryData &\n\tTeamAuditEntryData & {\n\t\t__typename?: \"TeamRemoveRepositoryAuditEntry\";\n\t\t/** The action name */\n\t\taction: Scalars[\"String\"];\n\t\t/** The user who initiated the action */\n\t\tactor?: Maybe<AuditEntryActor>;\n\t\t/** The IP address of the actor */\n\t\tactorIp?: Maybe<Scalars[\"String\"]>;\n\t\t/** A readable representation of the actor's location */\n\t\tactorLocation?: Maybe<ActorLocation>;\n\t\t/** The username of the user who initiated the action */\n\t\tactorLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the actor. */\n\t\tactorResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the actor. */\n\t\tactorUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The time the action was initiated */\n\t\tcreatedAt: Scalars[\"PreciseDateTime\"];\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether the team was mapped to an LDAP Group. */\n\t\tisLdapMapped?: Maybe<Scalars[\"Boolean\"]>;\n\t\t/** The corresponding operation type for the action */\n\t\toperationType?: Maybe<OperationType>;\n\t\t/** The Organization associated with the Audit Entry. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** The name of the Organization. */\n\t\torganizationName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the organization */\n\t\torganizationResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the organization */\n\t\torganizationUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The repository associated with the action */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The name of the repository */\n\t\trepositoryName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the repository */\n\t\trepositoryResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the repository */\n\t\trepositoryUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The team associated with the action */\n\t\tteam?: Maybe<Team>;\n\t\t/** The name of the team */\n\t\tteamName?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for this team */\n\t\tteamResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for this team */\n\t\tteamUrl?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The user affected by the action */\n\t\tuser?: Maybe<User>;\n\t\t/** For actions involving two users, the actor is the initiator and the user is the affected user. */\n\t\tuserLogin?: Maybe<Scalars[\"String\"]>;\n\t\t/** The HTTP path for the user. */\n\t\tuserResourcePath?: Maybe<Scalars[\"URI\"]>;\n\t\t/** The HTTP URL for the user. */\n\t\tuserUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** The connection type for Repository. */\nexport type TeamRepositoryConnection = {\n\t__typename?: \"TeamRepositoryConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<TeamRepositoryEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<Repository>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** Represents a team repository. */\nexport type TeamRepositoryEdge = {\n\t__typename?: \"TeamRepositoryEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\tnode: Repository;\n\t/**\n\t * The permission level the team has on the repository\n\t *\n\t * **Upcoming Change on 2020-10-01 UTC**\n\t * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.\n\t * **Reason:** This field may return additional values\n\t */\n\tpermission: RepositoryPermission;\n};\n\n/** Ordering options for team repository connections */\nexport type TeamRepositoryOrder = {\n\t/** The field to order repositories by. */\n\tfield: TeamRepositoryOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which team repository connections can be ordered. */\nexport enum TeamRepositoryOrderField {\n\t/** Order repositories by creation time */\n\tCreatedAt = \"CREATED_AT\",\n\t/** Order repositories by update time */\n\tUpdatedAt = \"UPDATED_AT\",\n\t/** Order repositories by push time */\n\tPushedAt = \"PUSHED_AT\",\n\t/** Order repositories by name */\n\tName = \"NAME\",\n\t/** Order repositories by permission */\n\tPermission = \"PERMISSION\",\n\t/** Order repositories by number of stargazers */\n\tStargazers = \"STARGAZERS\",\n}\n\n/** The role of a user on a team. */\nexport enum TeamRole {\n\t/** User has admin rights on the team. */\n\tAdmin = \"ADMIN\",\n\t/** User is a member of the team. */\n\tMember = \"MEMBER\",\n}\n\n/** A text match within a search result. */\nexport type TextMatch = {\n\t__typename?: \"TextMatch\";\n\t/** The specific text fragment within the property matched on. */\n\tfragment: Scalars[\"String\"];\n\t/** Highlights within the matched fragment. */\n\thighlights: Array<TextMatchHighlight>;\n\t/** The property matched on. */\n\tproperty: Scalars[\"String\"];\n};\n\n/** Represents a single highlight in a search result match. */\nexport type TextMatchHighlight = {\n\t__typename?: \"TextMatchHighlight\";\n\t/** The indice in the fragment where the matched text begins. */\n\tbeginIndice: Scalars[\"Int\"];\n\t/** The indice in the fragment where the matched text ends. */\n\tendIndice: Scalars[\"Int\"];\n\t/** The text matched. */\n\ttext: Scalars[\"String\"];\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type Topic = Node &\n\tStarrable & {\n\t\t__typename?: \"Topic\";\n\t\tid: Scalars[\"ID\"];\n\t\t/** The topic's name. */\n\t\tname: Scalars[\"String\"];\n\t\t/**\n\t\t * A list of related topics, including aliases of this topic, sorted with the most relevant\n\t\t * first. Returns up to 10 Topics.\n\t\t */\n\t\trelatedTopics: Array<Topic>;\n\t\t/** A list of users who have starred this starrable. */\n\t\tstargazers: StargazerConnection;\n\t\t/** Returns a boolean indicating whether the viewing user has starred this starrable. */\n\t\tviewerHasStarred: Scalars[\"Boolean\"];\n\t};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicRelatedTopicsArgs = {\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A topic aggregates entities that are related to a subject. */\nexport type TopicStargazersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<StarOrder>;\n};\n\n/** Metadata for an audit entry with a topic. */\nexport type TopicAuditEntryData = {\n\t/** The name of the topic added to the repository */\n\ttopic?: Maybe<Topic>;\n\t/** The name of the topic added to the repository */\n\ttopicName?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Reason that the suggested topic is declined. */\nexport enum TopicSuggestionDeclineReason {\n\t/** The suggested topic is not relevant to the repository. */\n\tNotRelevant = \"NOT_RELEVANT\",\n\t/** The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1). */\n\tTooSpecific = \"TOO_SPECIFIC\",\n\t/** The viewer does not like the suggested topic. */\n\tPersonalPreference = \"PERSONAL_PREFERENCE\",\n\t/** The suggested topic is too general for the repository. */\n\tTooGeneral = \"TOO_GENERAL\",\n}\n\n/** Autogenerated input type of TransferIssue */\nexport type TransferIssueInput = {\n\t/** The Node ID of the issue to be transferred */\n\tissueId: Scalars[\"ID\"];\n\t/** The Node ID of the repository the issue should be transferred to */\n\trepositoryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of TransferIssue */\nexport type TransferIssuePayload = {\n\t__typename?: \"TransferIssuePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The issue that was transferred */\n\tissue?: Maybe<Issue>;\n};\n\n/** Represents a 'transferred' event on a given issue or pull request. */\nexport type TransferredEvent = Node & {\n\t__typename?: \"TransferredEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** The repository this came from */\n\tfromRepository?: Maybe<Repository>;\n\tid: Scalars[\"ID\"];\n\t/** Identifies the issue associated with the event. */\n\tissue: Issue;\n};\n\n/** Represents a Git tree. */\nexport type Tree = Node &\n\tGitObject & {\n\t\t__typename?: \"Tree\";\n\t\t/** An abbreviated version of the Git object ID */\n\t\tabbreviatedOid: Scalars[\"String\"];\n\t\t/** The HTTP path for this Git object */\n\t\tcommitResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL for this Git object */\n\t\tcommitUrl: Scalars[\"URI\"];\n\t\t/** A list of tree entries. */\n\t\tentries?: Maybe<Array<TreeEntry>>;\n\t\tid: Scalars[\"ID\"];\n\t\t/** The Git object ID */\n\t\toid: Scalars[\"GitObjectID\"];\n\t\t/** The Repository the Git object belongs to */\n\t\trepository: Repository;\n\t};\n\n/** Represents a Git tree entry. */\nexport type TreeEntry = {\n\t__typename?: \"TreeEntry\";\n\t/** Entry file mode. */\n\tmode: Scalars[\"Int\"];\n\t/** Entry file name. */\n\tname: Scalars[\"String\"];\n\t/** Entry file object. */\n\tobject?: Maybe<GitObject>;\n\t/** Entry file Git object ID. */\n\toid: Scalars[\"GitObjectID\"];\n\t/** The Repository the tree entry belongs to */\n\trepository: Repository;\n\t/** If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule */\n\tsubmodule?: Maybe<Submodule>;\n\t/** Entry file type. */\n\ttype: Scalars[\"String\"];\n};\n\n/** Autogenerated input type of UnarchiveRepository */\nexport type UnarchiveRepositoryInput = {\n\t/** The ID of the repository to unarchive. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnarchiveRepository */\nexport type UnarchiveRepositoryPayload = {\n\t__typename?: \"UnarchiveRepositoryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The repository that was unarchived. */\n\trepository?: Maybe<Repository>;\n};\n\n/** Represents an 'unassigned' event on any assignable object. */\nexport type UnassignedEvent = Node & {\n\t__typename?: \"UnassignedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the assignable associated with the event. */\n\tassignable: Assignable;\n\t/** Identifies the user or mannequin that was unassigned. */\n\tassignee?: Maybe<Assignee>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/**\n\t * Identifies the subject (user) who was unassigned.\n\t * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.\n\t */\n\tuser?: Maybe<User>;\n};\n\n/** Autogenerated input type of UnfollowUser */\nexport type UnfollowUserInput = {\n\t/** ID of the user to unfollow. */\n\tuserId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnfollowUser */\nexport type UnfollowUserPayload = {\n\t__typename?: \"UnfollowUserPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The user that was unfollowed. */\n\tuser?: Maybe<User>;\n};\n\n/** Represents a type that can be retrieved by a URL. */\nexport type UniformResourceLocatable = {\n\t/** The HTML path to this resource. */\n\tresourcePath: Scalars[\"URI\"];\n\t/** The URL to this resource. */\n\turl: Scalars[\"URI\"];\n};\n\n/** Represents an unknown signature on a Commit or Tag. */\nexport type UnknownSignature = GitSignature & {\n\t__typename?: \"UnknownSignature\";\n\t/** Email used to sign this object. */\n\temail: Scalars[\"String\"];\n\t/** True if the signature is valid and verified by GitHub. */\n\tisValid: Scalars[\"Boolean\"];\n\t/** Payload for GPG signing object. Raw ODB object without the signature header. */\n\tpayload: Scalars[\"String\"];\n\t/** ASCII-armored signature header from object. */\n\tsignature: Scalars[\"String\"];\n\t/** GitHub user corresponding to the email signing this commit. */\n\tsigner?: Maybe<User>;\n\t/** The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid. */\n\tstate: GitSignatureState;\n\t/** True if the signature was made with GitHub's signing key. */\n\twasSignedByGitHub: Scalars[\"Boolean\"];\n};\n\n/** Represents an 'unlabeled' event on a given issue or pull request. */\nexport type UnlabeledEvent = Node & {\n\t__typename?: \"UnlabeledEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the label associated with the 'unlabeled' event. */\n\tlabel: Label;\n\t/** Identifies the `Labelable` associated with the event. */\n\tlabelable: Labelable;\n};\n\n/** Autogenerated input type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectInput = {\n\t/** The ID of the Project linked to the Repository. */\n\tprojectId: Scalars[\"ID\"];\n\t/** The ID of the Repository linked to the Project. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnlinkRepositoryFromProject */\nexport type UnlinkRepositoryFromProjectPayload = {\n\t__typename?: \"UnlinkRepositoryFromProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The linked Project. */\n\tproject?: Maybe<Project>;\n\t/** The linked Repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UnlockLockable */\nexport type UnlockLockableInput = {\n\t/** ID of the issue or pull request to be unlocked. */\n\tlockableId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnlockLockable */\nexport type UnlockLockablePayload = {\n\t__typename?: \"UnlockLockablePayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The item that was unlocked. */\n\tunlockedRecord?: Maybe<Lockable>;\n};\n\n/** Represents an 'unlocked' event on a given issue or pull request. */\nexport type UnlockedEvent = Node & {\n\t__typename?: \"UnlockedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Object that was unlocked. */\n\tlockable: Lockable;\n};\n\n/** Autogenerated input type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicateInput = {\n\t/** ID of the issue or pull request currently marked as a duplicate. */\n\tduplicateId: Scalars[\"ID\"];\n\t/** ID of the issue or pull request currently considered canonical/authoritative/original. */\n\tcanonicalId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnmarkIssueAsDuplicate */\nexport type UnmarkIssueAsDuplicatePayload = {\n\t__typename?: \"UnmarkIssueAsDuplicatePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The issue or pull request that was marked as a duplicate. */\n\tduplicate?: Maybe<IssueOrPullRequest>;\n};\n\n/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */\nexport type UnmarkedAsDuplicateEvent = Node & {\n\t__typename?: \"UnmarkedAsDuplicateEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n};\n\n/** Autogenerated input type of UnminimizeComment */\nexport type UnminimizeCommentInput = {\n\t/** The Node ID of the subject to modify. */\n\tsubjectId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnminimizeComment */\nexport type UnminimizeCommentPayload = {\n\t__typename?: \"UnminimizeCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The comment that was unminimized. */\n\tunminimizedComment?: Maybe<Minimizable>;\n};\n\n/** Represents an 'unpinned' event on a given issue or pull request. */\nexport type UnpinnedEvent = Node & {\n\t__typename?: \"UnpinnedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Identifies the issue associated with the event. */\n\tissue: Issue;\n};\n\n/** Autogenerated input type of UnresolveReviewThread */\nexport type UnresolveReviewThreadInput = {\n\t/** The ID of the thread to unresolve */\n\tthreadId: Scalars[\"ID\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UnresolveReviewThread */\nexport type UnresolveReviewThreadPayload = {\n\t__typename?: \"UnresolveReviewThreadPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The thread to resolve. */\n\tthread?: Maybe<PullRequestReviewThread>;\n};\n\n/** Represents an 'unsubscribed' event on a given `Subscribable`. */\nexport type UnsubscribedEvent = Node & {\n\t__typename?: \"UnsubscribedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** Object referenced by event. */\n\tsubscribable: Subscribable;\n};\n\n/** Entities that can be updated. */\nexport type Updatable = {\n\t/** Check if the current viewer can update this object. */\n\tviewerCanUpdate: Scalars[\"Boolean\"];\n};\n\n/** Comments that can be updated. */\nexport type UpdatableComment = {\n\t/** Reasons why the current viewer can not update this comment. */\n\tviewerCannotUpdateReasons: Array<CommentCannotUpdateReason>;\n};\n\n/** Autogenerated input type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRuleInput = {\n\t/** The global relay id of the branch protection rule to be updated. */\n\tbranchProtectionRuleId: Scalars[\"ID\"];\n\t/** The glob-like pattern used to determine matching branches. */\n\tpattern?: Maybe<Scalars[\"String\"]>;\n\t/** Are approving reviews required to update matching branches. */\n\trequiresApprovingReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Number of approving reviews required to update matching branches. */\n\trequiredApprovingReviewCount?: Maybe<Scalars[\"Int\"]>;\n\t/** Are commits required to be signed. */\n\trequiresCommitSignatures?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Can admins overwrite branch protection. */\n\tisAdminEnforced?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are status checks required to update matching branches. */\n\trequiresStatusChecks?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are branches required to be up to date before merging. */\n\trequiresStrictStatusChecks?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Are reviews from code owners required to update matching branches. */\n\trequiresCodeOwnerReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Will new commits pushed to matching branches dismiss pull request review approvals. */\n\tdismissesStaleReviews?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Is dismissal of pull request reviews restricted. */\n\trestrictsReviewDismissals?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches. */\n\treviewDismissalActorIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** Is pushing to matching branches restricted. */\n\trestrictsPushes?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A list of User, Team or App IDs allowed to push to matching branches. */\n\tpushActorIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** List of required status check contexts that must pass for commits to be accepted to matching branches. */\n\trequiredStatusCheckContexts?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateBranchProtectionRule */\nexport type UpdateBranchProtectionRulePayload = {\n\t__typename?: \"UpdateBranchProtectionRulePayload\";\n\t/** The newly created BranchProtectionRule. */\n\tbranchProtectionRule?: Maybe<BranchProtectionRule>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseActionExecutionCapabilitySetting */\nexport type UpdateEnterpriseActionExecutionCapabilitySettingInput = {\n\t/** The ID of the enterprise on which to set the members can create repositories setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the action execution capability setting on the enterprise. */\n\tcapability: ActionExecutionCapabilitySetting;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseActionExecutionCapabilitySetting */\nexport type UpdateEnterpriseActionExecutionCapabilitySettingPayload = {\n\t__typename?: \"UpdateEnterpriseActionExecutionCapabilitySettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated action execution capability setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the action execution capability setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRoleInput = {\n\t/** The ID of the Enterprise which the admin belongs to. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The login of a administrator whose role is being changed. */\n\tlogin: Scalars[\"String\"];\n\t/** The new role for the Enterprise administrator. */\n\trole: EnterpriseAdministratorRole;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAdministratorRole */\nexport type UpdateEnterpriseAdministratorRolePayload = {\n\t__typename?: \"UpdateEnterpriseAdministratorRolePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** A message confirming the result of changing the administrator's role. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput = {\n\t/** The ID of the enterprise on which to set the allow private repository forking setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the allow private repository forking setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload = {\n\t__typename?: \"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated allow private repository forking setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the allow private repository forking setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingInput = {\n\t/** The ID of the enterprise on which to set the default repository permission setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the default repository permission setting on the enterprise. */\n\tsettingValue: EnterpriseDefaultRepositoryPermissionSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting */\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingPayload = {\n\t__typename?: \"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated default repository permission setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the default repository permission setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput = {\n\t/** The ID of the enterprise on which to set the members can change repository visibility setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can change repository visibility setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can change repository visibility setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can change repository visibility setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingInput = {\n\t/** The ID of the enterprise on which to set the members can create repositories setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** Value for the members can create repositories setting on the enterprise. This or the granular public/private/internal allowed fields (but not both) must be provided. */\n\tsettingValue?: Maybe<EnterpriseMembersCanCreateRepositoriesSettingValue>;\n\t/** When false, allow member organizations to set their own repository creation member privileges. */\n\tmembersCanCreateRepositoriesPolicyEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Allow members to create public repositories. Defaults to current value. */\n\tmembersCanCreatePublicRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Allow members to create private repositories. Defaults to current value. */\n\tmembersCanCreatePrivateRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Allow members to create internal repositories. Defaults to current value. */\n\tmembersCanCreateInternalRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can create repositories setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can create repositories setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingInput = {\n\t/** The ID of the enterprise on which to set the members can delete issues setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can delete issues setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting */\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can delete issues setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can delete issues setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput = {\n\t/** The ID of the enterprise on which to set the members can delete repositories setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can delete repositories setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can delete repositories setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can delete repositories setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput = {\n\t/** The ID of the enterprise on which to set the members can invite collaborators setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can invite collaborators setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can invite collaborators setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can invite collaborators setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingInput = {\n\t/** The ID of the enterprise on which to set the members can make purchases setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can make purchases setting on the enterprise. */\n\tsettingValue: EnterpriseMembersCanMakePurchasesSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting */\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanMakePurchasesSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can make purchases setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can make purchases setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput = {\n\t/** The ID of the enterprise on which to set the members can update protected branches setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can update protected branches setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can update protected branches setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can update protected branches setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput = {\n\t/** The ID of the enterprise on which to set the members can view dependency insights setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the members can view dependency insights setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload = {\n\t__typename?: \"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated members can view dependency insights setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the members can view dependency insights setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingInput = {\n\t/** The ID of the enterprise on which to set the organization projects setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the organization projects setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting */\nexport type UpdateEnterpriseOrganizationProjectsSettingPayload = {\n\t__typename?: \"UpdateEnterpriseOrganizationProjectsSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated organization projects setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the organization projects setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfileInput = {\n\t/** The Enterprise ID to update. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The name of the enterprise. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** The description of the enterprise. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** The URL of the enterprise's website. */\n\twebsiteUrl?: Maybe<Scalars[\"String\"]>;\n\t/** The location of the enterprise. */\n\tlocation?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseProfile */\nexport type UpdateEnterpriseProfilePayload = {\n\t__typename?: \"UpdateEnterpriseProfilePayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated enterprise. */\n\tenterprise?: Maybe<Enterprise>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingInput = {\n\t/** The ID of the enterprise on which to set the repository projects setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the repository projects setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting */\nexport type UpdateEnterpriseRepositoryProjectsSettingPayload = {\n\t__typename?: \"UpdateEnterpriseRepositoryProjectsSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated repository projects setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the repository projects setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingInput = {\n\t/** The ID of the enterprise on which to set the team discussions setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the team discussions setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledDisabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting */\nexport type UpdateEnterpriseTeamDiscussionsSettingPayload = {\n\t__typename?: \"UpdateEnterpriseTeamDiscussionsSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated team discussions setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the team discussions setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput = {\n\t/** The ID of the enterprise on which to set the two factor authentication required setting. */\n\tenterpriseId: Scalars[\"ID\"];\n\t/** The value for the two factor authentication required setting on the enterprise. */\n\tsettingValue: EnterpriseEnabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload = {\n\t__typename?: \"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The enterprise with the updated two factor authentication required setting. */\n\tenterprise?: Maybe<Enterprise>;\n\t/** A message confirming the result of updating the two factor authentication required setting. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingInput = {\n\t/** The ID of the owner on which to set the IP allow list enabled setting. */\n\townerId: Scalars[\"ID\"];\n\t/** The value for the IP allow list enabled setting. */\n\tsettingValue: IpAllowListEnabledSettingValue;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEnabledSetting */\nexport type UpdateIpAllowListEnabledSettingPayload = {\n\t__typename?: \"UpdateIpAllowListEnabledSettingPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The IP allow list owner on which the setting was updated. */\n\towner?: Maybe<IpAllowListOwner>;\n};\n\n/** Autogenerated input type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryInput = {\n\t/** The ID of the IP allow list entry to update. */\n\tipAllowListEntryId: Scalars[\"ID\"];\n\t/** An IP address or range of addresses in CIDR notation. */\n\tallowListValue: Scalars[\"String\"];\n\t/** An optional name for the IP allow list entry. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** Whether the IP allow list entry is active when an IP allow list is enabled. */\n\tisActive: Scalars[\"Boolean\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIpAllowListEntry */\nexport type UpdateIpAllowListEntryPayload = {\n\t__typename?: \"UpdateIpAllowListEntryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The IP allow list entry that was updated. */\n\tipAllowListEntry?: Maybe<IpAllowListEntry>;\n};\n\n/** Autogenerated input type of UpdateIssueComment */\nexport type UpdateIssueCommentInput = {\n\t/** The ID of the IssueComment to modify. */\n\tid: Scalars[\"ID\"];\n\t/** The updated text of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIssueComment */\nexport type UpdateIssueCommentPayload = {\n\t__typename?: \"UpdateIssueCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated comment. */\n\tissueComment?: Maybe<IssueComment>;\n};\n\n/** Autogenerated input type of UpdateIssue */\nexport type UpdateIssueInput = {\n\t/** The ID of the Issue to modify. */\n\tid: Scalars[\"ID\"];\n\t/** The title for the issue. */\n\ttitle?: Maybe<Scalars[\"String\"]>;\n\t/** The body for the issue description. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** An array of Node IDs of users for this issue. */\n\tassigneeIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** The Node ID of the milestone for this issue. */\n\tmilestoneId?: Maybe<Scalars[\"ID\"]>;\n\t/** An array of Node IDs of labels for this issue. */\n\tlabelIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** The desired issue state. */\n\tstate?: Maybe<IssueState>;\n\t/** An array of Node IDs for projects associated with this issue. */\n\tprojectIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateIssue */\nexport type UpdateIssuePayload = {\n\t__typename?: \"UpdateIssuePayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The issue. */\n\tissue?: Maybe<Issue>;\n};\n\n/** Autogenerated input type of UpdateProjectCard */\nexport type UpdateProjectCardInput = {\n\t/** The ProjectCard ID to update. */\n\tprojectCardId: Scalars[\"ID\"];\n\t/** Whether or not the ProjectCard should be archived */\n\tisArchived?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The note of ProjectCard. */\n\tnote?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateProjectCard */\nexport type UpdateProjectCardPayload = {\n\t__typename?: \"UpdateProjectCardPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated ProjectCard. */\n\tprojectCard?: Maybe<ProjectCard>;\n};\n\n/** Autogenerated input type of UpdateProjectColumn */\nexport type UpdateProjectColumnInput = {\n\t/** The ProjectColumn ID to update. */\n\tprojectColumnId: Scalars[\"ID\"];\n\t/** The name of project column. */\n\tname: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateProjectColumn */\nexport type UpdateProjectColumnPayload = {\n\t__typename?: \"UpdateProjectColumnPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated project column. */\n\tprojectColumn?: Maybe<ProjectColumn>;\n};\n\n/** Autogenerated input type of UpdateProject */\nexport type UpdateProjectInput = {\n\t/** The Project ID to update. */\n\tprojectId: Scalars[\"ID\"];\n\t/** The name of project. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** The description of project. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** Whether the project is open or closed. */\n\tstate?: Maybe<ProjectState>;\n\t/** Whether the project is public or not. */\n\tpublic?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateProject */\nexport type UpdateProjectPayload = {\n\t__typename?: \"UpdateProjectPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated project. */\n\tproject?: Maybe<Project>;\n};\n\n/** Autogenerated input type of UpdatePullRequest */\nexport type UpdatePullRequestInput = {\n\t/** The Node ID of the pull request. */\n\tpullRequestId: Scalars[\"ID\"];\n\t/**\n\t * The name of the branch you want your changes pulled into. This should be an existing branch\n\t * on the current repository.\n\t */\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\t/** The title of the pull request. */\n\ttitle?: Maybe<Scalars[\"String\"]>;\n\t/** The contents of the pull request. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The target state of the pull request. */\n\tstate?: Maybe<PullRequestUpdateState>;\n\t/** Indicates whether maintainers can modify the pull request. */\n\tmaintainerCanModify?: Maybe<Scalars[\"Boolean\"]>;\n\t/** An array of Node IDs of users for this pull request. */\n\tassigneeIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** The Node ID of the milestone for this pull request. */\n\tmilestoneId?: Maybe<Scalars[\"ID\"]>;\n\t/** An array of Node IDs of labels for this pull request. */\n\tlabelIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** An array of Node IDs for projects associated with this pull request. */\n\tprojectIds?: Maybe<Array<Scalars[\"ID\"]>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdatePullRequest */\nexport type UpdatePullRequestPayload = {\n\t__typename?: \"UpdatePullRequestPayload\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated pull request. */\n\tpullRequest?: Maybe<PullRequest>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentInput = {\n\t/** The Node ID of the comment to modify. */\n\tpullRequestReviewCommentId: Scalars[\"ID\"];\n\t/** The text of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdatePullRequestReviewComment */\nexport type UpdatePullRequestReviewCommentPayload = {\n\t__typename?: \"UpdatePullRequestReviewCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated comment. */\n\tpullRequestReviewComment?: Maybe<PullRequestReviewComment>;\n};\n\n/** Autogenerated input type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewInput = {\n\t/** The Node ID of the pull request review to modify. */\n\tpullRequestReviewId: Scalars[\"ID\"];\n\t/** The contents of the pull request review body. */\n\tbody: Scalars[\"String\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdatePullRequestReview */\nexport type UpdatePullRequestReviewPayload = {\n\t__typename?: \"UpdatePullRequestReviewPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated pull request review. */\n\tpullRequestReview?: Maybe<PullRequestReview>;\n};\n\n/** Autogenerated input type of UpdateRef */\nexport type UpdateRefInput = {\n\t/** The Node ID of the Ref to be updated. */\n\trefId: Scalars[\"ID\"];\n\t/** The GitObjectID that the Ref shall be updated to target. */\n\toid: Scalars[\"GitObjectID\"];\n\t/** Permit updates of branch Refs that are not fast-forwards? */\n\tforce?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateRef */\nexport type UpdateRefPayload = {\n\t__typename?: \"UpdateRefPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated Ref. */\n\tref?: Maybe<Ref>;\n};\n\n/** Autogenerated input type of UpdateRepository */\nexport type UpdateRepositoryInput = {\n\t/** The ID of the repository to update. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** The new name of the repository. */\n\tname?: Maybe<Scalars[\"String\"]>;\n\t/** A new description for the repository. Pass an empty string to erase the existing description. */\n\tdescription?: Maybe<Scalars[\"String\"]>;\n\t/** Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure. */\n\ttemplate?: Maybe<Scalars[\"Boolean\"]>;\n\t/** The URL for a web page about this repository. Pass an empty string to erase the existing URL. */\n\thomepageUrl?: Maybe<Scalars[\"URI\"]>;\n\t/** Indicates if the repository should have the wiki feature enabled. */\n\thasWikiEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Indicates if the repository should have the issues feature enabled. */\n\thasIssuesEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** Indicates if the repository should have the project boards feature enabled. */\n\thasProjectsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateRepository */\nexport type UpdateRepositoryPayload = {\n\t__typename?: \"UpdateRepositoryPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** Autogenerated input type of UpdateSubscription */\nexport type UpdateSubscriptionInput = {\n\t/** The Node ID of the subscribable object to modify. */\n\tsubscribableId: Scalars[\"ID\"];\n\t/** The new state of the subscription. */\n\tstate: SubscriptionState;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateSubscription */\nexport type UpdateSubscriptionPayload = {\n\t__typename?: \"UpdateSubscriptionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The input subscribable entity. */\n\tsubscribable?: Maybe<Subscribable>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentInput = {\n\t/** The ID of the comment to modify. */\n\tid: Scalars[\"ID\"];\n\t/** The updated text of the comment. */\n\tbody: Scalars[\"String\"];\n\t/** The current version of the body content. */\n\tbodyVersion?: Maybe<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateTeamDiscussionComment */\nexport type UpdateTeamDiscussionCommentPayload = {\n\t__typename?: \"UpdateTeamDiscussionCommentPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated comment. */\n\tteamDiscussionComment?: Maybe<TeamDiscussionComment>;\n};\n\n/** Autogenerated input type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionInput = {\n\t/** The Node ID of the discussion to modify. */\n\tid: Scalars[\"ID\"];\n\t/** The updated title of the discussion. */\n\ttitle?: Maybe<Scalars[\"String\"]>;\n\t/** The updated text of the discussion. */\n\tbody?: Maybe<Scalars[\"String\"]>;\n\t/** The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server. */\n\tbodyVersion?: Maybe<Scalars[\"String\"]>;\n\t/** If provided, sets the pinned state of the updated discussion. */\n\tpinned?: Maybe<Scalars[\"Boolean\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateTeamDiscussion */\nexport type UpdateTeamDiscussionPayload = {\n\t__typename?: \"UpdateTeamDiscussionPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** The updated discussion. */\n\tteamDiscussion?: Maybe<TeamDiscussion>;\n};\n\n/** Autogenerated input type of UpdateTopics */\nexport type UpdateTopicsInput = {\n\t/** The Node ID of the repository. */\n\trepositoryId: Scalars[\"ID\"];\n\t/** An array of topic names. */\n\ttopicNames: Array<Scalars[\"String\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Autogenerated return type of UpdateTopics */\nexport type UpdateTopicsPayload = {\n\t__typename?: \"UpdateTopicsPayload\";\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: Maybe<Scalars[\"String\"]>;\n\t/** Names of the provided topics that are not valid. */\n\tinvalidTopicNames?: Maybe<Array<Scalars[\"String\"]>>;\n\t/** The updated repository. */\n\trepository?: Maybe<Repository>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type User = Node &\n\tActor &\n\tPackageOwner &\n\tProjectOwner &\n\tRepositoryOwner &\n\tUniformResourceLocatable &\n\tProfileOwner &\n\tSponsorable & {\n\t\t__typename?: \"User\";\n\t\t/** Determine if this repository owner has any items that can be pinned to their profile. */\n\t\tanyPinnableItems: Scalars[\"Boolean\"];\n\t\t/** A URL pointing to the user's public avatar. */\n\t\tavatarUrl: Scalars[\"URI\"];\n\t\t/** The user's public profile bio. */\n\t\tbio?: Maybe<Scalars[\"String\"]>;\n\t\t/** The user's public profile bio as HTML. */\n\t\tbioHTML: Scalars[\"HTML\"];\n\t\t/** A list of commit comments made by this user. */\n\t\tcommitComments: CommitCommentConnection;\n\t\t/** The user's public profile company. */\n\t\tcompany?: Maybe<Scalars[\"String\"]>;\n\t\t/** The user's public profile company as HTML. */\n\t\tcompanyHTML: Scalars[\"HTML\"];\n\t\t/** The collection of contributions this user has made to different repositories. */\n\t\tcontributionsCollection: ContributionsCollection;\n\t\t/** Identifies the date and time when the object was created. */\n\t\tcreatedAt: Scalars[\"DateTime\"];\n\t\t/** Identifies the primary key from the database. */\n\t\tdatabaseId?: Maybe<Scalars[\"Int\"]>;\n\t\t/** The user's publicly visible profile email. */\n\t\temail: Scalars[\"String\"];\n\t\t/** A list of users the given user is followed by. */\n\t\tfollowers: FollowerConnection;\n\t\t/** A list of users the given user is following. */\n\t\tfollowing: FollowingConnection;\n\t\t/** Find gist by repo name. */\n\t\tgist?: Maybe<Gist>;\n\t\t/** A list of gist comments made by this user. */\n\t\tgistComments: GistCommentConnection;\n\t\t/** A list of the Gists the user has created. */\n\t\tgists: GistConnection;\n\t\t/** The hovercard information for this user in a given context */\n\t\thovercard: Hovercard;\n\t\tid: Scalars[\"ID\"];\n\t\t/** Whether or not this user is a participant in the GitHub Security Bug Bounty. */\n\t\tisBountyHunter: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is a participant in the GitHub Campus Experts Program. */\n\t\tisCampusExpert: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is a GitHub Developer Program member. */\n\t\tisDeveloperProgramMember: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is a GitHub employee. */\n\t\tisEmployee: Scalars[\"Boolean\"];\n\t\t/** Whether or not the user has marked themselves as for hire. */\n\t\tisHireable: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is a site administrator. */\n\t\tisSiteAdmin: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is the viewing user. */\n\t\tisViewer: Scalars[\"Boolean\"];\n\t\t/** A list of issue comments made by this user. */\n\t\tissueComments: IssueCommentConnection;\n\t\t/** A list of issues associated with this user. */\n\t\tissues: IssueConnection;\n\t\t/** Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity. */\n\t\titemShowcase: ProfileItemShowcase;\n\t\t/** The user's public profile location. */\n\t\tlocation?: Maybe<Scalars[\"String\"]>;\n\t\t/** The username used to login. */\n\t\tlogin: Scalars[\"String\"];\n\t\t/** The user's public profile name. */\n\t\tname?: Maybe<Scalars[\"String\"]>;\n\t\t/** Find an organization by its login that the user belongs to. */\n\t\torganization?: Maybe<Organization>;\n\t\t/** Verified email addresses that match verified domains for a specified organization the user is a member of. */\n\t\torganizationVerifiedDomainEmails: Array<Scalars[\"String\"]>;\n\t\t/** A list of organizations the user belongs to. */\n\t\torganizations: OrganizationConnection;\n\t\t/** A list of packages under the owner. */\n\t\tpackages: PackageConnection;\n\t\t/** A list of repositories and gists this profile owner can pin to their profile. */\n\t\tpinnableItems: PinnableItemConnection;\n\t\t/** A list of repositories and gists this profile owner has pinned to their profile */\n\t\tpinnedItems: PinnableItemConnection;\n\t\t/** Returns how many more items this profile owner can pin to their profile. */\n\t\tpinnedItemsRemaining: Scalars[\"Int\"];\n\t\t/** Find project by number. */\n\t\tproject?: Maybe<Project>;\n\t\t/** A list of projects under the owner. */\n\t\tprojects: ProjectConnection;\n\t\t/** The HTTP path listing user's projects */\n\t\tprojectsResourcePath: Scalars[\"URI\"];\n\t\t/** The HTTP URL listing user's projects */\n\t\tprojectsUrl: Scalars[\"URI\"];\n\t\t/** A list of public keys associated with this user. */\n\t\tpublicKeys: PublicKeyConnection;\n\t\t/** A list of pull requests associated with this user. */\n\t\tpullRequests: PullRequestConnection;\n\t\t/** A list of repositories that the user owns. */\n\t\trepositories: RepositoryConnection;\n\t\t/** A list of repositories that the user recently contributed to. */\n\t\trepositoriesContributedTo: RepositoryConnection;\n\t\t/** Find Repository. */\n\t\trepository?: Maybe<Repository>;\n\t\t/** The HTTP path for this user */\n\t\tresourcePath: Scalars[\"URI\"];\n\t\t/** Replies this user has saved */\n\t\tsavedReplies?: Maybe<SavedReplyConnection>;\n\t\t/** The GitHub Sponsors listing for this user. */\n\t\tsponsorsListing?: Maybe<SponsorsListing>;\n\t\t/** This object's sponsorships as the maintainer. */\n\t\tsponsorshipsAsMaintainer: SponsorshipConnection;\n\t\t/** This object's sponsorships as the sponsor. */\n\t\tsponsorshipsAsSponsor: SponsorshipConnection;\n\t\t/** Repositories the user has starred. */\n\t\tstarredRepositories: StarredRepositoryConnection;\n\t\t/** The user's description of what they're currently doing. */\n\t\tstatus?: Maybe<UserStatus>;\n\t\t/** Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created */\n\t\ttopRepositories: RepositoryConnection;\n\t\t/** The user's Twitter username. */\n\t\ttwitterUsername?: Maybe<Scalars[\"String\"]>;\n\t\t/** Identifies the date and time when the object was last updated. */\n\t\tupdatedAt: Scalars[\"DateTime\"];\n\t\t/** The HTTP URL for this user */\n\t\turl: Scalars[\"URI\"];\n\t\t/** Can the viewer pin repositories and gists to the profile? */\n\t\tviewerCanChangePinnedItems: Scalars[\"Boolean\"];\n\t\t/** Can the current viewer create new projects on this owner. */\n\t\tviewerCanCreateProjects: Scalars[\"Boolean\"];\n\t\t/** Whether or not the viewer is able to follow the user. */\n\t\tviewerCanFollow: Scalars[\"Boolean\"];\n\t\t/** Whether or not this user is followed by the viewer. */\n\t\tviewerIsFollowing: Scalars[\"Boolean\"];\n\t\t/** A list of repositories the given user is watching. */\n\t\twatching: RepositoryConnection;\n\t\t/** A URL pointing to the user's public website/blog. */\n\t\twebsiteUrl?: Maybe<Scalars[\"URI\"]>;\n\t};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAnyPinnableItemsArgs = {\n\ttype?: Maybe<PinnableItemType>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserAvatarUrlArgs = {\n\tsize?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserCommitCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserContributionsCollectionArgs = {\n\torganizationID?: Maybe<Scalars[\"ID\"]>;\n\tfrom?: Maybe<Scalars[\"DateTime\"]>;\n\tto?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowersArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserFollowingArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserGistsArgs = {\n\tprivacy?: Maybe<GistPrivacy>;\n\torderBy?: Maybe<GistOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserHovercardArgs = {\n\tprimarySubjectId?: Maybe<Scalars[\"ID\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssueCommentsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserIssuesArgs = {\n\torderBy?: Maybe<IssueOrder>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\tstates?: Maybe<Array<IssueState>>;\n\tfilterBy?: Maybe<IssueFilters>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationArgs = {\n\tlogin: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationVerifiedDomainEmailsArgs = {\n\tlogin: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserOrganizationsArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPackagesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tnames?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\n\trepositoryId?: Maybe<Scalars[\"ID\"]>;\n\tpackageType?: Maybe<PackageType>;\n\torderBy?: Maybe<PackageOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnableItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPinnedItemsArgs = {\n\ttypes?: Maybe<Array<PinnableItemType>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectArgs = {\n\tnumber: Scalars[\"Int\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserProjectsArgs = {\n\torderBy?: Maybe<ProjectOrder>;\n\tsearch?: Maybe<Scalars[\"String\"]>;\n\tstates?: Maybe<Array<ProjectState>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPublicKeysArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserPullRequestsArgs = {\n\tstates?: Maybe<Array<PullRequestState>>;\n\tlabels?: Maybe<Array<Scalars[\"String\"]>>;\n\theadRefName?: Maybe<Scalars[\"String\"]>;\n\tbaseRefName?: Maybe<Scalars[\"String\"]>;\n\torderBy?: Maybe<IssueOrder>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\taffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\townerAffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tisFork?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoriesContributedToArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tincludeUserRepositories?: Maybe<Scalars[\"Boolean\"]>;\n\tcontributionTypes?: Maybe<Array<Maybe<RepositoryContributionType>>>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserRepositoryArgs = {\n\tname: Scalars[\"String\"];\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSavedRepliesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<SavedReplyOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsMaintainerArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\tincludePrivate?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserSponsorshipsAsSponsorArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy?: Maybe<SponsorshipOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserStarredRepositoriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\townedByViewer?: Maybe<Scalars[\"Boolean\"]>;\n\torderBy?: Maybe<StarOrder>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserTopRepositoriesArgs = {\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n\torderBy: RepositoryOrder;\n\tsince?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** A user is an individual's account on GitHub that owns repositories and can make new content. */\nexport type UserWatchingArgs = {\n\tprivacy?: Maybe<RepositoryPrivacy>;\n\torderBy?: Maybe<RepositoryOrder>;\n\taffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\townerAffiliations?: Maybe<Array<Maybe<RepositoryAffiliation>>>;\n\tisLocked?: Maybe<Scalars[\"Boolean\"]>;\n\tafter?: Maybe<Scalars[\"String\"]>;\n\tbefore?: Maybe<Scalars[\"String\"]>;\n\tfirst?: Maybe<Scalars[\"Int\"]>;\n\tlast?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The possible durations that a user can be blocked for. */\nexport enum UserBlockDuration {\n\t/** The user was blocked for 1 day */\n\tOneDay = \"ONE_DAY\",\n\t/** The user was blocked for 3 days */\n\tThreeDays = \"THREE_DAYS\",\n\t/** The user was blocked for 7 days */\n\tOneWeek = \"ONE_WEEK\",\n\t/** The user was blocked for 30 days */\n\tOneMonth = \"ONE_MONTH\",\n\t/** The user was blocked permanently */\n\tPermanent = \"PERMANENT\",\n}\n\n/** Represents a 'user_blocked' event on a given user. */\nexport type UserBlockedEvent = Node & {\n\t__typename?: \"UserBlockedEvent\";\n\t/** Identifies the actor who performed the event. */\n\tactor?: Maybe<Actor>;\n\t/** Number of days that the user was blocked for. */\n\tblockDuration: UserBlockDuration;\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\tid: Scalars[\"ID\"];\n\t/** The user who was blocked. */\n\tsubject?: Maybe<User>;\n};\n\n/** The connection type for User. */\nexport type UserConnection = {\n\t__typename?: \"UserConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<UserEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<User>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edit on user content */\nexport type UserContentEdit = Node & {\n\t__typename?: \"UserContentEdit\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** Identifies the date and time when the object was deleted. */\n\tdeletedAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** The actor who deleted this content */\n\tdeletedBy?: Maybe<Actor>;\n\t/** A summary of the changes for this edit */\n\tdiff?: Maybe<Scalars[\"String\"]>;\n\t/** When this content was edited */\n\teditedAt: Scalars[\"DateTime\"];\n\t/** The actor who edited this content */\n\teditor?: Maybe<Actor>;\n\tid: Scalars[\"ID\"];\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n};\n\n/** A list of edits to content. */\nexport type UserContentEditConnection = {\n\t__typename?: \"UserContentEditConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<UserContentEditEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<UserContentEdit>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type UserContentEditEdge = {\n\t__typename?: \"UserContentEditEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<UserContentEdit>;\n};\n\n/** Represents a user. */\nexport type UserEdge = {\n\t__typename?: \"UserEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<User>;\n};\n\n/** The user's description of what they're currently doing. */\nexport type UserStatus = Node & {\n\t__typename?: \"UserStatus\";\n\t/** Identifies the date and time when the object was created. */\n\tcreatedAt: Scalars[\"DateTime\"];\n\t/** An emoji summarizing the user's status. */\n\temoji?: Maybe<Scalars[\"String\"]>;\n\t/** The status emoji as HTML. */\n\temojiHTML?: Maybe<Scalars[\"HTML\"]>;\n\t/** If set, the status will not be shown after this date. */\n\texpiresAt?: Maybe<Scalars[\"DateTime\"]>;\n\t/** ID of the object. */\n\tid: Scalars[\"ID\"];\n\t/** Whether this status indicates the user is not fully available on GitHub. */\n\tindicatesLimitedAvailability: Scalars[\"Boolean\"];\n\t/** A brief message describing what the user is doing. */\n\tmessage?: Maybe<Scalars[\"String\"]>;\n\t/** The organization whose members can see this status. If null, this status is publicly visible. */\n\torganization?: Maybe<Organization>;\n\t/** Identifies the date and time when the object was last updated. */\n\tupdatedAt: Scalars[\"DateTime\"];\n\t/** The user who has this status. */\n\tuser: User;\n};\n\n/** The connection type for UserStatus. */\nexport type UserStatusConnection = {\n\t__typename?: \"UserStatusConnection\";\n\t/** A list of edges. */\n\tedges?: Maybe<Array<Maybe<UserStatusEdge>>>;\n\t/** A list of nodes. */\n\tnodes?: Maybe<Array<Maybe<UserStatus>>>;\n\t/** Information to aid in pagination. */\n\tpageInfo: PageInfo;\n\t/** Identifies the total count of items in the connection. */\n\ttotalCount: Scalars[\"Int\"];\n};\n\n/** An edge in a connection. */\nexport type UserStatusEdge = {\n\t__typename?: \"UserStatusEdge\";\n\t/** A cursor for use in pagination. */\n\tcursor: Scalars[\"String\"];\n\t/** The item at the end of the edge. */\n\tnode?: Maybe<UserStatus>;\n};\n\n/** Ordering options for user status connections. */\nexport type UserStatusOrder = {\n\t/** The field to order user statuses by. */\n\tfield: UserStatusOrderField;\n\t/** The ordering direction. */\n\tdirection: OrderDirection;\n};\n\n/** Properties by which user status connections can be ordered. */\nexport enum UserStatusOrderField {\n\t/** Order user statuses by when they were updated. */\n\tUpdatedAt = \"UPDATED_AT\",\n}\n\n/** A hovercard context with a message describing how the viewer is related. */\nexport type ViewerHovercardContext = HovercardContext & {\n\t__typename?: \"ViewerHovercardContext\";\n\t/** A string describing this context */\n\tmessage: Scalars[\"String\"];\n\t/** An octicon to accompany this context */\n\tocticon: Scalars[\"String\"];\n\t/** Identifies the user who is related to this context. */\n\tviewer: User;\n};\n\nexport type ResolverTypeWrapper<T> = Promise<T> | T;\n\nexport type LegacyStitchingResolver<TResult, TParent, TContext, TArgs> = {\n\tfragment: string;\n\tresolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\n\nexport type NewStitchingResolver<TResult, TParent, TContext, TArgs> = {\n\tselectionSet: string;\n\tresolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\nexport type StitchingResolver<TResult, TParent, TContext, TArgs> =\n\t| LegacyStitchingResolver<TResult, TParent, TContext, TArgs>\n\t| NewStitchingResolver<TResult, TParent, TContext, TArgs>;\nexport type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =\n\t| ResolverFn<TResult, TParent, TContext, TArgs>\n\t| StitchingResolver<TResult, TParent, TContext, TArgs>;\n\nexport type ResolverFn<TResult, TParent, TContext, TArgs> = (\n\tparent: TParent,\n\targs: TArgs,\n\tcontext: TContext,\n\tinfo: GraphQLResolveInfo,\n) => Promise<TResult> | TResult;\n\nexport type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (\n\tparent: TParent,\n\targs: TArgs,\n\tcontext: TContext,\n\tinfo: GraphQLResolveInfo,\n) => AsyncIterator<TResult> | Promise<AsyncIterator<TResult>>;\n\nexport type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (\n\tparent: TParent,\n\targs: TArgs,\n\tcontext: TContext,\n\tinfo: GraphQLResolveInfo,\n) => TResult | Promise<TResult>;\n\nexport interface SubscriptionSubscriberObject<TResult, TKey extends string, TParent, TContext, TArgs> {\n\tsubscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;\n\tresolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;\n}\n\nexport interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {\n\tsubscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;\n\tresolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;\n}\n\nexport type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =\n\t| SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>\n\t| SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionResolver<TResult, TKey extends string, TParent = {}, TContext = {}, TArgs = {}> =\n\t| ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)\n\t| SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;\n\nexport type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (\n\tparent: TParent,\n\tcontext: TContext,\n\tinfo: GraphQLResolveInfo,\n) => Maybe<TTypes> | Promise<Maybe<TTypes>>;\n\nexport type IsTypeOfResolverFn<T = {}> = (obj: T, info: GraphQLResolveInfo) => boolean | Promise<boolean>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (\n\tnext: NextResolverFn<TResult>,\n\tparent: TParent,\n\targs: TArgs,\n\tcontext: TContext,\n\tinfo: GraphQLResolveInfo,\n) => TResult | Promise<TResult>;\n\n/** Mapping between all available schema types and the resolvers types */\nexport type ResolversTypes = {\n\tAcceptEnterpriseAdministratorInvitationInput: AcceptEnterpriseAdministratorInvitationInput;\n\tID: ResolverTypeWrapper<Scalars[\"ID\"]>;\n\tString: ResolverTypeWrapper<Scalars[\"String\"]>;\n\tAcceptEnterpriseAdministratorInvitationPayload: ResolverTypeWrapper<AcceptEnterpriseAdministratorInvitationPayload>;\n\tAcceptTopicSuggestionInput: AcceptTopicSuggestionInput;\n\tAcceptTopicSuggestionPayload: ResolverTypeWrapper<AcceptTopicSuggestionPayload>;\n\tActionExecutionCapabilitySetting: ActionExecutionCapabilitySetting;\n\tActor:\n\t\t| ResolversTypes[\"Bot\"]\n\t\t| ResolversTypes[\"EnterpriseUserAccount\"]\n\t\t| ResolversTypes[\"Mannequin\"]\n\t\t| ResolversTypes[\"Organization\"]\n\t\t| ResolversTypes[\"User\"];\n\tInt: ResolverTypeWrapper<Scalars[\"Int\"]>;\n\tActorLocation: ResolverTypeWrapper<ActorLocation>;\n\tAddAssigneesToAssignableInput: AddAssigneesToAssignableInput;\n\tAddAssigneesToAssignablePayload: ResolverTypeWrapper<AddAssigneesToAssignablePayload>;\n\tAddCommentInput: AddCommentInput;\n\tAddCommentPayload: ResolverTypeWrapper<AddCommentPayload>;\n\tAddLabelsToLabelableInput: AddLabelsToLabelableInput;\n\tAddLabelsToLabelablePayload: ResolverTypeWrapper<AddLabelsToLabelablePayload>;\n\tAddProjectCardInput: AddProjectCardInput;\n\tAddProjectCardPayload: ResolverTypeWrapper<AddProjectCardPayload>;\n\tAddProjectColumnInput: AddProjectColumnInput;\n\tAddProjectColumnPayload: ResolverTypeWrapper<AddProjectColumnPayload>;\n\tAddPullRequestReviewCommentInput: AddPullRequestReviewCommentInput;\n\tAddPullRequestReviewCommentPayload: ResolverTypeWrapper<AddPullRequestReviewCommentPayload>;\n\tAddPullRequestReviewInput: AddPullRequestReviewInput;\n\tAddPullRequestReviewPayload: ResolverTypeWrapper<AddPullRequestReviewPayload>;\n\tAddPullRequestReviewThreadInput: AddPullRequestReviewThreadInput;\n\tAddPullRequestReviewThreadPayload: ResolverTypeWrapper<AddPullRequestReviewThreadPayload>;\n\tAddReactionInput: AddReactionInput;\n\tAddReactionPayload: ResolverTypeWrapper<AddReactionPayload>;\n\tAddStarInput: AddStarInput;\n\tAddStarPayload: ResolverTypeWrapper<AddStarPayload>;\n\tAddedToProjectEvent: ResolverTypeWrapper<AddedToProjectEvent>;\n\tApp: ResolverTypeWrapper<App>;\n\tArchiveRepositoryInput: ArchiveRepositoryInput;\n\tArchiveRepositoryPayload: ResolverTypeWrapper<ArchiveRepositoryPayload>;\n\tAssignable: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tAssignedEvent: ResolverTypeWrapper<Omit<AssignedEvent, \"assignee\"> & { assignee?: Maybe<ResolversTypes[\"Assignee\"]> }>;\n\tAssignee: ResolversTypes[\"Bot\"] | ResolversTypes[\"Mannequin\"] | ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tAuditEntry:\n\t\t| ResolversTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tAuditEntryActor: ResolversTypes[\"Bot\"] | ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tAuditLogOrder: AuditLogOrder;\n\tAuditLogOrderField: AuditLogOrderField;\n\tAutomaticBaseChangeFailedEvent: ResolverTypeWrapper<AutomaticBaseChangeFailedEvent>;\n\tAutomaticBaseChangeSucceededEvent: ResolverTypeWrapper<AutomaticBaseChangeSucceededEvent>;\n\tBaseRefChangedEvent: ResolverTypeWrapper<BaseRefChangedEvent>;\n\tBaseRefForcePushedEvent: ResolverTypeWrapper<BaseRefForcePushedEvent>;\n\tBlame: ResolverTypeWrapper<Blame>;\n\tBlameRange: ResolverTypeWrapper<BlameRange>;\n\tBlob: ResolverTypeWrapper<Blob>;\n\tBoolean: ResolverTypeWrapper<Scalars[\"Boolean\"]>;\n\tBot: ResolverTypeWrapper<Bot>;\n\tBranchProtectionRule: ResolverTypeWrapper<BranchProtectionRule>;\n\tBranchProtectionRuleConflict: ResolverTypeWrapper<BranchProtectionRuleConflict>;\n\tBranchProtectionRuleConflictConnection: ResolverTypeWrapper<BranchProtectionRuleConflictConnection>;\n\tBranchProtectionRuleConflictEdge: ResolverTypeWrapper<BranchProtectionRuleConflictEdge>;\n\tBranchProtectionRuleConnection: ResolverTypeWrapper<BranchProtectionRuleConnection>;\n\tBranchProtectionRuleEdge: ResolverTypeWrapper<BranchProtectionRuleEdge>;\n\tCancelEnterpriseAdminInvitationInput: CancelEnterpriseAdminInvitationInput;\n\tCancelEnterpriseAdminInvitationPayload: ResolverTypeWrapper<CancelEnterpriseAdminInvitationPayload>;\n\tChangeUserStatusInput: ChangeUserStatusInput;\n\tChangeUserStatusPayload: ResolverTypeWrapper<ChangeUserStatusPayload>;\n\tClearLabelsFromLabelableInput: ClearLabelsFromLabelableInput;\n\tClearLabelsFromLabelablePayload: ResolverTypeWrapper<ClearLabelsFromLabelablePayload>;\n\tCloneProjectInput: CloneProjectInput;\n\tCloneProjectPayload: ResolverTypeWrapper<CloneProjectPayload>;\n\tCloneTemplateRepositoryInput: CloneTemplateRepositoryInput;\n\tCloneTemplateRepositoryPayload: ResolverTypeWrapper<CloneTemplateRepositoryPayload>;\n\tClosable:\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"Milestone\"]\n\t\t| ResolversTypes[\"Project\"]\n\t\t| ResolversTypes[\"PullRequest\"];\n\tCloseIssueInput: CloseIssueInput;\n\tCloseIssuePayload: ResolverTypeWrapper<CloseIssuePayload>;\n\tClosePullRequestInput: ClosePullRequestInput;\n\tClosePullRequestPayload: ResolverTypeWrapper<ClosePullRequestPayload>;\n\tClosedEvent: ResolverTypeWrapper<Omit<ClosedEvent, \"closer\"> & { closer?: Maybe<ResolversTypes[\"Closer\"]> }>;\n\tCloser: ResolversTypes[\"Commit\"] | ResolversTypes[\"PullRequest\"];\n\tCodeOfConduct: ResolverTypeWrapper<CodeOfConduct>;\n\tCollaboratorAffiliation: CollaboratorAffiliation;\n\tComment:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"];\n\tCommentAuthorAssociation: CommentAuthorAssociation;\n\tCommentCannotUpdateReason: CommentCannotUpdateReason;\n\tCommentDeletedEvent: ResolverTypeWrapper<CommentDeletedEvent>;\n\tCommit: ResolverTypeWrapper<Commit>;\n\tCommitAuthor: CommitAuthor;\n\tCommitComment: ResolverTypeWrapper<CommitComment>;\n\tCommitCommentConnection: ResolverTypeWrapper<CommitCommentConnection>;\n\tCommitCommentEdge: ResolverTypeWrapper<CommitCommentEdge>;\n\tCommitCommentThread: ResolverTypeWrapper<CommitCommentThread>;\n\tCommitConnection: ResolverTypeWrapper<CommitConnection>;\n\tCommitContributionOrder: CommitContributionOrder;\n\tCommitContributionOrderField: CommitContributionOrderField;\n\tCommitContributionsByRepository: ResolverTypeWrapper<CommitContributionsByRepository>;\n\tCommitEdge: ResolverTypeWrapper<CommitEdge>;\n\tCommitHistoryConnection: ResolverTypeWrapper<CommitHistoryConnection>;\n\tConnectedEvent: ResolverTypeWrapper<\n\t\tOmit<ConnectedEvent, \"source\" | \"subject\"> & {\n\t\t\tsource: ResolversTypes[\"ReferencedSubject\"];\n\t\t\tsubject: ResolversTypes[\"ReferencedSubject\"];\n\t\t}\n\t>;\n\tContribution:\n\t\t| ResolversTypes[\"CreatedCommitContribution\"]\n\t\t| ResolversTypes[\"CreatedIssueContribution\"]\n\t\t| ResolversTypes[\"CreatedPullRequestContribution\"]\n\t\t| ResolversTypes[\"CreatedPullRequestReviewContribution\"]\n\t\t| ResolversTypes[\"CreatedRepositoryContribution\"]\n\t\t| ResolversTypes[\"JoinedGitHubContribution\"]\n\t\t| ResolversTypes[\"RestrictedContribution\"];\n\tContributionCalendar: ResolverTypeWrapper<ContributionCalendar>;\n\tContributionCalendarDay: ResolverTypeWrapper<ContributionCalendarDay>;\n\tContributionCalendarMonth: ResolverTypeWrapper<ContributionCalendarMonth>;\n\tContributionCalendarWeek: ResolverTypeWrapper<ContributionCalendarWeek>;\n\tContributionOrder: ContributionOrder;\n\tContributionsCollection: ResolverTypeWrapper<\n\t\tOmit<\n\t\t\tContributionsCollection,\n\t\t\t\"firstIssueContribution\" | \"firstPullRequestContribution\" | \"firstRepositoryContribution\"\n\t\t> & {\n\t\t\tfirstIssueContribution?: Maybe<ResolversTypes[\"CreatedIssueOrRestrictedContribution\"]>;\n\t\t\tfirstPullRequestContribution?: Maybe<ResolversTypes[\"CreatedPullRequestOrRestrictedContribution\"]>;\n\t\t\tfirstRepositoryContribution?: Maybe<ResolversTypes[\"CreatedRepositoryOrRestrictedContribution\"]>;\n\t\t}\n\t>;\n\tConvertProjectCardNoteToIssueInput: ConvertProjectCardNoteToIssueInput;\n\tConvertProjectCardNoteToIssuePayload: ResolverTypeWrapper<ConvertProjectCardNoteToIssuePayload>;\n\tConvertToDraftEvent: ResolverTypeWrapper<ConvertToDraftEvent>;\n\tConvertedNoteToIssueEvent: ResolverTypeWrapper<ConvertedNoteToIssueEvent>;\n\tCreateBranchProtectionRuleInput: CreateBranchProtectionRuleInput;\n\tCreateBranchProtectionRulePayload: ResolverTypeWrapper<CreateBranchProtectionRulePayload>;\n\tCreateEnterpriseOrganizationInput: CreateEnterpriseOrganizationInput;\n\tCreateEnterpriseOrganizationPayload: ResolverTypeWrapper<CreateEnterpriseOrganizationPayload>;\n\tCreateIpAllowListEntryInput: CreateIpAllowListEntryInput;\n\tCreateIpAllowListEntryPayload: ResolverTypeWrapper<CreateIpAllowListEntryPayload>;\n\tCreateIssueInput: CreateIssueInput;\n\tCreateIssuePayload: ResolverTypeWrapper<CreateIssuePayload>;\n\tCreateProjectInput: CreateProjectInput;\n\tCreateProjectPayload: ResolverTypeWrapper<CreateProjectPayload>;\n\tCreatePullRequestInput: CreatePullRequestInput;\n\tCreatePullRequestPayload: ResolverTypeWrapper<CreatePullRequestPayload>;\n\tCreateRefInput: CreateRefInput;\n\tCreateRefPayload: ResolverTypeWrapper<CreateRefPayload>;\n\tCreateRepositoryInput: CreateRepositoryInput;\n\tCreateRepositoryPayload: ResolverTypeWrapper<CreateRepositoryPayload>;\n\tCreateTeamDiscussionCommentInput: CreateTeamDiscussionCommentInput;\n\tCreateTeamDiscussionCommentPayload: ResolverTypeWrapper<CreateTeamDiscussionCommentPayload>;\n\tCreateTeamDiscussionInput: CreateTeamDiscussionInput;\n\tCreateTeamDiscussionPayload: ResolverTypeWrapper<CreateTeamDiscussionPayload>;\n\tCreatedCommitContribution: ResolverTypeWrapper<CreatedCommitContribution>;\n\tCreatedCommitContributionConnection: ResolverTypeWrapper<CreatedCommitContributionConnection>;\n\tCreatedCommitContributionEdge: ResolverTypeWrapper<CreatedCommitContributionEdge>;\n\tCreatedIssueContribution: ResolverTypeWrapper<CreatedIssueContribution>;\n\tCreatedIssueContributionConnection: ResolverTypeWrapper<CreatedIssueContributionConnection>;\n\tCreatedIssueContributionEdge: ResolverTypeWrapper<CreatedIssueContributionEdge>;\n\tCreatedIssueOrRestrictedContribution:\n\t\t| ResolversTypes[\"CreatedIssueContribution\"]\n\t\t| ResolversTypes[\"RestrictedContribution\"];\n\tCreatedPullRequestContribution: ResolverTypeWrapper<CreatedPullRequestContribution>;\n\tCreatedPullRequestContributionConnection: ResolverTypeWrapper<CreatedPullRequestContributionConnection>;\n\tCreatedPullRequestContributionEdge: ResolverTypeWrapper<CreatedPullRequestContributionEdge>;\n\tCreatedPullRequestOrRestrictedContribution:\n\t\t| ResolversTypes[\"CreatedPullRequestContribution\"]\n\t\t| ResolversTypes[\"RestrictedContribution\"];\n\tCreatedPullRequestReviewContribution: ResolverTypeWrapper<CreatedPullRequestReviewContribution>;\n\tCreatedPullRequestReviewContributionConnection: ResolverTypeWrapper<CreatedPullRequestReviewContributionConnection>;\n\tCreatedPullRequestReviewContributionEdge: ResolverTypeWrapper<CreatedPullRequestReviewContributionEdge>;\n\tCreatedRepositoryContribution: ResolverTypeWrapper<CreatedRepositoryContribution>;\n\tCreatedRepositoryContributionConnection: ResolverTypeWrapper<CreatedRepositoryContributionConnection>;\n\tCreatedRepositoryContributionEdge: ResolverTypeWrapper<CreatedRepositoryContributionEdge>;\n\tCreatedRepositoryOrRestrictedContribution:\n\t\t| ResolversTypes[\"CreatedRepositoryContribution\"]\n\t\t| ResolversTypes[\"RestrictedContribution\"];\n\tCrossReferencedEvent: ResolverTypeWrapper<\n\t\tOmit<CrossReferencedEvent, \"source\" | \"target\"> & {\n\t\t\tsource: ResolversTypes[\"ReferencedSubject\"];\n\t\t\ttarget: ResolversTypes[\"ReferencedSubject\"];\n\t\t}\n\t>;\n\tDate: ResolverTypeWrapper<Scalars[\"Date\"]>;\n\tDateTime: ResolverTypeWrapper<Scalars[\"DateTime\"]>;\n\tDeclineTopicSuggestionInput: DeclineTopicSuggestionInput;\n\tDeclineTopicSuggestionPayload: ResolverTypeWrapper<DeclineTopicSuggestionPayload>;\n\tDefaultRepositoryPermissionField: DefaultRepositoryPermissionField;\n\tDeletable:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"];\n\tDeleteBranchProtectionRuleInput: DeleteBranchProtectionRuleInput;\n\tDeleteBranchProtectionRulePayload: ResolverTypeWrapper<DeleteBranchProtectionRulePayload>;\n\tDeleteDeploymentInput: DeleteDeploymentInput;\n\tDeleteDeploymentPayload: ResolverTypeWrapper<DeleteDeploymentPayload>;\n\tDeleteIpAllowListEntryInput: DeleteIpAllowListEntryInput;\n\tDeleteIpAllowListEntryPayload: ResolverTypeWrapper<DeleteIpAllowListEntryPayload>;\n\tDeleteIssueCommentInput: DeleteIssueCommentInput;\n\tDeleteIssueCommentPayload: ResolverTypeWrapper<DeleteIssueCommentPayload>;\n\tDeleteIssueInput: DeleteIssueInput;\n\tDeleteIssuePayload: ResolverTypeWrapper<DeleteIssuePayload>;\n\tDeleteProjectCardInput: DeleteProjectCardInput;\n\tDeleteProjectCardPayload: ResolverTypeWrapper<DeleteProjectCardPayload>;\n\tDeleteProjectColumnInput: DeleteProjectColumnInput;\n\tDeleteProjectColumnPayload: ResolverTypeWrapper<DeleteProjectColumnPayload>;\n\tDeleteProjectInput: DeleteProjectInput;\n\tDeleteProjectPayload: ResolverTypeWrapper<DeleteProjectPayload>;\n\tDeletePullRequestReviewCommentInput: DeletePullRequestReviewCommentInput;\n\tDeletePullRequestReviewCommentPayload: ResolverTypeWrapper<DeletePullRequestReviewCommentPayload>;\n\tDeletePullRequestReviewInput: DeletePullRequestReviewInput;\n\tDeletePullRequestReviewPayload: ResolverTypeWrapper<DeletePullRequestReviewPayload>;\n\tDeleteRefInput: DeleteRefInput;\n\tDeleteRefPayload: ResolverTypeWrapper<DeleteRefPayload>;\n\tDeleteTeamDiscussionCommentInput: DeleteTeamDiscussionCommentInput;\n\tDeleteTeamDiscussionCommentPayload: ResolverTypeWrapper<DeleteTeamDiscussionCommentPayload>;\n\tDeleteTeamDiscussionInput: DeleteTeamDiscussionInput;\n\tDeleteTeamDiscussionPayload: ResolverTypeWrapper<DeleteTeamDiscussionPayload>;\n\tDemilestonedEvent: ResolverTypeWrapper<Omit<DemilestonedEvent, \"subject\"> & { subject: ResolversTypes[\"MilestoneItem\"] }>;\n\tDeployKey: ResolverTypeWrapper<DeployKey>;\n\tDeployKeyConnection: ResolverTypeWrapper<DeployKeyConnection>;\n\tDeployKeyEdge: ResolverTypeWrapper<DeployKeyEdge>;\n\tDeployedEvent: ResolverTypeWrapper<DeployedEvent>;\n\tDeployment: ResolverTypeWrapper<Deployment>;\n\tDeploymentConnection: ResolverTypeWrapper<DeploymentConnection>;\n\tDeploymentEdge: ResolverTypeWrapper<DeploymentEdge>;\n\tDeploymentEnvironmentChangedEvent: ResolverTypeWrapper<DeploymentEnvironmentChangedEvent>;\n\tDeploymentOrder: DeploymentOrder;\n\tDeploymentOrderField: DeploymentOrderField;\n\tDeploymentState: DeploymentState;\n\tDeploymentStatus: ResolverTypeWrapper<DeploymentStatus>;\n\tDeploymentStatusConnection: ResolverTypeWrapper<DeploymentStatusConnection>;\n\tDeploymentStatusEdge: ResolverTypeWrapper<DeploymentStatusEdge>;\n\tDeploymentStatusState: DeploymentStatusState;\n\tDiffSide: DiffSide;\n\tDisconnectedEvent: ResolverTypeWrapper<\n\t\tOmit<DisconnectedEvent, \"source\" | \"subject\"> & {\n\t\t\tsource: ResolversTypes[\"ReferencedSubject\"];\n\t\t\tsubject: ResolversTypes[\"ReferencedSubject\"];\n\t\t}\n\t>;\n\tDismissPullRequestReviewInput: DismissPullRequestReviewInput;\n\tDismissPullRequestReviewPayload: ResolverTypeWrapper<DismissPullRequestReviewPayload>;\n\tDraftPullRequestReviewComment: DraftPullRequestReviewComment;\n\tDraftPullRequestReviewThread: DraftPullRequestReviewThread;\n\tEnterprise: ResolverTypeWrapper<Enterprise>;\n\tEnterpriseAdministratorConnection: ResolverTypeWrapper<EnterpriseAdministratorConnection>;\n\tEnterpriseAdministratorEdge: ResolverTypeWrapper<EnterpriseAdministratorEdge>;\n\tEnterpriseAdministratorInvitation: ResolverTypeWrapper<EnterpriseAdministratorInvitation>;\n\tEnterpriseAdministratorInvitationConnection: ResolverTypeWrapper<EnterpriseAdministratorInvitationConnection>;\n\tEnterpriseAdministratorInvitationEdge: ResolverTypeWrapper<EnterpriseAdministratorInvitationEdge>;\n\tEnterpriseAdministratorInvitationOrder: EnterpriseAdministratorInvitationOrder;\n\tEnterpriseAdministratorInvitationOrderField: EnterpriseAdministratorInvitationOrderField;\n\tEnterpriseAdministratorRole: EnterpriseAdministratorRole;\n\tEnterpriseAuditEntryData:\n\t\t| ResolversTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"];\n\tEnterpriseBillingInfo: ResolverTypeWrapper<EnterpriseBillingInfo>;\n\tFloat: ResolverTypeWrapper<Scalars[\"Float\"]>;\n\tEnterpriseDefaultRepositoryPermissionSettingValue: EnterpriseDefaultRepositoryPermissionSettingValue;\n\tEnterpriseEnabledDisabledSettingValue: EnterpriseEnabledDisabledSettingValue;\n\tEnterpriseEnabledSettingValue: EnterpriseEnabledSettingValue;\n\tEnterpriseIdentityProvider: ResolverTypeWrapper<EnterpriseIdentityProvider>;\n\tEnterpriseMember: ResolversTypes[\"EnterpriseUserAccount\"] | ResolversTypes[\"User\"];\n\tEnterpriseMemberConnection: ResolverTypeWrapper<\n\t\tOmit<EnterpriseMemberConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"EnterpriseMember\"]>>> }\n\t>;\n\tEnterpriseMemberEdge: ResolverTypeWrapper<\n\t\tOmit<EnterpriseMemberEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"EnterpriseMember\"]> }\n\t>;\n\tEnterpriseMemberOrder: EnterpriseMemberOrder;\n\tEnterpriseMemberOrderField: EnterpriseMemberOrderField;\n\tEnterpriseMembersCanCreateRepositoriesSettingValue: EnterpriseMembersCanCreateRepositoriesSettingValue;\n\tEnterpriseMembersCanMakePurchasesSettingValue: EnterpriseMembersCanMakePurchasesSettingValue;\n\tEnterpriseOrganizationMembershipConnection: ResolverTypeWrapper<EnterpriseOrganizationMembershipConnection>;\n\tEnterpriseOrganizationMembershipEdge: ResolverTypeWrapper<EnterpriseOrganizationMembershipEdge>;\n\tEnterpriseOutsideCollaboratorConnection: ResolverTypeWrapper<EnterpriseOutsideCollaboratorConnection>;\n\tEnterpriseOutsideCollaboratorEdge: ResolverTypeWrapper<EnterpriseOutsideCollaboratorEdge>;\n\tEnterpriseOwnerInfo: ResolverTypeWrapper<EnterpriseOwnerInfo>;\n\tEnterprisePendingCollaboratorConnection: ResolverTypeWrapper<EnterprisePendingCollaboratorConnection>;\n\tEnterprisePendingCollaboratorEdge: ResolverTypeWrapper<EnterprisePendingCollaboratorEdge>;\n\tEnterprisePendingMemberInvitationConnection: ResolverTypeWrapper<EnterprisePendingMemberInvitationConnection>;\n\tEnterprisePendingMemberInvitationEdge: ResolverTypeWrapper<EnterprisePendingMemberInvitationEdge>;\n\tEnterpriseRepositoryInfo: ResolverTypeWrapper<EnterpriseRepositoryInfo>;\n\tEnterpriseRepositoryInfoConnection: ResolverTypeWrapper<EnterpriseRepositoryInfoConnection>;\n\tEnterpriseRepositoryInfoEdge: ResolverTypeWrapper<EnterpriseRepositoryInfoEdge>;\n\tEnterpriseServerInstallation: ResolverTypeWrapper<EnterpriseServerInstallation>;\n\tEnterpriseServerInstallationConnection: ResolverTypeWrapper<EnterpriseServerInstallationConnection>;\n\tEnterpriseServerInstallationEdge: ResolverTypeWrapper<EnterpriseServerInstallationEdge>;\n\tEnterpriseServerInstallationOrder: EnterpriseServerInstallationOrder;\n\tEnterpriseServerInstallationOrderField: EnterpriseServerInstallationOrderField;\n\tEnterpriseServerUserAccount: ResolverTypeWrapper<EnterpriseServerUserAccount>;\n\tEnterpriseServerUserAccountConnection: ResolverTypeWrapper<EnterpriseServerUserAccountConnection>;\n\tEnterpriseServerUserAccountEdge: ResolverTypeWrapper<EnterpriseServerUserAccountEdge>;\n\tEnterpriseServerUserAccountEmail: ResolverTypeWrapper<EnterpriseServerUserAccountEmail>;\n\tEnterpriseServerUserAccountEmailConnection: ResolverTypeWrapper<EnterpriseServerUserAccountEmailConnection>;\n\tEnterpriseServerUserAccountEmailEdge: ResolverTypeWrapper<EnterpriseServerUserAccountEmailEdge>;\n\tEnterpriseServerUserAccountEmailOrder: EnterpriseServerUserAccountEmailOrder;\n\tEnterpriseServerUserAccountEmailOrderField: EnterpriseServerUserAccountEmailOrderField;\n\tEnterpriseServerUserAccountOrder: EnterpriseServerUserAccountOrder;\n\tEnterpriseServerUserAccountOrderField: EnterpriseServerUserAccountOrderField;\n\tEnterpriseServerUserAccountsUpload: ResolverTypeWrapper<EnterpriseServerUserAccountsUpload>;\n\tEnterpriseServerUserAccountsUploadConnection: ResolverTypeWrapper<EnterpriseServerUserAccountsUploadConnection>;\n\tEnterpriseServerUserAccountsUploadEdge: ResolverTypeWrapper<EnterpriseServerUserAccountsUploadEdge>;\n\tEnterpriseServerUserAccountsUploadOrder: EnterpriseServerUserAccountsUploadOrder;\n\tEnterpriseServerUserAccountsUploadOrderField: EnterpriseServerUserAccountsUploadOrderField;\n\tEnterpriseServerUserAccountsUploadSyncState: EnterpriseServerUserAccountsUploadSyncState;\n\tEnterpriseUserAccount: ResolverTypeWrapper<EnterpriseUserAccount>;\n\tEnterpriseUserAccountConnection: ResolverTypeWrapper<EnterpriseUserAccountConnection>;\n\tEnterpriseUserAccountEdge: ResolverTypeWrapper<EnterpriseUserAccountEdge>;\n\tEnterpriseUserAccountMembershipRole: EnterpriseUserAccountMembershipRole;\n\tEnterpriseUserDeployment: EnterpriseUserDeployment;\n\tExternalIdentity: ResolverTypeWrapper<ExternalIdentity>;\n\tExternalIdentityConnection: ResolverTypeWrapper<ExternalIdentityConnection>;\n\tExternalIdentityEdge: ResolverTypeWrapper<ExternalIdentityEdge>;\n\tExternalIdentitySamlAttributes: ResolverTypeWrapper<ExternalIdentitySamlAttributes>;\n\tExternalIdentityScimAttributes: ResolverTypeWrapper<ExternalIdentityScimAttributes>;\n\tFollowUserInput: FollowUserInput;\n\tFollowUserPayload: ResolverTypeWrapper<FollowUserPayload>;\n\tFollowerConnection: ResolverTypeWrapper<FollowerConnection>;\n\tFollowingConnection: ResolverTypeWrapper<FollowingConnection>;\n\tFundingLink: ResolverTypeWrapper<FundingLink>;\n\tFundingPlatform: FundingPlatform;\n\tGenericHovercardContext: ResolverTypeWrapper<GenericHovercardContext>;\n\tGist: ResolverTypeWrapper<Gist>;\n\tGistComment: ResolverTypeWrapper<GistComment>;\n\tGistCommentConnection: ResolverTypeWrapper<GistCommentConnection>;\n\tGistCommentEdge: ResolverTypeWrapper<GistCommentEdge>;\n\tGistConnection: ResolverTypeWrapper<GistConnection>;\n\tGistEdge: ResolverTypeWrapper<GistEdge>;\n\tGistFile: ResolverTypeWrapper<GistFile>;\n\tGistOrder: GistOrder;\n\tGistOrderField: GistOrderField;\n\tGistPrivacy: GistPrivacy;\n\tGitActor: ResolverTypeWrapper<GitActor>;\n\tGitHubMetadata: ResolverTypeWrapper<GitHubMetadata>;\n\tGitObject: ResolversTypes[\"Blob\"] | ResolversTypes[\"Commit\"] | ResolversTypes[\"Tag\"] | ResolversTypes[\"Tree\"];\n\tGitObjectID: ResolverTypeWrapper<Scalars[\"GitObjectID\"]>;\n\tGitSSHRemote: ResolverTypeWrapper<Scalars[\"GitSSHRemote\"]>;\n\tGitSignature: ResolversTypes[\"GpgSignature\"] | ResolversTypes[\"SmimeSignature\"] | ResolversTypes[\"UnknownSignature\"];\n\tGitSignatureState: GitSignatureState;\n\tGitTimestamp: ResolverTypeWrapper<Scalars[\"GitTimestamp\"]>;\n\tGpgSignature: ResolverTypeWrapper<GpgSignature>;\n\tHTML: ResolverTypeWrapper<Scalars[\"HTML\"]>;\n\tHeadRefDeletedEvent: ResolverTypeWrapper<HeadRefDeletedEvent>;\n\tHeadRefForcePushedEvent: ResolverTypeWrapper<HeadRefForcePushedEvent>;\n\tHeadRefRestoredEvent: ResolverTypeWrapper<HeadRefRestoredEvent>;\n\tHovercard: ResolverTypeWrapper<Hovercard>;\n\tHovercardContext:\n\t\t| ResolversTypes[\"GenericHovercardContext\"]\n\t\t| ResolversTypes[\"OrganizationTeamsHovercardContext\"]\n\t\t| ResolversTypes[\"OrganizationsHovercardContext\"]\n\t\t| ResolversTypes[\"ReviewStatusHovercardContext\"]\n\t\t| ResolversTypes[\"ViewerHovercardContext\"];\n\tIdentityProviderConfigurationState: IdentityProviderConfigurationState;\n\tInviteEnterpriseAdminInput: InviteEnterpriseAdminInput;\n\tInviteEnterpriseAdminPayload: ResolverTypeWrapper<InviteEnterpriseAdminPayload>;\n\tIpAllowListEnabledSettingValue: IpAllowListEnabledSettingValue;\n\tIpAllowListEntry: ResolverTypeWrapper<Omit<IpAllowListEntry, \"owner\"> & { owner: ResolversTypes[\"IpAllowListOwner\"] }>;\n\tIpAllowListEntryConnection: ResolverTypeWrapper<IpAllowListEntryConnection>;\n\tIpAllowListEntryEdge: ResolverTypeWrapper<IpAllowListEntryEdge>;\n\tIpAllowListEntryOrder: IpAllowListEntryOrder;\n\tIpAllowListEntryOrderField: IpAllowListEntryOrderField;\n\tIpAllowListOwner: ResolversTypes[\"Enterprise\"] | ResolversTypes[\"Organization\"];\n\tIssue: ResolverTypeWrapper<Issue>;\n\tIssueComment: ResolverTypeWrapper<IssueComment>;\n\tIssueCommentConnection: ResolverTypeWrapper<IssueCommentConnection>;\n\tIssueCommentEdge: ResolverTypeWrapper<IssueCommentEdge>;\n\tIssueConnection: ResolverTypeWrapper<IssueConnection>;\n\tIssueContributionsByRepository: ResolverTypeWrapper<IssueContributionsByRepository>;\n\tIssueEdge: ResolverTypeWrapper<IssueEdge>;\n\tIssueFilters: IssueFilters;\n\tIssueOrPullRequest: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tIssueOrder: IssueOrder;\n\tIssueOrderField: IssueOrderField;\n\tIssueState: IssueState;\n\tIssueTimelineConnection: ResolverTypeWrapper<\n\t\tOmit<IssueTimelineConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItem\"]>>> }\n\t>;\n\tIssueTimelineItem:\n\t\t| ResolversTypes[\"AssignedEvent\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"Commit\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"DemilestonedEvent\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"LabeledEvent\"]\n\t\t| ResolversTypes[\"LockedEvent\"]\n\t\t| ResolversTypes[\"MilestonedEvent\"]\n\t\t| ResolversTypes[\"ReferencedEvent\"]\n\t\t| ResolversTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversTypes[\"ReopenedEvent\"]\n\t\t| ResolversTypes[\"SubscribedEvent\"]\n\t\t| ResolversTypes[\"TransferredEvent\"]\n\t\t| ResolversTypes[\"UnassignedEvent\"]\n\t\t| ResolversTypes[\"UnlabeledEvent\"]\n\t\t| ResolversTypes[\"UnlockedEvent\"]\n\t\t| ResolversTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversTypes[\"UserBlockedEvent\"];\n\tIssueTimelineItemEdge: ResolverTypeWrapper<\n\t\tOmit<IssueTimelineItemEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"IssueTimelineItem\"]> }\n\t>;\n\tIssueTimelineItems:\n\t\t| ResolversTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversTypes[\"AssignedEvent\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversTypes[\"ConnectedEvent\"]\n\t\t| ResolversTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"DemilestonedEvent\"]\n\t\t| ResolversTypes[\"DisconnectedEvent\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"LabeledEvent\"]\n\t\t| ResolversTypes[\"LockedEvent\"]\n\t\t| ResolversTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"MentionedEvent\"]\n\t\t| ResolversTypes[\"MilestonedEvent\"]\n\t\t| ResolversTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversTypes[\"PinnedEvent\"]\n\t\t| ResolversTypes[\"ReferencedEvent\"]\n\t\t| ResolversTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversTypes[\"ReopenedEvent\"]\n\t\t| ResolversTypes[\"SubscribedEvent\"]\n\t\t| ResolversTypes[\"TransferredEvent\"]\n\t\t| ResolversTypes[\"UnassignedEvent\"]\n\t\t| ResolversTypes[\"UnlabeledEvent\"]\n\t\t| ResolversTypes[\"UnlockedEvent\"]\n\t\t| ResolversTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"UnpinnedEvent\"]\n\t\t| ResolversTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversTypes[\"UserBlockedEvent\"];\n\tIssueTimelineItemsConnection: ResolverTypeWrapper<\n\t\tOmit<IssueTimelineItemsConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItems\"]>>> }\n\t>;\n\tIssueTimelineItemsEdge: ResolverTypeWrapper<\n\t\tOmit<IssueTimelineItemsEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"IssueTimelineItems\"]> }\n\t>;\n\tIssueTimelineItemsItemType: IssueTimelineItemsItemType;\n\tJoinedGitHubContribution: ResolverTypeWrapper<JoinedGitHubContribution>;\n\tLabel: ResolverTypeWrapper<Label>;\n\tLabelConnection: ResolverTypeWrapper<LabelConnection>;\n\tLabelEdge: ResolverTypeWrapper<LabelEdge>;\n\tLabelOrder: LabelOrder;\n\tLabelOrderField: LabelOrderField;\n\tLabelable: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tLabeledEvent: ResolverTypeWrapper<LabeledEvent>;\n\tLanguage: ResolverTypeWrapper<Language>;\n\tLanguageConnection: ResolverTypeWrapper<LanguageConnection>;\n\tLanguageEdge: ResolverTypeWrapper<LanguageEdge>;\n\tLanguageOrder: LanguageOrder;\n\tLanguageOrderField: LanguageOrderField;\n\tLicense: ResolverTypeWrapper<License>;\n\tLicenseRule: ResolverTypeWrapper<LicenseRule>;\n\tLinkRepositoryToProjectInput: LinkRepositoryToProjectInput;\n\tLinkRepositoryToProjectPayload: ResolverTypeWrapper<LinkRepositoryToProjectPayload>;\n\tLockLockableInput: LockLockableInput;\n\tLockLockablePayload: ResolverTypeWrapper<LockLockablePayload>;\n\tLockReason: LockReason;\n\tLockable: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tLockedEvent: ResolverTypeWrapper<LockedEvent>;\n\tMannequin: ResolverTypeWrapper<Mannequin>;\n\tMarkPullRequestReadyForReviewInput: MarkPullRequestReadyForReviewInput;\n\tMarkPullRequestReadyForReviewPayload: ResolverTypeWrapper<MarkPullRequestReadyForReviewPayload>;\n\tMarkedAsDuplicateEvent: ResolverTypeWrapper<MarkedAsDuplicateEvent>;\n\tMarketplaceCategory: ResolverTypeWrapper<MarketplaceCategory>;\n\tMarketplaceListing: ResolverTypeWrapper<MarketplaceListing>;\n\tMarketplaceListingConnection: ResolverTypeWrapper<MarketplaceListingConnection>;\n\tMarketplaceListingEdge: ResolverTypeWrapper<MarketplaceListingEdge>;\n\tMemberStatusable: ResolversTypes[\"Organization\"] | ResolversTypes[\"Team\"];\n\tMembersCanDeleteReposClearAuditEntry: ResolverTypeWrapper<\n\t\tOmit<MembersCanDeleteReposClearAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tMembersCanDeleteReposDisableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<MembersCanDeleteReposDisableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tMembersCanDeleteReposEnableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<MembersCanDeleteReposEnableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tMentionedEvent: ResolverTypeWrapper<MentionedEvent>;\n\tMergeBranchInput: MergeBranchInput;\n\tMergeBranchPayload: ResolverTypeWrapper<MergeBranchPayload>;\n\tMergePullRequestInput: MergePullRequestInput;\n\tMergePullRequestPayload: ResolverTypeWrapper<MergePullRequestPayload>;\n\tMergeableState: MergeableState;\n\tMergedEvent: ResolverTypeWrapper<MergedEvent>;\n\tMilestone: ResolverTypeWrapper<Milestone>;\n\tMilestoneConnection: ResolverTypeWrapper<MilestoneConnection>;\n\tMilestoneEdge: ResolverTypeWrapper<MilestoneEdge>;\n\tMilestoneItem: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tMilestoneOrder: MilestoneOrder;\n\tMilestoneOrderField: MilestoneOrderField;\n\tMilestoneState: MilestoneState;\n\tMilestonedEvent: ResolverTypeWrapper<Omit<MilestonedEvent, \"subject\"> & { subject: ResolversTypes[\"MilestoneItem\"] }>;\n\tMinimizable:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"];\n\tMinimizeCommentInput: MinimizeCommentInput;\n\tMinimizeCommentPayload: ResolverTypeWrapper<MinimizeCommentPayload>;\n\tMoveProjectCardInput: MoveProjectCardInput;\n\tMoveProjectCardPayload: ResolverTypeWrapper<MoveProjectCardPayload>;\n\tMoveProjectColumnInput: MoveProjectColumnInput;\n\tMoveProjectColumnPayload: ResolverTypeWrapper<MoveProjectColumnPayload>;\n\tMovedColumnsInProjectEvent: ResolverTypeWrapper<MovedColumnsInProjectEvent>;\n\tMutation: ResolverTypeWrapper<{}>;\n\tNode:\n\t\t| ResolversTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversTypes[\"App\"]\n\t\t| ResolversTypes[\"AssignedEvent\"]\n\t\t| ResolversTypes[\"AutomaticBaseChangeFailedEvent\"]\n\t\t| ResolversTypes[\"AutomaticBaseChangeSucceededEvent\"]\n\t\t| ResolversTypes[\"BaseRefChangedEvent\"]\n\t\t| ResolversTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"Blob\"]\n\t\t| ResolversTypes[\"Bot\"]\n\t\t| ResolversTypes[\"BranchProtectionRule\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"CodeOfConduct\"]\n\t\t| ResolversTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversTypes[\"Commit\"]\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"CommitCommentThread\"]\n\t\t| ResolversTypes[\"ConnectedEvent\"]\n\t\t| ResolversTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"DemilestonedEvent\"]\n\t\t| ResolversTypes[\"DeployKey\"]\n\t\t| ResolversTypes[\"DeployedEvent\"]\n\t\t| ResolversTypes[\"Deployment\"]\n\t\t| ResolversTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversTypes[\"DeploymentStatus\"]\n\t\t| ResolversTypes[\"DisconnectedEvent\"]\n\t\t| ResolversTypes[\"Enterprise\"]\n\t\t| ResolversTypes[\"EnterpriseAdministratorInvitation\"]\n\t\t| ResolversTypes[\"EnterpriseIdentityProvider\"]\n\t\t| ResolversTypes[\"EnterpriseRepositoryInfo\"]\n\t\t| ResolversTypes[\"EnterpriseServerInstallation\"]\n\t\t| ResolversTypes[\"EnterpriseServerUserAccount\"]\n\t\t| ResolversTypes[\"EnterpriseServerUserAccountEmail\"]\n\t\t| ResolversTypes[\"EnterpriseServerUserAccountsUpload\"]\n\t\t| ResolversTypes[\"EnterpriseUserAccount\"]\n\t\t| ResolversTypes[\"ExternalIdentity\"]\n\t\t| ResolversTypes[\"Gist\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversTypes[\"IpAllowListEntry\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"Label\"]\n\t\t| ResolversTypes[\"LabeledEvent\"]\n\t\t| ResolversTypes[\"Language\"]\n\t\t| ResolversTypes[\"License\"]\n\t\t| ResolversTypes[\"LockedEvent\"]\n\t\t| ResolversTypes[\"Mannequin\"]\n\t\t| ResolversTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"MarketplaceCategory\"]\n\t\t| ResolversTypes[\"MarketplaceListing\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversTypes[\"MentionedEvent\"]\n\t\t| ResolversTypes[\"MergedEvent\"]\n\t\t| ResolversTypes[\"Milestone\"]\n\t\t| ResolversTypes[\"MilestonedEvent\"]\n\t\t| ResolversTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"Organization\"]\n\t\t| ResolversTypes[\"OrganizationIdentityProvider\"]\n\t\t| ResolversTypes[\"OrganizationInvitation\"]\n\t\t| ResolversTypes[\"Package\"]\n\t\t| ResolversTypes[\"PackageFile\"]\n\t\t| ResolversTypes[\"PackageTag\"]\n\t\t| ResolversTypes[\"PackageVersion\"]\n\t\t| ResolversTypes[\"PinnedEvent\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"Project\"]\n\t\t| ResolversTypes[\"ProjectCard\"]\n\t\t| ResolversTypes[\"ProjectColumn\"]\n\t\t| ResolversTypes[\"PublicKey\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestCommit\"]\n\t\t| ResolversTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversTypes[\"PushAllowance\"]\n\t\t| ResolversTypes[\"Reaction\"]\n\t\t| ResolversTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversTypes[\"Ref\"]\n\t\t| ResolversTypes[\"ReferencedEvent\"]\n\t\t| ResolversTypes[\"Release\"]\n\t\t| ResolversTypes[\"ReleaseAsset\"]\n\t\t| ResolversTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversTypes[\"ReopenedEvent\"]\n\t\t| ResolversTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversTypes[\"Repository\"]\n\t\t| ResolversTypes[\"RepositoryInvitation\"]\n\t\t| ResolversTypes[\"RepositoryTopic\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVulnerabilityAlert\"]\n\t\t| ResolversTypes[\"ReviewDismissalAllowance\"]\n\t\t| ResolversTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequest\"]\n\t\t| ResolversTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversTypes[\"SavedReply\"]\n\t\t| ResolversTypes[\"SecurityAdvisory\"]\n\t\t| ResolversTypes[\"SponsorsListing\"]\n\t\t| ResolversTypes[\"SponsorsTier\"]\n\t\t| ResolversTypes[\"Sponsorship\"]\n\t\t| ResolversTypes[\"Status\"]\n\t\t| ResolversTypes[\"StatusCheckRollup\"]\n\t\t| ResolversTypes[\"StatusContext\"]\n\t\t| ResolversTypes[\"SubscribedEvent\"]\n\t\t| ResolversTypes[\"Tag\"]\n\t\t| ResolversTypes[\"Team\"]\n\t\t| ResolversTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"]\n\t\t| ResolversTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"Topic\"]\n\t\t| ResolversTypes[\"TransferredEvent\"]\n\t\t| ResolversTypes[\"Tree\"]\n\t\t| ResolversTypes[\"UnassignedEvent\"]\n\t\t| ResolversTypes[\"UnlabeledEvent\"]\n\t\t| ResolversTypes[\"UnlockedEvent\"]\n\t\t| ResolversTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"UnpinnedEvent\"]\n\t\t| ResolversTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversTypes[\"User\"]\n\t\t| ResolversTypes[\"UserBlockedEvent\"]\n\t\t| ResolversTypes[\"UserContentEdit\"]\n\t\t| ResolversTypes[\"UserStatus\"];\n\tOauthApplicationAuditEntryData:\n\t\t| ResolversTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessRequestedAuditEntry\"];\n\tOauthApplicationCreateAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OauthApplicationCreateAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOauthApplicationCreateAuditEntryState: OauthApplicationCreateAuditEntryState;\n\tOperationType: OperationType;\n\tOrderDirection: OrderDirection;\n\tOrgAddBillingManagerAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgAddBillingManagerAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgAddMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgAddMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgAddMemberAuditEntryPermission: OrgAddMemberAuditEntryPermission;\n\tOrgBlockUserAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgBlockUserAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgConfigDisableCollaboratorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgConfigDisableCollaboratorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgConfigEnableCollaboratorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgConfigEnableCollaboratorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgCreateAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgCreateAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgCreateAuditEntryBillingPlan: OrgCreateAuditEntryBillingPlan;\n\tOrgDisableOauthAppRestrictionsAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgDisableOauthAppRestrictionsAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgDisableSamlAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgDisableSamlAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgDisableTwoFactorRequirementAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgDisableTwoFactorRequirementAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgEnableOauthAppRestrictionsAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgEnableOauthAppRestrictionsAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgEnableSamlAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgEnableSamlAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgEnableTwoFactorRequirementAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgEnableTwoFactorRequirementAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgInviteMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgInviteMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgInviteToBusinessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgInviteToBusinessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgOauthAppAccessApprovedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgOauthAppAccessApprovedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgOauthAppAccessDeniedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgOauthAppAccessDeniedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgOauthAppAccessRequestedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgOauthAppAccessRequestedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgRemoveBillingManagerAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgRemoveBillingManagerAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgRemoveBillingManagerAuditEntryReason: OrgRemoveBillingManagerAuditEntryReason;\n\tOrgRemoveMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgRemoveMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgRemoveMemberAuditEntryMembershipType: OrgRemoveMemberAuditEntryMembershipType;\n\tOrgRemoveMemberAuditEntryReason: OrgRemoveMemberAuditEntryReason;\n\tOrgRemoveOutsideCollaboratorAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgRemoveOutsideCollaboratorAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgRemoveOutsideCollaboratorAuditEntryMembershipType: OrgRemoveOutsideCollaboratorAuditEntryMembershipType;\n\tOrgRemoveOutsideCollaboratorAuditEntryReason: OrgRemoveOutsideCollaboratorAuditEntryReason;\n\tOrgRestoreMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgRestoreMemberAuditEntry, \"actor\" | \"restoredMemberships\"> & {\n\t\t\tactor?: Maybe<ResolversTypes[\"AuditEntryActor\"]>;\n\t\t\trestoredMemberships?: Maybe<Array<ResolversTypes[\"OrgRestoreMemberAuditEntryMembership\"]>>;\n\t\t}\n\t>;\n\tOrgRestoreMemberAuditEntryMembership:\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"];\n\tOrgRestoreMemberMembershipOrganizationAuditEntryData: ResolverTypeWrapper<\n\t\tOrgRestoreMemberMembershipOrganizationAuditEntryData\n\t>;\n\tOrgRestoreMemberMembershipRepositoryAuditEntryData: ResolverTypeWrapper<\n\t\tOrgRestoreMemberMembershipRepositoryAuditEntryData\n\t>;\n\tOrgRestoreMemberMembershipTeamAuditEntryData: ResolverTypeWrapper<OrgRestoreMemberMembershipTeamAuditEntryData>;\n\tOrgUnblockUserAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgUnblockUserAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgUpdateDefaultRepositoryPermissionAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgUpdateDefaultRepositoryPermissionAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgUpdateDefaultRepositoryPermissionAuditEntryPermission: OrgUpdateDefaultRepositoryPermissionAuditEntryPermission;\n\tOrgUpdateMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgUpdateMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tOrgUpdateMemberAuditEntryPermission: OrgUpdateMemberAuditEntryPermission;\n\tOrgUpdateMemberRepositoryCreationPermissionAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgUpdateMemberRepositoryCreationPermissionAuditEntry, \"actor\"> & {\n\t\t\tactor?: Maybe<ResolversTypes[\"AuditEntryActor\"]>;\n\t\t}\n\t>;\n\tOrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility: OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility;\n\tOrgUpdateMemberRepositoryInvitationPermissionAuditEntry: ResolverTypeWrapper<\n\t\tOmit<OrgUpdateMemberRepositoryInvitationPermissionAuditEntry, \"actor\"> & {\n\t\t\tactor?: Maybe<ResolversTypes[\"AuditEntryActor\"]>;\n\t\t}\n\t>;\n\tOrganization: ResolverTypeWrapper<Organization>;\n\tOrganizationAuditEntry:\n\t\t| ResolversTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tOrganizationAuditEntryConnection: ResolverTypeWrapper<\n\t\tOmit<OrganizationAuditEntryConnection, \"nodes\"> & {\n\t\t\tnodes?: Maybe<Array<Maybe<ResolversTypes[\"OrganizationAuditEntry\"]>>>;\n\t\t}\n\t>;\n\tOrganizationAuditEntryData:\n\t\t| ResolversTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"]\n\t\t| ResolversTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tOrganizationAuditEntryEdge: ResolverTypeWrapper<\n\t\tOmit<OrganizationAuditEntryEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"OrganizationAuditEntry\"]> }\n\t>;\n\tOrganizationConnection: ResolverTypeWrapper<OrganizationConnection>;\n\tOrganizationEdge: ResolverTypeWrapper<OrganizationEdge>;\n\tOrganizationIdentityProvider: ResolverTypeWrapper<OrganizationIdentityProvider>;\n\tOrganizationInvitation: ResolverTypeWrapper<OrganizationInvitation>;\n\tOrganizationInvitationConnection: ResolverTypeWrapper<OrganizationInvitationConnection>;\n\tOrganizationInvitationEdge: ResolverTypeWrapper<OrganizationInvitationEdge>;\n\tOrganizationInvitationRole: OrganizationInvitationRole;\n\tOrganizationInvitationType: OrganizationInvitationType;\n\tOrganizationMemberConnection: ResolverTypeWrapper<OrganizationMemberConnection>;\n\tOrganizationMemberEdge: ResolverTypeWrapper<OrganizationMemberEdge>;\n\tOrganizationMemberRole: OrganizationMemberRole;\n\tOrganizationMembersCanCreateRepositoriesSettingValue: OrganizationMembersCanCreateRepositoriesSettingValue;\n\tOrganizationOrder: OrganizationOrder;\n\tOrganizationOrderField: OrganizationOrderField;\n\tOrganizationTeamsHovercardContext: ResolverTypeWrapper<OrganizationTeamsHovercardContext>;\n\tOrganizationsHovercardContext: ResolverTypeWrapper<OrganizationsHovercardContext>;\n\tPackage: ResolverTypeWrapper<Package>;\n\tPackageConnection: ResolverTypeWrapper<PackageConnection>;\n\tPackageEdge: ResolverTypeWrapper<PackageEdge>;\n\tPackageFile: ResolverTypeWrapper<PackageFile>;\n\tPackageFileConnection: ResolverTypeWrapper<PackageFileConnection>;\n\tPackageFileEdge: ResolverTypeWrapper<PackageFileEdge>;\n\tPackageFileOrder: PackageFileOrder;\n\tPackageFileOrderField: PackageFileOrderField;\n\tPackageOrder: PackageOrder;\n\tPackageOrderField: PackageOrderField;\n\tPackageOwner: ResolversTypes[\"Organization\"] | ResolversTypes[\"Repository\"] | ResolversTypes[\"User\"];\n\tPackageStatistics: ResolverTypeWrapper<PackageStatistics>;\n\tPackageTag: ResolverTypeWrapper<PackageTag>;\n\tPackageType: PackageType;\n\tPackageVersion: ResolverTypeWrapper<PackageVersion>;\n\tPackageVersionConnection: ResolverTypeWrapper<PackageVersionConnection>;\n\tPackageVersionEdge: ResolverTypeWrapper<PackageVersionEdge>;\n\tPackageVersionOrder: PackageVersionOrder;\n\tPackageVersionOrderField: PackageVersionOrderField;\n\tPackageVersionStatistics: ResolverTypeWrapper<PackageVersionStatistics>;\n\tPageInfo: ResolverTypeWrapper<PageInfo>;\n\tPermissionGranter: ResolversTypes[\"Organization\"] | ResolversTypes[\"Repository\"] | ResolversTypes[\"Team\"];\n\tPermissionSource: ResolverTypeWrapper<Omit<PermissionSource, \"source\"> & { source: ResolversTypes[\"PermissionGranter\"] }>;\n\tPinnableItem: ResolversTypes[\"Gist\"] | ResolversTypes[\"Repository\"];\n\tPinnableItemConnection: ResolverTypeWrapper<\n\t\tOmit<PinnableItemConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"PinnableItem\"]>>> }\n\t>;\n\tPinnableItemEdge: ResolverTypeWrapper<Omit<PinnableItemEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"PinnableItem\"]> }>;\n\tPinnableItemType: PinnableItemType;\n\tPinnedEvent: ResolverTypeWrapper<PinnedEvent>;\n\tPreciseDateTime: ResolverTypeWrapper<Scalars[\"PreciseDateTime\"]>;\n\tPrivateRepositoryForkingDisableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<PrivateRepositoryForkingDisableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tPrivateRepositoryForkingEnableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<PrivateRepositoryForkingEnableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tProfileItemShowcase: ResolverTypeWrapper<ProfileItemShowcase>;\n\tProfileOwner: ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tProject: ResolverTypeWrapper<Project>;\n\tProjectCard: ResolverTypeWrapper<Omit<ProjectCard, \"content\"> & { content?: Maybe<ResolversTypes[\"ProjectCardItem\"]> }>;\n\tProjectCardArchivedState: ProjectCardArchivedState;\n\tProjectCardConnection: ResolverTypeWrapper<ProjectCardConnection>;\n\tProjectCardEdge: ResolverTypeWrapper<ProjectCardEdge>;\n\tProjectCardItem: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tProjectCardState: ProjectCardState;\n\tProjectColumn: ResolverTypeWrapper<ProjectColumn>;\n\tProjectColumnConnection: ResolverTypeWrapper<ProjectColumnConnection>;\n\tProjectColumnEdge: ResolverTypeWrapper<ProjectColumnEdge>;\n\tProjectColumnPurpose: ProjectColumnPurpose;\n\tProjectConnection: ResolverTypeWrapper<ProjectConnection>;\n\tProjectEdge: ResolverTypeWrapper<ProjectEdge>;\n\tProjectOrder: ProjectOrder;\n\tProjectOrderField: ProjectOrderField;\n\tProjectOwner: ResolversTypes[\"Organization\"] | ResolversTypes[\"Repository\"] | ResolversTypes[\"User\"];\n\tProjectState: ProjectState;\n\tProjectTemplate: ProjectTemplate;\n\tPublicKey: ResolverTypeWrapper<PublicKey>;\n\tPublicKeyConnection: ResolverTypeWrapper<PublicKeyConnection>;\n\tPublicKeyEdge: ResolverTypeWrapper<PublicKeyEdge>;\n\tPullRequest: ResolverTypeWrapper<PullRequest>;\n\tPullRequestChangedFile: ResolverTypeWrapper<PullRequestChangedFile>;\n\tPullRequestChangedFileConnection: ResolverTypeWrapper<PullRequestChangedFileConnection>;\n\tPullRequestChangedFileEdge: ResolverTypeWrapper<PullRequestChangedFileEdge>;\n\tPullRequestCommit: ResolverTypeWrapper<PullRequestCommit>;\n\tPullRequestCommitCommentThread: ResolverTypeWrapper<PullRequestCommitCommentThread>;\n\tPullRequestCommitConnection: ResolverTypeWrapper<PullRequestCommitConnection>;\n\tPullRequestCommitEdge: ResolverTypeWrapper<PullRequestCommitEdge>;\n\tPullRequestConnection: ResolverTypeWrapper<PullRequestConnection>;\n\tPullRequestContributionsByRepository: ResolverTypeWrapper<PullRequestContributionsByRepository>;\n\tPullRequestEdge: ResolverTypeWrapper<PullRequestEdge>;\n\tPullRequestMergeMethod: PullRequestMergeMethod;\n\tPullRequestOrder: PullRequestOrder;\n\tPullRequestOrderField: PullRequestOrderField;\n\tPullRequestReview: ResolverTypeWrapper<PullRequestReview>;\n\tPullRequestReviewComment: ResolverTypeWrapper<PullRequestReviewComment>;\n\tPullRequestReviewCommentConnection: ResolverTypeWrapper<PullRequestReviewCommentConnection>;\n\tPullRequestReviewCommentEdge: ResolverTypeWrapper<PullRequestReviewCommentEdge>;\n\tPullRequestReviewCommentState: PullRequestReviewCommentState;\n\tPullRequestReviewConnection: ResolverTypeWrapper<PullRequestReviewConnection>;\n\tPullRequestReviewContributionsByRepository: ResolverTypeWrapper<PullRequestReviewContributionsByRepository>;\n\tPullRequestReviewDecision: PullRequestReviewDecision;\n\tPullRequestReviewEdge: ResolverTypeWrapper<PullRequestReviewEdge>;\n\tPullRequestReviewEvent: PullRequestReviewEvent;\n\tPullRequestReviewState: PullRequestReviewState;\n\tPullRequestReviewThread: ResolverTypeWrapper<PullRequestReviewThread>;\n\tPullRequestReviewThreadConnection: ResolverTypeWrapper<PullRequestReviewThreadConnection>;\n\tPullRequestReviewThreadEdge: ResolverTypeWrapper<PullRequestReviewThreadEdge>;\n\tPullRequestRevisionMarker: ResolverTypeWrapper<PullRequestRevisionMarker>;\n\tPullRequestState: PullRequestState;\n\tPullRequestTimelineConnection: ResolverTypeWrapper<\n\t\tOmit<PullRequestTimelineConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItem\"]>>> }\n\t>;\n\tPullRequestTimelineItem:\n\t\t| ResolversTypes[\"AssignedEvent\"]\n\t\t| ResolversTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"Commit\"]\n\t\t| ResolversTypes[\"CommitCommentThread\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"DemilestonedEvent\"]\n\t\t| ResolversTypes[\"DeployedEvent\"]\n\t\t| ResolversTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"LabeledEvent\"]\n\t\t| ResolversTypes[\"LockedEvent\"]\n\t\t| ResolversTypes[\"MergedEvent\"]\n\t\t| ResolversTypes[\"MilestonedEvent\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversTypes[\"ReferencedEvent\"]\n\t\t| ResolversTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversTypes[\"ReopenedEvent\"]\n\t\t| ResolversTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversTypes[\"SubscribedEvent\"]\n\t\t| ResolversTypes[\"UnassignedEvent\"]\n\t\t| ResolversTypes[\"UnlabeledEvent\"]\n\t\t| ResolversTypes[\"UnlockedEvent\"]\n\t\t| ResolversTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversTypes[\"UserBlockedEvent\"];\n\tPullRequestTimelineItemEdge: ResolverTypeWrapper<\n\t\tOmit<PullRequestTimelineItemEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"PullRequestTimelineItem\"]> }\n\t>;\n\tPullRequestTimelineItems:\n\t\t| ResolversTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversTypes[\"AssignedEvent\"]\n\t\t| ResolversTypes[\"AutomaticBaseChangeFailedEvent\"]\n\t\t| ResolversTypes[\"AutomaticBaseChangeSucceededEvent\"]\n\t\t| ResolversTypes[\"BaseRefChangedEvent\"]\n\t\t| ResolversTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversTypes[\"ConnectedEvent\"]\n\t\t| ResolversTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"DemilestonedEvent\"]\n\t\t| ResolversTypes[\"DeployedEvent\"]\n\t\t| ResolversTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversTypes[\"DisconnectedEvent\"]\n\t\t| ResolversTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"LabeledEvent\"]\n\t\t| ResolversTypes[\"LockedEvent\"]\n\t\t| ResolversTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"MentionedEvent\"]\n\t\t| ResolversTypes[\"MergedEvent\"]\n\t\t| ResolversTypes[\"MilestonedEvent\"]\n\t\t| ResolversTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversTypes[\"PinnedEvent\"]\n\t\t| ResolversTypes[\"PullRequestCommit\"]\n\t\t| ResolversTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversTypes[\"PullRequestRevisionMarker\"]\n\t\t| ResolversTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversTypes[\"ReferencedEvent\"]\n\t\t| ResolversTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversTypes[\"ReopenedEvent\"]\n\t\t| ResolversTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversTypes[\"SubscribedEvent\"]\n\t\t| ResolversTypes[\"TransferredEvent\"]\n\t\t| ResolversTypes[\"UnassignedEvent\"]\n\t\t| ResolversTypes[\"UnlabeledEvent\"]\n\t\t| ResolversTypes[\"UnlockedEvent\"]\n\t\t| ResolversTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversTypes[\"UnpinnedEvent\"]\n\t\t| ResolversTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversTypes[\"UserBlockedEvent\"];\n\tPullRequestTimelineItemsConnection: ResolverTypeWrapper<\n\t\tOmit<PullRequestTimelineItemsConnection, \"nodes\"> & {\n\t\t\tnodes?: Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItems\"]>>>;\n\t\t}\n\t>;\n\tPullRequestTimelineItemsEdge: ResolverTypeWrapper<\n\t\tOmit<PullRequestTimelineItemsEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"PullRequestTimelineItems\"]> }\n\t>;\n\tPullRequestTimelineItemsItemType: PullRequestTimelineItemsItemType;\n\tPullRequestUpdateState: PullRequestUpdateState;\n\tPushAllowance: ResolverTypeWrapper<Omit<PushAllowance, \"actor\"> & { actor?: Maybe<ResolversTypes[\"PushAllowanceActor\"]> }>;\n\tPushAllowanceActor: ResolversTypes[\"App\"] | ResolversTypes[\"Team\"] | ResolversTypes[\"User\"];\n\tPushAllowanceConnection: ResolverTypeWrapper<PushAllowanceConnection>;\n\tPushAllowanceEdge: ResolverTypeWrapper<PushAllowanceEdge>;\n\tQuery: ResolverTypeWrapper<{}>;\n\tRateLimit: ResolverTypeWrapper<RateLimit>;\n\tReactable:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"];\n\tReactingUserConnection: ResolverTypeWrapper<ReactingUserConnection>;\n\tReactingUserEdge: ResolverTypeWrapper<ReactingUserEdge>;\n\tReaction: ResolverTypeWrapper<Reaction>;\n\tReactionConnection: ResolverTypeWrapper<ReactionConnection>;\n\tReactionContent: ReactionContent;\n\tReactionEdge: ResolverTypeWrapper<ReactionEdge>;\n\tReactionGroup: ResolverTypeWrapper<ReactionGroup>;\n\tReactionOrder: ReactionOrder;\n\tReactionOrderField: ReactionOrderField;\n\tReadyForReviewEvent: ResolverTypeWrapper<ReadyForReviewEvent>;\n\tRef: ResolverTypeWrapper<Ref>;\n\tRefConnection: ResolverTypeWrapper<RefConnection>;\n\tRefEdge: ResolverTypeWrapper<RefEdge>;\n\tRefOrder: RefOrder;\n\tRefOrderField: RefOrderField;\n\tReferencedEvent: ResolverTypeWrapper<Omit<ReferencedEvent, \"subject\"> & { subject: ResolversTypes[\"ReferencedSubject\"] }>;\n\tReferencedSubject: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tRegenerateEnterpriseIdentityProviderRecoveryCodesInput: RegenerateEnterpriseIdentityProviderRecoveryCodesInput;\n\tRegenerateEnterpriseIdentityProviderRecoveryCodesPayload: ResolverTypeWrapper<\n\t\tRegenerateEnterpriseIdentityProviderRecoveryCodesPayload\n\t>;\n\tRelease: ResolverTypeWrapper<Release>;\n\tReleaseAsset: ResolverTypeWrapper<ReleaseAsset>;\n\tReleaseAssetConnection: ResolverTypeWrapper<ReleaseAssetConnection>;\n\tReleaseAssetEdge: ResolverTypeWrapper<ReleaseAssetEdge>;\n\tReleaseConnection: ResolverTypeWrapper<ReleaseConnection>;\n\tReleaseEdge: ResolverTypeWrapper<ReleaseEdge>;\n\tReleaseOrder: ReleaseOrder;\n\tReleaseOrderField: ReleaseOrderField;\n\tRemoveAssigneesFromAssignableInput: RemoveAssigneesFromAssignableInput;\n\tRemoveAssigneesFromAssignablePayload: ResolverTypeWrapper<RemoveAssigneesFromAssignablePayload>;\n\tRemoveEnterpriseAdminInput: RemoveEnterpriseAdminInput;\n\tRemoveEnterpriseAdminPayload: ResolverTypeWrapper<RemoveEnterpriseAdminPayload>;\n\tRemoveEnterpriseIdentityProviderInput: RemoveEnterpriseIdentityProviderInput;\n\tRemoveEnterpriseIdentityProviderPayload: ResolverTypeWrapper<RemoveEnterpriseIdentityProviderPayload>;\n\tRemoveEnterpriseOrganizationInput: RemoveEnterpriseOrganizationInput;\n\tRemoveEnterpriseOrganizationPayload: ResolverTypeWrapper<RemoveEnterpriseOrganizationPayload>;\n\tRemoveLabelsFromLabelableInput: RemoveLabelsFromLabelableInput;\n\tRemoveLabelsFromLabelablePayload: ResolverTypeWrapper<RemoveLabelsFromLabelablePayload>;\n\tRemoveOutsideCollaboratorInput: RemoveOutsideCollaboratorInput;\n\tRemoveOutsideCollaboratorPayload: ResolverTypeWrapper<RemoveOutsideCollaboratorPayload>;\n\tRemoveReactionInput: RemoveReactionInput;\n\tRemoveReactionPayload: ResolverTypeWrapper<RemoveReactionPayload>;\n\tRemoveStarInput: RemoveStarInput;\n\tRemoveStarPayload: ResolverTypeWrapper<RemoveStarPayload>;\n\tRemovedFromProjectEvent: ResolverTypeWrapper<RemovedFromProjectEvent>;\n\tRenamedTitleEvent: ResolverTypeWrapper<\n\t\tOmit<RenamedTitleEvent, \"subject\"> & { subject: ResolversTypes[\"RenamedTitleSubject\"] }\n\t>;\n\tRenamedTitleSubject: ResolversTypes[\"Issue\"] | ResolversTypes[\"PullRequest\"];\n\tReopenIssueInput: ReopenIssueInput;\n\tReopenIssuePayload: ResolverTypeWrapper<ReopenIssuePayload>;\n\tReopenPullRequestInput: ReopenPullRequestInput;\n\tReopenPullRequestPayload: ResolverTypeWrapper<ReopenPullRequestPayload>;\n\tReopenedEvent: ResolverTypeWrapper<ReopenedEvent>;\n\tRepoAccessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoAccessAuditEntryVisibility: RepoAccessAuditEntryVisibility;\n\tRepoAddMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoAddMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoAddMemberAuditEntryVisibility: RepoAddMemberAuditEntryVisibility;\n\tRepoAddTopicAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoAddTopicAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoArchivedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoArchivedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoArchivedAuditEntryVisibility: RepoArchivedAuditEntryVisibility;\n\tRepoChangeMergeSettingAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoChangeMergeSettingAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoChangeMergeSettingAuditEntryMergeType: RepoChangeMergeSettingAuditEntryMergeType;\n\tRepoConfigDisableAnonymousGitAccessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigDisableAnonymousGitAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigDisableCollaboratorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigDisableCollaboratorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigDisableContributorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigDisableContributorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigDisableSockpuppetDisallowedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigDisableSockpuppetDisallowedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigEnableAnonymousGitAccessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigEnableAnonymousGitAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigEnableCollaboratorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigEnableCollaboratorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigEnableContributorsOnlyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigEnableContributorsOnlyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigEnableSockpuppetDisallowedAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigEnableSockpuppetDisallowedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigLockAnonymousGitAccessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigLockAnonymousGitAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoConfigUnlockAnonymousGitAccessAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoConfigUnlockAnonymousGitAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoCreateAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoCreateAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoCreateAuditEntryVisibility: RepoCreateAuditEntryVisibility;\n\tRepoDestroyAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoDestroyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoDestroyAuditEntryVisibility: RepoDestroyAuditEntryVisibility;\n\tRepoRemoveMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoRemoveMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepoRemoveMemberAuditEntryVisibility: RepoRemoveMemberAuditEntryVisibility;\n\tRepoRemoveTopicAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepoRemoveTopicAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tReportedContentClassifiers: ReportedContentClassifiers;\n\tRepository: ResolverTypeWrapper<\n\t\tOmit<Repository, \"issueOrPullRequest\"> & { issueOrPullRequest?: Maybe<ResolversTypes[\"IssueOrPullRequest\"]> }\n\t>;\n\tRepositoryAffiliation: RepositoryAffiliation;\n\tRepositoryAuditEntryData:\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tRepositoryCollaboratorConnection: ResolverTypeWrapper<RepositoryCollaboratorConnection>;\n\tRepositoryCollaboratorEdge: ResolverTypeWrapper<RepositoryCollaboratorEdge>;\n\tRepositoryConnection: ResolverTypeWrapper<RepositoryConnection>;\n\tRepositoryContributionType: RepositoryContributionType;\n\tRepositoryEdge: ResolverTypeWrapper<RepositoryEdge>;\n\tRepositoryInfo: ResolversTypes[\"Repository\"];\n\tRepositoryInvitation: ResolverTypeWrapper<RepositoryInvitation>;\n\tRepositoryInvitationConnection: ResolverTypeWrapper<RepositoryInvitationConnection>;\n\tRepositoryInvitationEdge: ResolverTypeWrapper<RepositoryInvitationEdge>;\n\tRepositoryInvitationOrder: RepositoryInvitationOrder;\n\tRepositoryInvitationOrderField: RepositoryInvitationOrderField;\n\tRepositoryLockReason: RepositoryLockReason;\n\tRepositoryNode:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"CommitCommentThread\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"RepositoryVulnerabilityAlert\"];\n\tRepositoryOrder: RepositoryOrder;\n\tRepositoryOrderField: RepositoryOrderField;\n\tRepositoryOwner: ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tRepositoryPermission: RepositoryPermission;\n\tRepositoryPrivacy: RepositoryPrivacy;\n\tRepositoryTopic: ResolverTypeWrapper<RepositoryTopic>;\n\tRepositoryTopicConnection: ResolverTypeWrapper<RepositoryTopicConnection>;\n\tRepositoryTopicEdge: ResolverTypeWrapper<RepositoryTopicEdge>;\n\tRepositoryVisibility: RepositoryVisibility;\n\tRepositoryVisibilityChangeDisableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepositoryVisibilityChangeDisableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepositoryVisibilityChangeEnableAuditEntry: ResolverTypeWrapper<\n\t\tOmit<RepositoryVisibilityChangeEnableAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tRepositoryVulnerabilityAlert: ResolverTypeWrapper<RepositoryVulnerabilityAlert>;\n\tRepositoryVulnerabilityAlertConnection: ResolverTypeWrapper<RepositoryVulnerabilityAlertConnection>;\n\tRepositoryVulnerabilityAlertEdge: ResolverTypeWrapper<RepositoryVulnerabilityAlertEdge>;\n\tRequestReviewsInput: RequestReviewsInput;\n\tRequestReviewsPayload: ResolverTypeWrapper<RequestReviewsPayload>;\n\tRequestedReviewer: ResolversTypes[\"Mannequin\"] | ResolversTypes[\"Team\"] | ResolversTypes[\"User\"];\n\tResolveReviewThreadInput: ResolveReviewThreadInput;\n\tResolveReviewThreadPayload: ResolverTypeWrapper<ResolveReviewThreadPayload>;\n\tRestrictedContribution: ResolverTypeWrapper<RestrictedContribution>;\n\tReviewDismissalAllowance: ResolverTypeWrapper<\n\t\tOmit<ReviewDismissalAllowance, \"actor\"> & { actor?: Maybe<ResolversTypes[\"ReviewDismissalAllowanceActor\"]> }\n\t>;\n\tReviewDismissalAllowanceActor: ResolversTypes[\"Team\"] | ResolversTypes[\"User\"];\n\tReviewDismissalAllowanceConnection: ResolverTypeWrapper<ReviewDismissalAllowanceConnection>;\n\tReviewDismissalAllowanceEdge: ResolverTypeWrapper<ReviewDismissalAllowanceEdge>;\n\tReviewDismissedEvent: ResolverTypeWrapper<ReviewDismissedEvent>;\n\tReviewRequest: ResolverTypeWrapper<\n\t\tOmit<ReviewRequest, \"requestedReviewer\"> & { requestedReviewer?: Maybe<ResolversTypes[\"RequestedReviewer\"]> }\n\t>;\n\tReviewRequestConnection: ResolverTypeWrapper<ReviewRequestConnection>;\n\tReviewRequestEdge: ResolverTypeWrapper<ReviewRequestEdge>;\n\tReviewRequestRemovedEvent: ResolverTypeWrapper<\n\t\tOmit<ReviewRequestRemovedEvent, \"requestedReviewer\"> & { requestedReviewer?: Maybe<ResolversTypes[\"RequestedReviewer\"]> }\n\t>;\n\tReviewRequestedEvent: ResolverTypeWrapper<\n\t\tOmit<ReviewRequestedEvent, \"requestedReviewer\"> & { requestedReviewer?: Maybe<ResolversTypes[\"RequestedReviewer\"]> }\n\t>;\n\tReviewStatusHovercardContext: ResolverTypeWrapper<ReviewStatusHovercardContext>;\n\tSamlDigestAlgorithm: SamlDigestAlgorithm;\n\tSamlSignatureAlgorithm: SamlSignatureAlgorithm;\n\tSavedReply: ResolverTypeWrapper<SavedReply>;\n\tSavedReplyConnection: ResolverTypeWrapper<SavedReplyConnection>;\n\tSavedReplyEdge: ResolverTypeWrapper<SavedReplyEdge>;\n\tSavedReplyOrder: SavedReplyOrder;\n\tSavedReplyOrderField: SavedReplyOrderField;\n\tSearchResultItem:\n\t\t| ResolversTypes[\"App\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"MarketplaceListing\"]\n\t\t| ResolversTypes[\"Organization\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"Repository\"]\n\t\t| ResolversTypes[\"User\"];\n\tSearchResultItemConnection: ResolverTypeWrapper<\n\t\tOmit<SearchResultItemConnection, \"nodes\"> & { nodes?: Maybe<Array<Maybe<ResolversTypes[\"SearchResultItem\"]>>> }\n\t>;\n\tSearchResultItemEdge: ResolverTypeWrapper<\n\t\tOmit<SearchResultItemEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"SearchResultItem\"]> }\n\t>;\n\tSearchType: SearchType;\n\tSecurityAdvisory: ResolverTypeWrapper<SecurityAdvisory>;\n\tSecurityAdvisoryConnection: ResolverTypeWrapper<SecurityAdvisoryConnection>;\n\tSecurityAdvisoryEcosystem: SecurityAdvisoryEcosystem;\n\tSecurityAdvisoryEdge: ResolverTypeWrapper<SecurityAdvisoryEdge>;\n\tSecurityAdvisoryIdentifier: ResolverTypeWrapper<SecurityAdvisoryIdentifier>;\n\tSecurityAdvisoryIdentifierFilter: SecurityAdvisoryIdentifierFilter;\n\tSecurityAdvisoryIdentifierType: SecurityAdvisoryIdentifierType;\n\tSecurityAdvisoryOrder: SecurityAdvisoryOrder;\n\tSecurityAdvisoryOrderField: SecurityAdvisoryOrderField;\n\tSecurityAdvisoryPackage: ResolverTypeWrapper<SecurityAdvisoryPackage>;\n\tSecurityAdvisoryPackageVersion: ResolverTypeWrapper<SecurityAdvisoryPackageVersion>;\n\tSecurityAdvisoryReference: ResolverTypeWrapper<SecurityAdvisoryReference>;\n\tSecurityAdvisorySeverity: SecurityAdvisorySeverity;\n\tSecurityVulnerability: ResolverTypeWrapper<SecurityVulnerability>;\n\tSecurityVulnerabilityConnection: ResolverTypeWrapper<SecurityVulnerabilityConnection>;\n\tSecurityVulnerabilityEdge: ResolverTypeWrapper<SecurityVulnerabilityEdge>;\n\tSecurityVulnerabilityOrder: SecurityVulnerabilityOrder;\n\tSecurityVulnerabilityOrderField: SecurityVulnerabilityOrderField;\n\tSetEnterpriseIdentityProviderInput: SetEnterpriseIdentityProviderInput;\n\tSetEnterpriseIdentityProviderPayload: ResolverTypeWrapper<SetEnterpriseIdentityProviderPayload>;\n\tSmimeSignature: ResolverTypeWrapper<SmimeSignature>;\n\tSponsor: ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tSponsorable: ResolversTypes[\"Organization\"] | ResolversTypes[\"User\"];\n\tSponsorsListing: ResolverTypeWrapper<SponsorsListing>;\n\tSponsorsTier: ResolverTypeWrapper<SponsorsTier>;\n\tSponsorsTierAdminInfo: ResolverTypeWrapper<SponsorsTierAdminInfo>;\n\tSponsorsTierConnection: ResolverTypeWrapper<SponsorsTierConnection>;\n\tSponsorsTierEdge: ResolverTypeWrapper<SponsorsTierEdge>;\n\tSponsorsTierOrder: SponsorsTierOrder;\n\tSponsorsTierOrderField: SponsorsTierOrderField;\n\tSponsorship: ResolverTypeWrapper<\n\t\tOmit<Sponsorship, \"sponsorEntity\"> & { sponsorEntity?: Maybe<ResolversTypes[\"Sponsor\"]> }\n\t>;\n\tSponsorshipConnection: ResolverTypeWrapper<SponsorshipConnection>;\n\tSponsorshipEdge: ResolverTypeWrapper<SponsorshipEdge>;\n\tSponsorshipOrder: SponsorshipOrder;\n\tSponsorshipOrderField: SponsorshipOrderField;\n\tSponsorshipPrivacy: SponsorshipPrivacy;\n\tStarOrder: StarOrder;\n\tStarOrderField: StarOrderField;\n\tStargazerConnection: ResolverTypeWrapper<StargazerConnection>;\n\tStargazerEdge: ResolverTypeWrapper<StargazerEdge>;\n\tStarrable: ResolversTypes[\"Gist\"] | ResolversTypes[\"Repository\"] | ResolversTypes[\"Topic\"];\n\tStarredRepositoryConnection: ResolverTypeWrapper<StarredRepositoryConnection>;\n\tStarredRepositoryEdge: ResolverTypeWrapper<StarredRepositoryEdge>;\n\tStatus: ResolverTypeWrapper<Status>;\n\tStatusCheckRollup: ResolverTypeWrapper<StatusCheckRollup>;\n\tStatusCheckRollupContext: ResolversTypes[\"StatusContext\"];\n\tStatusCheckRollupContextConnection: ResolverTypeWrapper<\n\t\tOmit<StatusCheckRollupContextConnection, \"nodes\"> & {\n\t\t\tnodes?: Maybe<Array<Maybe<ResolversTypes[\"StatusCheckRollupContext\"]>>>;\n\t\t}\n\t>;\n\tStatusCheckRollupContextEdge: ResolverTypeWrapper<\n\t\tOmit<StatusCheckRollupContextEdge, \"node\"> & { node?: Maybe<ResolversTypes[\"StatusCheckRollupContext\"]> }\n\t>;\n\tStatusContext: ResolverTypeWrapper<StatusContext>;\n\tStatusState: StatusState;\n\tSubmitPullRequestReviewInput: SubmitPullRequestReviewInput;\n\tSubmitPullRequestReviewPayload: ResolverTypeWrapper<SubmitPullRequestReviewPayload>;\n\tSubmodule: ResolverTypeWrapper<Submodule>;\n\tSubmoduleConnection: ResolverTypeWrapper<SubmoduleConnection>;\n\tSubmoduleEdge: ResolverTypeWrapper<SubmoduleEdge>;\n\tSubscribable:\n\t\t| ResolversTypes[\"Commit\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"Repository\"]\n\t\t| ResolversTypes[\"Team\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"];\n\tSubscribedEvent: ResolverTypeWrapper<SubscribedEvent>;\n\tSubscriptionState: SubscriptionState;\n\tSuggestedReviewer: ResolverTypeWrapper<SuggestedReviewer>;\n\tTag: ResolverTypeWrapper<Tag>;\n\tTeam: ResolverTypeWrapper<Team>;\n\tTeamAddMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<TeamAddMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tTeamAddRepositoryAuditEntry: ResolverTypeWrapper<\n\t\tOmit<TeamAddRepositoryAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tTeamAuditEntryData:\n\t\t| ResolversTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"]\n\t\t| ResolversTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tTeamChangeParentTeamAuditEntry: ResolverTypeWrapper<\n\t\tOmit<TeamChangeParentTeamAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tTeamConnection: ResolverTypeWrapper<TeamConnection>;\n\tTeamDiscussion: ResolverTypeWrapper<TeamDiscussion>;\n\tTeamDiscussionComment: ResolverTypeWrapper<TeamDiscussionComment>;\n\tTeamDiscussionCommentConnection: ResolverTypeWrapper<TeamDiscussionCommentConnection>;\n\tTeamDiscussionCommentEdge: ResolverTypeWrapper<TeamDiscussionCommentEdge>;\n\tTeamDiscussionCommentOrder: TeamDiscussionCommentOrder;\n\tTeamDiscussionCommentOrderField: TeamDiscussionCommentOrderField;\n\tTeamDiscussionConnection: ResolverTypeWrapper<TeamDiscussionConnection>;\n\tTeamDiscussionEdge: ResolverTypeWrapper<TeamDiscussionEdge>;\n\tTeamDiscussionOrder: TeamDiscussionOrder;\n\tTeamDiscussionOrderField: TeamDiscussionOrderField;\n\tTeamEdge: ResolverTypeWrapper<TeamEdge>;\n\tTeamMemberConnection: ResolverTypeWrapper<TeamMemberConnection>;\n\tTeamMemberEdge: ResolverTypeWrapper<TeamMemberEdge>;\n\tTeamMemberOrder: TeamMemberOrder;\n\tTeamMemberOrderField: TeamMemberOrderField;\n\tTeamMemberRole: TeamMemberRole;\n\tTeamMembershipType: TeamMembershipType;\n\tTeamOrder: TeamOrder;\n\tTeamOrderField: TeamOrderField;\n\tTeamPrivacy: TeamPrivacy;\n\tTeamRemoveMemberAuditEntry: ResolverTypeWrapper<\n\t\tOmit<TeamRemoveMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tTeamRemoveRepositoryAuditEntry: ResolverTypeWrapper<\n\t\tOmit<TeamRemoveRepositoryAuditEntry, \"actor\"> & { actor?: Maybe<ResolversTypes[\"AuditEntryActor\"]> }\n\t>;\n\tTeamRepositoryConnection: ResolverTypeWrapper<TeamRepositoryConnection>;\n\tTeamRepositoryEdge: ResolverTypeWrapper<TeamRepositoryEdge>;\n\tTeamRepositoryOrder: TeamRepositoryOrder;\n\tTeamRepositoryOrderField: TeamRepositoryOrderField;\n\tTeamRole: TeamRole;\n\tTextMatch: ResolverTypeWrapper<TextMatch>;\n\tTextMatchHighlight: ResolverTypeWrapper<TextMatchHighlight>;\n\tTopic: ResolverTypeWrapper<Topic>;\n\tTopicAuditEntryData: ResolversTypes[\"RepoAddTopicAuditEntry\"] | ResolversTypes[\"RepoRemoveTopicAuditEntry\"];\n\tTopicSuggestionDeclineReason: TopicSuggestionDeclineReason;\n\tTransferIssueInput: TransferIssueInput;\n\tTransferIssuePayload: ResolverTypeWrapper<TransferIssuePayload>;\n\tTransferredEvent: ResolverTypeWrapper<TransferredEvent>;\n\tTree: ResolverTypeWrapper<Tree>;\n\tTreeEntry: ResolverTypeWrapper<TreeEntry>;\n\tURI: ResolverTypeWrapper<Scalars[\"URI\"]>;\n\tUnarchiveRepositoryInput: UnarchiveRepositoryInput;\n\tUnarchiveRepositoryPayload: ResolverTypeWrapper<UnarchiveRepositoryPayload>;\n\tUnassignedEvent: ResolverTypeWrapper<Omit<UnassignedEvent, \"assignee\"> & { assignee?: Maybe<ResolversTypes[\"Assignee\"]> }>;\n\tUnfollowUserInput: UnfollowUserInput;\n\tUnfollowUserPayload: ResolverTypeWrapper<UnfollowUserPayload>;\n\tUniformResourceLocatable:\n\t\t| ResolversTypes[\"Bot\"]\n\t\t| ResolversTypes[\"ClosedEvent\"]\n\t\t| ResolversTypes[\"Commit\"]\n\t\t| ResolversTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversTypes[\"Gist\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"Mannequin\"]\n\t\t| ResolversTypes[\"MergedEvent\"]\n\t\t| ResolversTypes[\"Milestone\"]\n\t\t| ResolversTypes[\"Organization\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestCommit\"]\n\t\t| ResolversTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversTypes[\"Release\"]\n\t\t| ResolversTypes[\"Repository\"]\n\t\t| ResolversTypes[\"RepositoryTopic\"]\n\t\t| ResolversTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"]\n\t\t| ResolversTypes[\"User\"];\n\tUnknownSignature: ResolverTypeWrapper<UnknownSignature>;\n\tUnlabeledEvent: ResolverTypeWrapper<UnlabeledEvent>;\n\tUnlinkRepositoryFromProjectInput: UnlinkRepositoryFromProjectInput;\n\tUnlinkRepositoryFromProjectPayload: ResolverTypeWrapper<UnlinkRepositoryFromProjectPayload>;\n\tUnlockLockableInput: UnlockLockableInput;\n\tUnlockLockablePayload: ResolverTypeWrapper<UnlockLockablePayload>;\n\tUnlockedEvent: ResolverTypeWrapper<UnlockedEvent>;\n\tUnmarkIssueAsDuplicateInput: UnmarkIssueAsDuplicateInput;\n\tUnmarkIssueAsDuplicatePayload: ResolverTypeWrapper<\n\t\tOmit<UnmarkIssueAsDuplicatePayload, \"duplicate\"> & { duplicate?: Maybe<ResolversTypes[\"IssueOrPullRequest\"]> }\n\t>;\n\tUnmarkedAsDuplicateEvent: ResolverTypeWrapper<UnmarkedAsDuplicateEvent>;\n\tUnminimizeCommentInput: UnminimizeCommentInput;\n\tUnminimizeCommentPayload: ResolverTypeWrapper<UnminimizeCommentPayload>;\n\tUnpinnedEvent: ResolverTypeWrapper<UnpinnedEvent>;\n\tUnresolveReviewThreadInput: UnresolveReviewThreadInput;\n\tUnresolveReviewThreadPayload: ResolverTypeWrapper<UnresolveReviewThreadPayload>;\n\tUnsubscribedEvent: ResolverTypeWrapper<UnsubscribedEvent>;\n\tUpdatable:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"Project\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"];\n\tUpdatableComment:\n\t\t| ResolversTypes[\"CommitComment\"]\n\t\t| ResolversTypes[\"GistComment\"]\n\t\t| ResolversTypes[\"Issue\"]\n\t\t| ResolversTypes[\"IssueComment\"]\n\t\t| ResolversTypes[\"PullRequest\"]\n\t\t| ResolversTypes[\"PullRequestReview\"]\n\t\t| ResolversTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversTypes[\"TeamDiscussion\"]\n\t\t| ResolversTypes[\"TeamDiscussionComment\"];\n\tUpdateBranchProtectionRuleInput: UpdateBranchProtectionRuleInput;\n\tUpdateBranchProtectionRulePayload: ResolverTypeWrapper<UpdateBranchProtectionRulePayload>;\n\tUpdateEnterpriseActionExecutionCapabilitySettingInput: UpdateEnterpriseActionExecutionCapabilitySettingInput;\n\tUpdateEnterpriseActionExecutionCapabilitySettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseActionExecutionCapabilitySettingPayload\n\t>;\n\tUpdateEnterpriseAdministratorRoleInput: UpdateEnterpriseAdministratorRoleInput;\n\tUpdateEnterpriseAdministratorRolePayload: ResolverTypeWrapper<UpdateEnterpriseAdministratorRolePayload>;\n\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingInput: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput;\n\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\n\t>;\n\tUpdateEnterpriseDefaultRepositoryPermissionSettingInput: UpdateEnterpriseDefaultRepositoryPermissionSettingInput;\n\tUpdateEnterpriseDefaultRepositoryPermissionSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseDefaultRepositoryPermissionSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput;\n\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanCreateRepositoriesSettingInput: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput;\n\tUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanDeleteIssuesSettingInput: UpdateEnterpriseMembersCanDeleteIssuesSettingInput;\n\tUpdateEnterpriseMembersCanDeleteIssuesSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanDeleteIssuesSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingInput: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput;\n\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingInput: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput;\n\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanMakePurchasesSettingInput: UpdateEnterpriseMembersCanMakePurchasesSettingInput;\n\tUpdateEnterpriseMembersCanMakePurchasesSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanMakePurchasesSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput;\n\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\n\t>;\n\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingInput: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput;\n\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\n\t>;\n\tUpdateEnterpriseOrganizationProjectsSettingInput: UpdateEnterpriseOrganizationProjectsSettingInput;\n\tUpdateEnterpriseOrganizationProjectsSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseOrganizationProjectsSettingPayload\n\t>;\n\tUpdateEnterpriseProfileInput: UpdateEnterpriseProfileInput;\n\tUpdateEnterpriseProfilePayload: ResolverTypeWrapper<UpdateEnterpriseProfilePayload>;\n\tUpdateEnterpriseRepositoryProjectsSettingInput: UpdateEnterpriseRepositoryProjectsSettingInput;\n\tUpdateEnterpriseRepositoryProjectsSettingPayload: ResolverTypeWrapper<UpdateEnterpriseRepositoryProjectsSettingPayload>;\n\tUpdateEnterpriseTeamDiscussionsSettingInput: UpdateEnterpriseTeamDiscussionsSettingInput;\n\tUpdateEnterpriseTeamDiscussionsSettingPayload: ResolverTypeWrapper<UpdateEnterpriseTeamDiscussionsSettingPayload>;\n\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput;\n\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload: ResolverTypeWrapper<\n\t\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\n\t>;\n\tUpdateIpAllowListEnabledSettingInput: UpdateIpAllowListEnabledSettingInput;\n\tUpdateIpAllowListEnabledSettingPayload: ResolverTypeWrapper<\n\t\tOmit<UpdateIpAllowListEnabledSettingPayload, \"owner\"> & { owner?: Maybe<ResolversTypes[\"IpAllowListOwner\"]> }\n\t>;\n\tUpdateIpAllowListEntryInput: UpdateIpAllowListEntryInput;\n\tUpdateIpAllowListEntryPayload: ResolverTypeWrapper<UpdateIpAllowListEntryPayload>;\n\tUpdateIssueCommentInput: UpdateIssueCommentInput;\n\tUpdateIssueCommentPayload: ResolverTypeWrapper<UpdateIssueCommentPayload>;\n\tUpdateIssueInput: UpdateIssueInput;\n\tUpdateIssuePayload: ResolverTypeWrapper<UpdateIssuePayload>;\n\tUpdateProjectCardInput: UpdateProjectCardInput;\n\tUpdateProjectCardPayload: ResolverTypeWrapper<UpdateProjectCardPayload>;\n\tUpdateProjectColumnInput: UpdateProjectColumnInput;\n\tUpdateProjectColumnPayload: ResolverTypeWrapper<UpdateProjectColumnPayload>;\n\tUpdateProjectInput: UpdateProjectInput;\n\tUpdateProjectPayload: ResolverTypeWrapper<UpdateProjectPayload>;\n\tUpdatePullRequestInput: UpdatePullRequestInput;\n\tUpdatePullRequestPayload: ResolverTypeWrapper<UpdatePullRequestPayload>;\n\tUpdatePullRequestReviewCommentInput: UpdatePullRequestReviewCommentInput;\n\tUpdatePullRequestReviewCommentPayload: ResolverTypeWrapper<UpdatePullRequestReviewCommentPayload>;\n\tUpdatePullRequestReviewInput: UpdatePullRequestReviewInput;\n\tUpdatePullRequestReviewPayload: ResolverTypeWrapper<UpdatePullRequestReviewPayload>;\n\tUpdateRefInput: UpdateRefInput;\n\tUpdateRefPayload: ResolverTypeWrapper<UpdateRefPayload>;\n\tUpdateRepositoryInput: UpdateRepositoryInput;\n\tUpdateRepositoryPayload: ResolverTypeWrapper<UpdateRepositoryPayload>;\n\tUpdateSubscriptionInput: UpdateSubscriptionInput;\n\tUpdateSubscriptionPayload: ResolverTypeWrapper<UpdateSubscriptionPayload>;\n\tUpdateTeamDiscussionCommentInput: UpdateTeamDiscussionCommentInput;\n\tUpdateTeamDiscussionCommentPayload: ResolverTypeWrapper<UpdateTeamDiscussionCommentPayload>;\n\tUpdateTeamDiscussionInput: UpdateTeamDiscussionInput;\n\tUpdateTeamDiscussionPayload: ResolverTypeWrapper<UpdateTeamDiscussionPayload>;\n\tUpdateTopicsInput: UpdateTopicsInput;\n\tUpdateTopicsPayload: ResolverTypeWrapper<UpdateTopicsPayload>;\n\tUser: ResolverTypeWrapper<User>;\n\tUserBlockDuration: UserBlockDuration;\n\tUserBlockedEvent: ResolverTypeWrapper<UserBlockedEvent>;\n\tUserConnection: ResolverTypeWrapper<UserConnection>;\n\tUserContentEdit: ResolverTypeWrapper<UserContentEdit>;\n\tUserContentEditConnection: ResolverTypeWrapper<UserContentEditConnection>;\n\tUserContentEditEdge: ResolverTypeWrapper<UserContentEditEdge>;\n\tUserEdge: ResolverTypeWrapper<UserEdge>;\n\tUserStatus: ResolverTypeWrapper<UserStatus>;\n\tUserStatusConnection: ResolverTypeWrapper<UserStatusConnection>;\n\tUserStatusEdge: ResolverTypeWrapper<UserStatusEdge>;\n\tUserStatusOrder: UserStatusOrder;\n\tUserStatusOrderField: UserStatusOrderField;\n\tViewerHovercardContext: ResolverTypeWrapper<ViewerHovercardContext>;\n\tX509Certificate: ResolverTypeWrapper<Scalars[\"X509Certificate\"]>;\n};\n\n/** Mapping between all available schema types and the resolvers parents */\nexport type ResolversParentTypes = {\n\tAcceptEnterpriseAdministratorInvitationInput: AcceptEnterpriseAdministratorInvitationInput;\n\tID: Scalars[\"ID\"];\n\tString: Scalars[\"String\"];\n\tAcceptEnterpriseAdministratorInvitationPayload: AcceptEnterpriseAdministratorInvitationPayload;\n\tAcceptTopicSuggestionInput: AcceptTopicSuggestionInput;\n\tAcceptTopicSuggestionPayload: AcceptTopicSuggestionPayload;\n\tActor:\n\t\t| ResolversParentTypes[\"Bot\"]\n\t\t| ResolversParentTypes[\"EnterpriseUserAccount\"]\n\t\t| ResolversParentTypes[\"Mannequin\"]\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"User\"];\n\tInt: Scalars[\"Int\"];\n\tActorLocation: ActorLocation;\n\tAddAssigneesToAssignableInput: AddAssigneesToAssignableInput;\n\tAddAssigneesToAssignablePayload: AddAssigneesToAssignablePayload;\n\tAddCommentInput: AddCommentInput;\n\tAddCommentPayload: AddCommentPayload;\n\tAddLabelsToLabelableInput: AddLabelsToLabelableInput;\n\tAddLabelsToLabelablePayload: AddLabelsToLabelablePayload;\n\tAddProjectCardInput: AddProjectCardInput;\n\tAddProjectCardPayload: AddProjectCardPayload;\n\tAddProjectColumnInput: AddProjectColumnInput;\n\tAddProjectColumnPayload: AddProjectColumnPayload;\n\tAddPullRequestReviewCommentInput: AddPullRequestReviewCommentInput;\n\tAddPullRequestReviewCommentPayload: AddPullRequestReviewCommentPayload;\n\tAddPullRequestReviewInput: AddPullRequestReviewInput;\n\tAddPullRequestReviewPayload: AddPullRequestReviewPayload;\n\tAddPullRequestReviewThreadInput: AddPullRequestReviewThreadInput;\n\tAddPullRequestReviewThreadPayload: AddPullRequestReviewThreadPayload;\n\tAddReactionInput: AddReactionInput;\n\tAddReactionPayload: AddReactionPayload;\n\tAddStarInput: AddStarInput;\n\tAddStarPayload: AddStarPayload;\n\tAddedToProjectEvent: AddedToProjectEvent;\n\tApp: App;\n\tArchiveRepositoryInput: ArchiveRepositoryInput;\n\tArchiveRepositoryPayload: ArchiveRepositoryPayload;\n\tAssignable: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tAssignedEvent: Omit<AssignedEvent, \"assignee\"> & { assignee?: Maybe<ResolversParentTypes[\"Assignee\"]> };\n\tAssignee:\n\t\t| ResolversParentTypes[\"Bot\"]\n\t\t| ResolversParentTypes[\"Mannequin\"]\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"User\"];\n\tAuditEntry:\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tAuditEntryActor: ResolversParentTypes[\"Bot\"] | ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"User\"];\n\tAuditLogOrder: AuditLogOrder;\n\tAutomaticBaseChangeFailedEvent: AutomaticBaseChangeFailedEvent;\n\tAutomaticBaseChangeSucceededEvent: AutomaticBaseChangeSucceededEvent;\n\tBaseRefChangedEvent: BaseRefChangedEvent;\n\tBaseRefForcePushedEvent: BaseRefForcePushedEvent;\n\tBlame: Blame;\n\tBlameRange: BlameRange;\n\tBlob: Blob;\n\tBoolean: Scalars[\"Boolean\"];\n\tBot: Bot;\n\tBranchProtectionRule: BranchProtectionRule;\n\tBranchProtectionRuleConflict: BranchProtectionRuleConflict;\n\tBranchProtectionRuleConflictConnection: BranchProtectionRuleConflictConnection;\n\tBranchProtectionRuleConflictEdge: BranchProtectionRuleConflictEdge;\n\tBranchProtectionRuleConnection: BranchProtectionRuleConnection;\n\tBranchProtectionRuleEdge: BranchProtectionRuleEdge;\n\tCancelEnterpriseAdminInvitationInput: CancelEnterpriseAdminInvitationInput;\n\tCancelEnterpriseAdminInvitationPayload: CancelEnterpriseAdminInvitationPayload;\n\tChangeUserStatusInput: ChangeUserStatusInput;\n\tChangeUserStatusPayload: ChangeUserStatusPayload;\n\tClearLabelsFromLabelableInput: ClearLabelsFromLabelableInput;\n\tClearLabelsFromLabelablePayload: ClearLabelsFromLabelablePayload;\n\tCloneProjectInput: CloneProjectInput;\n\tCloneProjectPayload: CloneProjectPayload;\n\tCloneTemplateRepositoryInput: CloneTemplateRepositoryInput;\n\tCloneTemplateRepositoryPayload: CloneTemplateRepositoryPayload;\n\tClosable:\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"Milestone\"]\n\t\t| ResolversParentTypes[\"Project\"]\n\t\t| ResolversParentTypes[\"PullRequest\"];\n\tCloseIssueInput: CloseIssueInput;\n\tCloseIssuePayload: CloseIssuePayload;\n\tClosePullRequestInput: ClosePullRequestInput;\n\tClosePullRequestPayload: ClosePullRequestPayload;\n\tClosedEvent: Omit<ClosedEvent, \"closer\"> & { closer?: Maybe<ResolversParentTypes[\"Closer\"]> };\n\tCloser: ResolversParentTypes[\"Commit\"] | ResolversParentTypes[\"PullRequest\"];\n\tCodeOfConduct: CodeOfConduct;\n\tComment:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"];\n\tCommentDeletedEvent: CommentDeletedEvent;\n\tCommit: Commit;\n\tCommitAuthor: CommitAuthor;\n\tCommitComment: CommitComment;\n\tCommitCommentConnection: CommitCommentConnection;\n\tCommitCommentEdge: CommitCommentEdge;\n\tCommitCommentThread: CommitCommentThread;\n\tCommitConnection: CommitConnection;\n\tCommitContributionOrder: CommitContributionOrder;\n\tCommitContributionsByRepository: CommitContributionsByRepository;\n\tCommitEdge: CommitEdge;\n\tCommitHistoryConnection: CommitHistoryConnection;\n\tConnectedEvent: Omit<ConnectedEvent, \"source\" | \"subject\"> & {\n\t\tsource: ResolversParentTypes[\"ReferencedSubject\"];\n\t\tsubject: ResolversParentTypes[\"ReferencedSubject\"];\n\t};\n\tContribution:\n\t\t| ResolversParentTypes[\"CreatedCommitContribution\"]\n\t\t| ResolversParentTypes[\"CreatedIssueContribution\"]\n\t\t| ResolversParentTypes[\"CreatedPullRequestContribution\"]\n\t\t| ResolversParentTypes[\"CreatedPullRequestReviewContribution\"]\n\t\t| ResolversParentTypes[\"CreatedRepositoryContribution\"]\n\t\t| ResolversParentTypes[\"JoinedGitHubContribution\"]\n\t\t| ResolversParentTypes[\"RestrictedContribution\"];\n\tContributionCalendar: ContributionCalendar;\n\tContributionCalendarDay: ContributionCalendarDay;\n\tContributionCalendarMonth: ContributionCalendarMonth;\n\tContributionCalendarWeek: ContributionCalendarWeek;\n\tContributionOrder: ContributionOrder;\n\tContributionsCollection: Omit<\n\t\tContributionsCollection,\n\t\t\"firstIssueContribution\" | \"firstPullRequestContribution\" | \"firstRepositoryContribution\"\n\t> & {\n\t\tfirstIssueContribution?: Maybe<ResolversParentTypes[\"CreatedIssueOrRestrictedContribution\"]>;\n\t\tfirstPullRequestContribution?: Maybe<ResolversParentTypes[\"CreatedPullRequestOrRestrictedContribution\"]>;\n\t\tfirstRepositoryContribution?: Maybe<ResolversParentTypes[\"CreatedRepositoryOrRestrictedContribution\"]>;\n\t};\n\tConvertProjectCardNoteToIssueInput: ConvertProjectCardNoteToIssueInput;\n\tConvertProjectCardNoteToIssuePayload: ConvertProjectCardNoteToIssuePayload;\n\tConvertToDraftEvent: ConvertToDraftEvent;\n\tConvertedNoteToIssueEvent: ConvertedNoteToIssueEvent;\n\tCreateBranchProtectionRuleInput: CreateBranchProtectionRuleInput;\n\tCreateBranchProtectionRulePayload: CreateBranchProtectionRulePayload;\n\tCreateEnterpriseOrganizationInput: CreateEnterpriseOrganizationInput;\n\tCreateEnterpriseOrganizationPayload: CreateEnterpriseOrganizationPayload;\n\tCreateIpAllowListEntryInput: CreateIpAllowListEntryInput;\n\tCreateIpAllowListEntryPayload: CreateIpAllowListEntryPayload;\n\tCreateIssueInput: CreateIssueInput;\n\tCreateIssuePayload: CreateIssuePayload;\n\tCreateProjectInput: CreateProjectInput;\n\tCreateProjectPayload: CreateProjectPayload;\n\tCreatePullRequestInput: CreatePullRequestInput;\n\tCreatePullRequestPayload: CreatePullRequestPayload;\n\tCreateRefInput: CreateRefInput;\n\tCreateRefPayload: CreateRefPayload;\n\tCreateRepositoryInput: CreateRepositoryInput;\n\tCreateRepositoryPayload: CreateRepositoryPayload;\n\tCreateTeamDiscussionCommentInput: CreateTeamDiscussionCommentInput;\n\tCreateTeamDiscussionCommentPayload: CreateTeamDiscussionCommentPayload;\n\tCreateTeamDiscussionInput: CreateTeamDiscussionInput;\n\tCreateTeamDiscussionPayload: CreateTeamDiscussionPayload;\n\tCreatedCommitContribution: CreatedCommitContribution;\n\tCreatedCommitContributionConnection: CreatedCommitContributionConnection;\n\tCreatedCommitContributionEdge: CreatedCommitContributionEdge;\n\tCreatedIssueContribution: CreatedIssueContribution;\n\tCreatedIssueContributionConnection: CreatedIssueContributionConnection;\n\tCreatedIssueContributionEdge: CreatedIssueContributionEdge;\n\tCreatedIssueOrRestrictedContribution:\n\t\t| ResolversParentTypes[\"CreatedIssueContribution\"]\n\t\t| ResolversParentTypes[\"RestrictedContribution\"];\n\tCreatedPullRequestContribution: CreatedPullRequestContribution;\n\tCreatedPullRequestContributionConnection: CreatedPullRequestContributionConnection;\n\tCreatedPullRequestContributionEdge: CreatedPullRequestContributionEdge;\n\tCreatedPullRequestOrRestrictedContribution:\n\t\t| ResolversParentTypes[\"CreatedPullRequestContribution\"]\n\t\t| ResolversParentTypes[\"RestrictedContribution\"];\n\tCreatedPullRequestReviewContribution: CreatedPullRequestReviewContribution;\n\tCreatedPullRequestReviewContributionConnection: CreatedPullRequestReviewContributionConnection;\n\tCreatedPullRequestReviewContributionEdge: CreatedPullRequestReviewContributionEdge;\n\tCreatedRepositoryContribution: CreatedRepositoryContribution;\n\tCreatedRepositoryContributionConnection: CreatedRepositoryContributionConnection;\n\tCreatedRepositoryContributionEdge: CreatedRepositoryContributionEdge;\n\tCreatedRepositoryOrRestrictedContribution:\n\t\t| ResolversParentTypes[\"CreatedRepositoryContribution\"]\n\t\t| ResolversParentTypes[\"RestrictedContribution\"];\n\tCrossReferencedEvent: Omit<CrossReferencedEvent, \"source\" | \"target\"> & {\n\t\tsource: ResolversParentTypes[\"ReferencedSubject\"];\n\t\ttarget: ResolversParentTypes[\"ReferencedSubject\"];\n\t};\n\tDate: Scalars[\"Date\"];\n\tDateTime: Scalars[\"DateTime\"];\n\tDeclineTopicSuggestionInput: DeclineTopicSuggestionInput;\n\tDeclineTopicSuggestionPayload: DeclineTopicSuggestionPayload;\n\tDeletable:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"];\n\tDeleteBranchProtectionRuleInput: DeleteBranchProtectionRuleInput;\n\tDeleteBranchProtectionRulePayload: DeleteBranchProtectionRulePayload;\n\tDeleteDeploymentInput: DeleteDeploymentInput;\n\tDeleteDeploymentPayload: DeleteDeploymentPayload;\n\tDeleteIpAllowListEntryInput: DeleteIpAllowListEntryInput;\n\tDeleteIpAllowListEntryPayload: DeleteIpAllowListEntryPayload;\n\tDeleteIssueCommentInput: DeleteIssueCommentInput;\n\tDeleteIssueCommentPayload: DeleteIssueCommentPayload;\n\tDeleteIssueInput: DeleteIssueInput;\n\tDeleteIssuePayload: DeleteIssuePayload;\n\tDeleteProjectCardInput: DeleteProjectCardInput;\n\tDeleteProjectCardPayload: DeleteProjectCardPayload;\n\tDeleteProjectColumnInput: DeleteProjectColumnInput;\n\tDeleteProjectColumnPayload: DeleteProjectColumnPayload;\n\tDeleteProjectInput: DeleteProjectInput;\n\tDeleteProjectPayload: DeleteProjectPayload;\n\tDeletePullRequestReviewCommentInput: DeletePullRequestReviewCommentInput;\n\tDeletePullRequestReviewCommentPayload: DeletePullRequestReviewCommentPayload;\n\tDeletePullRequestReviewInput: DeletePullRequestReviewInput;\n\tDeletePullRequestReviewPayload: DeletePullRequestReviewPayload;\n\tDeleteRefInput: DeleteRefInput;\n\tDeleteRefPayload: DeleteRefPayload;\n\tDeleteTeamDiscussionCommentInput: DeleteTeamDiscussionCommentInput;\n\tDeleteTeamDiscussionCommentPayload: DeleteTeamDiscussionCommentPayload;\n\tDeleteTeamDiscussionInput: DeleteTeamDiscussionInput;\n\tDeleteTeamDiscussionPayload: DeleteTeamDiscussionPayload;\n\tDemilestonedEvent: Omit<DemilestonedEvent, \"subject\"> & { subject: ResolversParentTypes[\"MilestoneItem\"] };\n\tDeployKey: DeployKey;\n\tDeployKeyConnection: DeployKeyConnection;\n\tDeployKeyEdge: DeployKeyEdge;\n\tDeployedEvent: DeployedEvent;\n\tDeployment: Deployment;\n\tDeploymentConnection: DeploymentConnection;\n\tDeploymentEdge: DeploymentEdge;\n\tDeploymentEnvironmentChangedEvent: DeploymentEnvironmentChangedEvent;\n\tDeploymentOrder: DeploymentOrder;\n\tDeploymentStatus: DeploymentStatus;\n\tDeploymentStatusConnection: DeploymentStatusConnection;\n\tDeploymentStatusEdge: DeploymentStatusEdge;\n\tDisconnectedEvent: Omit<DisconnectedEvent, \"source\" | \"subject\"> & {\n\t\tsource: ResolversParentTypes[\"ReferencedSubject\"];\n\t\tsubject: ResolversParentTypes[\"ReferencedSubject\"];\n\t};\n\tDismissPullRequestReviewInput: DismissPullRequestReviewInput;\n\tDismissPullRequestReviewPayload: DismissPullRequestReviewPayload;\n\tDraftPullRequestReviewComment: DraftPullRequestReviewComment;\n\tDraftPullRequestReviewThread: DraftPullRequestReviewThread;\n\tEnterprise: Enterprise;\n\tEnterpriseAdministratorConnection: EnterpriseAdministratorConnection;\n\tEnterpriseAdministratorEdge: EnterpriseAdministratorEdge;\n\tEnterpriseAdministratorInvitation: EnterpriseAdministratorInvitation;\n\tEnterpriseAdministratorInvitationConnection: EnterpriseAdministratorInvitationConnection;\n\tEnterpriseAdministratorInvitationEdge: EnterpriseAdministratorInvitationEdge;\n\tEnterpriseAdministratorInvitationOrder: EnterpriseAdministratorInvitationOrder;\n\tEnterpriseAuditEntryData:\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"];\n\tEnterpriseBillingInfo: EnterpriseBillingInfo;\n\tFloat: Scalars[\"Float\"];\n\tEnterpriseIdentityProvider: EnterpriseIdentityProvider;\n\tEnterpriseMember: ResolversParentTypes[\"EnterpriseUserAccount\"] | ResolversParentTypes[\"User\"];\n\tEnterpriseMemberConnection: Omit<EnterpriseMemberConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"EnterpriseMember\"]>>>;\n\t};\n\tEnterpriseMemberEdge: Omit<EnterpriseMemberEdge, \"node\"> & { node?: Maybe<ResolversParentTypes[\"EnterpriseMember\"]> };\n\tEnterpriseMemberOrder: EnterpriseMemberOrder;\n\tEnterpriseOrganizationMembershipConnection: EnterpriseOrganizationMembershipConnection;\n\tEnterpriseOrganizationMembershipEdge: EnterpriseOrganizationMembershipEdge;\n\tEnterpriseOutsideCollaboratorConnection: EnterpriseOutsideCollaboratorConnection;\n\tEnterpriseOutsideCollaboratorEdge: EnterpriseOutsideCollaboratorEdge;\n\tEnterpriseOwnerInfo: EnterpriseOwnerInfo;\n\tEnterprisePendingCollaboratorConnection: EnterprisePendingCollaboratorConnection;\n\tEnterprisePendingCollaboratorEdge: EnterprisePendingCollaboratorEdge;\n\tEnterprisePendingMemberInvitationConnection: EnterprisePendingMemberInvitationConnection;\n\tEnterprisePendingMemberInvitationEdge: EnterprisePendingMemberInvitationEdge;\n\tEnterpriseRepositoryInfo: EnterpriseRepositoryInfo;\n\tEnterpriseRepositoryInfoConnection: EnterpriseRepositoryInfoConnection;\n\tEnterpriseRepositoryInfoEdge: EnterpriseRepositoryInfoEdge;\n\tEnterpriseServerInstallation: EnterpriseServerInstallation;\n\tEnterpriseServerInstallationConnection: EnterpriseServerInstallationConnection;\n\tEnterpriseServerInstallationEdge: EnterpriseServerInstallationEdge;\n\tEnterpriseServerInstallationOrder: EnterpriseServerInstallationOrder;\n\tEnterpriseServerUserAccount: EnterpriseServerUserAccount;\n\tEnterpriseServerUserAccountConnection: EnterpriseServerUserAccountConnection;\n\tEnterpriseServerUserAccountEdge: EnterpriseServerUserAccountEdge;\n\tEnterpriseServerUserAccountEmail: EnterpriseServerUserAccountEmail;\n\tEnterpriseServerUserAccountEmailConnection: EnterpriseServerUserAccountEmailConnection;\n\tEnterpriseServerUserAccountEmailEdge: EnterpriseServerUserAccountEmailEdge;\n\tEnterpriseServerUserAccountEmailOrder: EnterpriseServerUserAccountEmailOrder;\n\tEnterpriseServerUserAccountOrder: EnterpriseServerUserAccountOrder;\n\tEnterpriseServerUserAccountsUpload: EnterpriseServerUserAccountsUpload;\n\tEnterpriseServerUserAccountsUploadConnection: EnterpriseServerUserAccountsUploadConnection;\n\tEnterpriseServerUserAccountsUploadEdge: EnterpriseServerUserAccountsUploadEdge;\n\tEnterpriseServerUserAccountsUploadOrder: EnterpriseServerUserAccountsUploadOrder;\n\tEnterpriseUserAccount: EnterpriseUserAccount;\n\tEnterpriseUserAccountConnection: EnterpriseUserAccountConnection;\n\tEnterpriseUserAccountEdge: EnterpriseUserAccountEdge;\n\tExternalIdentity: ExternalIdentity;\n\tExternalIdentityConnection: ExternalIdentityConnection;\n\tExternalIdentityEdge: ExternalIdentityEdge;\n\tExternalIdentitySamlAttributes: ExternalIdentitySamlAttributes;\n\tExternalIdentityScimAttributes: ExternalIdentityScimAttributes;\n\tFollowUserInput: FollowUserInput;\n\tFollowUserPayload: FollowUserPayload;\n\tFollowerConnection: FollowerConnection;\n\tFollowingConnection: FollowingConnection;\n\tFundingLink: FundingLink;\n\tGenericHovercardContext: GenericHovercardContext;\n\tGist: Gist;\n\tGistComment: GistComment;\n\tGistCommentConnection: GistCommentConnection;\n\tGistCommentEdge: GistCommentEdge;\n\tGistConnection: GistConnection;\n\tGistEdge: GistEdge;\n\tGistFile: GistFile;\n\tGistOrder: GistOrder;\n\tGitActor: GitActor;\n\tGitHubMetadata: GitHubMetadata;\n\tGitObject:\n\t\t| ResolversParentTypes[\"Blob\"]\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"Tag\"]\n\t\t| ResolversParentTypes[\"Tree\"];\n\tGitObjectID: Scalars[\"GitObjectID\"];\n\tGitSSHRemote: Scalars[\"GitSSHRemote\"];\n\tGitSignature:\n\t\t| ResolversParentTypes[\"GpgSignature\"]\n\t\t| ResolversParentTypes[\"SmimeSignature\"]\n\t\t| ResolversParentTypes[\"UnknownSignature\"];\n\tGitTimestamp: Scalars[\"GitTimestamp\"];\n\tGpgSignature: GpgSignature;\n\tHTML: Scalars[\"HTML\"];\n\tHeadRefDeletedEvent: HeadRefDeletedEvent;\n\tHeadRefForcePushedEvent: HeadRefForcePushedEvent;\n\tHeadRefRestoredEvent: HeadRefRestoredEvent;\n\tHovercard: Hovercard;\n\tHovercardContext:\n\t\t| ResolversParentTypes[\"GenericHovercardContext\"]\n\t\t| ResolversParentTypes[\"OrganizationTeamsHovercardContext\"]\n\t\t| ResolversParentTypes[\"OrganizationsHovercardContext\"]\n\t\t| ResolversParentTypes[\"ReviewStatusHovercardContext\"]\n\t\t| ResolversParentTypes[\"ViewerHovercardContext\"];\n\tInviteEnterpriseAdminInput: InviteEnterpriseAdminInput;\n\tInviteEnterpriseAdminPayload: InviteEnterpriseAdminPayload;\n\tIpAllowListEntry: Omit<IpAllowListEntry, \"owner\"> & { owner: ResolversParentTypes[\"IpAllowListOwner\"] };\n\tIpAllowListEntryConnection: IpAllowListEntryConnection;\n\tIpAllowListEntryEdge: IpAllowListEntryEdge;\n\tIpAllowListEntryOrder: IpAllowListEntryOrder;\n\tIpAllowListOwner: ResolversParentTypes[\"Enterprise\"] | ResolversParentTypes[\"Organization\"];\n\tIssue: Issue;\n\tIssueComment: IssueComment;\n\tIssueCommentConnection: IssueCommentConnection;\n\tIssueCommentEdge: IssueCommentEdge;\n\tIssueConnection: IssueConnection;\n\tIssueContributionsByRepository: IssueContributionsByRepository;\n\tIssueEdge: IssueEdge;\n\tIssueFilters: IssueFilters;\n\tIssueOrPullRequest: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tIssueOrder: IssueOrder;\n\tIssueTimelineConnection: Omit<IssueTimelineConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"IssueTimelineItem\"]>>>;\n\t};\n\tIssueTimelineItem:\n\t\t| ResolversParentTypes[\"AssignedEvent\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"DemilestonedEvent\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"LabeledEvent\"]\n\t\t| ResolversParentTypes[\"LockedEvent\"]\n\t\t| ResolversParentTypes[\"MilestonedEvent\"]\n\t\t| ResolversParentTypes[\"ReferencedEvent\"]\n\t\t| ResolversParentTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversParentTypes[\"ReopenedEvent\"]\n\t\t| ResolversParentTypes[\"SubscribedEvent\"]\n\t\t| ResolversParentTypes[\"TransferredEvent\"]\n\t\t| ResolversParentTypes[\"UnassignedEvent\"]\n\t\t| ResolversParentTypes[\"UnlabeledEvent\"]\n\t\t| ResolversParentTypes[\"UnlockedEvent\"]\n\t\t| ResolversParentTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversParentTypes[\"UserBlockedEvent\"];\n\tIssueTimelineItemEdge: Omit<IssueTimelineItemEdge, \"node\"> & { node?: Maybe<ResolversParentTypes[\"IssueTimelineItem\"]> };\n\tIssueTimelineItems:\n\t\t| ResolversParentTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversParentTypes[\"AssignedEvent\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversParentTypes[\"ConnectedEvent\"]\n\t\t| ResolversParentTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"DemilestonedEvent\"]\n\t\t| ResolversParentTypes[\"DisconnectedEvent\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"LabeledEvent\"]\n\t\t| ResolversParentTypes[\"LockedEvent\"]\n\t\t| ResolversParentTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"MentionedEvent\"]\n\t\t| ResolversParentTypes[\"MilestonedEvent\"]\n\t\t| ResolversParentTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversParentTypes[\"PinnedEvent\"]\n\t\t| ResolversParentTypes[\"ReferencedEvent\"]\n\t\t| ResolversParentTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversParentTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversParentTypes[\"ReopenedEvent\"]\n\t\t| ResolversParentTypes[\"SubscribedEvent\"]\n\t\t| ResolversParentTypes[\"TransferredEvent\"]\n\t\t| ResolversParentTypes[\"UnassignedEvent\"]\n\t\t| ResolversParentTypes[\"UnlabeledEvent\"]\n\t\t| ResolversParentTypes[\"UnlockedEvent\"]\n\t\t| ResolversParentTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"UnpinnedEvent\"]\n\t\t| ResolversParentTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversParentTypes[\"UserBlockedEvent\"];\n\tIssueTimelineItemsConnection: Omit<IssueTimelineItemsConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"IssueTimelineItems\"]>>>;\n\t};\n\tIssueTimelineItemsEdge: Omit<IssueTimelineItemsEdge, \"node\"> & {\n\t\tnode?: Maybe<ResolversParentTypes[\"IssueTimelineItems\"]>;\n\t};\n\tJoinedGitHubContribution: JoinedGitHubContribution;\n\tLabel: Label;\n\tLabelConnection: LabelConnection;\n\tLabelEdge: LabelEdge;\n\tLabelOrder: LabelOrder;\n\tLabelable: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tLabeledEvent: LabeledEvent;\n\tLanguage: Language;\n\tLanguageConnection: LanguageConnection;\n\tLanguageEdge: LanguageEdge;\n\tLanguageOrder: LanguageOrder;\n\tLicense: License;\n\tLicenseRule: LicenseRule;\n\tLinkRepositoryToProjectInput: LinkRepositoryToProjectInput;\n\tLinkRepositoryToProjectPayload: LinkRepositoryToProjectPayload;\n\tLockLockableInput: LockLockableInput;\n\tLockLockablePayload: LockLockablePayload;\n\tLockable: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tLockedEvent: LockedEvent;\n\tMannequin: Mannequin;\n\tMarkPullRequestReadyForReviewInput: MarkPullRequestReadyForReviewInput;\n\tMarkPullRequestReadyForReviewPayload: MarkPullRequestReadyForReviewPayload;\n\tMarkedAsDuplicateEvent: MarkedAsDuplicateEvent;\n\tMarketplaceCategory: MarketplaceCategory;\n\tMarketplaceListing: MarketplaceListing;\n\tMarketplaceListingConnection: MarketplaceListingConnection;\n\tMarketplaceListingEdge: MarketplaceListingEdge;\n\tMemberStatusable: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"Team\"];\n\tMembersCanDeleteReposClearAuditEntry: Omit<MembersCanDeleteReposClearAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tMembersCanDeleteReposDisableAuditEntry: Omit<MembersCanDeleteReposDisableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tMembersCanDeleteReposEnableAuditEntry: Omit<MembersCanDeleteReposEnableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tMentionedEvent: MentionedEvent;\n\tMergeBranchInput: MergeBranchInput;\n\tMergeBranchPayload: MergeBranchPayload;\n\tMergePullRequestInput: MergePullRequestInput;\n\tMergePullRequestPayload: MergePullRequestPayload;\n\tMergedEvent: MergedEvent;\n\tMilestone: Milestone;\n\tMilestoneConnection: MilestoneConnection;\n\tMilestoneEdge: MilestoneEdge;\n\tMilestoneItem: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tMilestoneOrder: MilestoneOrder;\n\tMilestonedEvent: Omit<MilestonedEvent, \"subject\"> & { subject: ResolversParentTypes[\"MilestoneItem\"] };\n\tMinimizable:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"];\n\tMinimizeCommentInput: MinimizeCommentInput;\n\tMinimizeCommentPayload: MinimizeCommentPayload;\n\tMoveProjectCardInput: MoveProjectCardInput;\n\tMoveProjectCardPayload: MoveProjectCardPayload;\n\tMoveProjectColumnInput: MoveProjectColumnInput;\n\tMoveProjectColumnPayload: MoveProjectColumnPayload;\n\tMovedColumnsInProjectEvent: MovedColumnsInProjectEvent;\n\tMutation: {};\n\tNode:\n\t\t| ResolversParentTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversParentTypes[\"App\"]\n\t\t| ResolversParentTypes[\"AssignedEvent\"]\n\t\t| ResolversParentTypes[\"AutomaticBaseChangeFailedEvent\"]\n\t\t| ResolversParentTypes[\"AutomaticBaseChangeSucceededEvent\"]\n\t\t| ResolversParentTypes[\"BaseRefChangedEvent\"]\n\t\t| ResolversParentTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"Blob\"]\n\t\t| ResolversParentTypes[\"Bot\"]\n\t\t| ResolversParentTypes[\"BranchProtectionRule\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"CodeOfConduct\"]\n\t\t| ResolversParentTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"CommitCommentThread\"]\n\t\t| ResolversParentTypes[\"ConnectedEvent\"]\n\t\t| ResolversParentTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversParentTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"DemilestonedEvent\"]\n\t\t| ResolversParentTypes[\"DeployKey\"]\n\t\t| ResolversParentTypes[\"DeployedEvent\"]\n\t\t| ResolversParentTypes[\"Deployment\"]\n\t\t| ResolversParentTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversParentTypes[\"DeploymentStatus\"]\n\t\t| ResolversParentTypes[\"DisconnectedEvent\"]\n\t\t| ResolversParentTypes[\"Enterprise\"]\n\t\t| ResolversParentTypes[\"EnterpriseAdministratorInvitation\"]\n\t\t| ResolversParentTypes[\"EnterpriseIdentityProvider\"]\n\t\t| ResolversParentTypes[\"EnterpriseRepositoryInfo\"]\n\t\t| ResolversParentTypes[\"EnterpriseServerInstallation\"]\n\t\t| ResolversParentTypes[\"EnterpriseServerUserAccount\"]\n\t\t| ResolversParentTypes[\"EnterpriseServerUserAccountEmail\"]\n\t\t| ResolversParentTypes[\"EnterpriseServerUserAccountsUpload\"]\n\t\t| ResolversParentTypes[\"EnterpriseUserAccount\"]\n\t\t| ResolversParentTypes[\"ExternalIdentity\"]\n\t\t| ResolversParentTypes[\"Gist\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversParentTypes[\"IpAllowListEntry\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"Label\"]\n\t\t| ResolversParentTypes[\"LabeledEvent\"]\n\t\t| ResolversParentTypes[\"Language\"]\n\t\t| ResolversParentTypes[\"License\"]\n\t\t| ResolversParentTypes[\"LockedEvent\"]\n\t\t| ResolversParentTypes[\"Mannequin\"]\n\t\t| ResolversParentTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"MarketplaceCategory\"]\n\t\t| ResolversParentTypes[\"MarketplaceListing\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MentionedEvent\"]\n\t\t| ResolversParentTypes[\"MergedEvent\"]\n\t\t| ResolversParentTypes[\"Milestone\"]\n\t\t| ResolversParentTypes[\"MilestonedEvent\"]\n\t\t| ResolversParentTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"OrganizationIdentityProvider\"]\n\t\t| ResolversParentTypes[\"OrganizationInvitation\"]\n\t\t| ResolversParentTypes[\"Package\"]\n\t\t| ResolversParentTypes[\"PackageFile\"]\n\t\t| ResolversParentTypes[\"PackageTag\"]\n\t\t| ResolversParentTypes[\"PackageVersion\"]\n\t\t| ResolversParentTypes[\"PinnedEvent\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"Project\"]\n\t\t| ResolversParentTypes[\"ProjectCard\"]\n\t\t| ResolversParentTypes[\"ProjectColumn\"]\n\t\t| ResolversParentTypes[\"PublicKey\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestCommit\"]\n\t\t| ResolversParentTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversParentTypes[\"PushAllowance\"]\n\t\t| ResolversParentTypes[\"Reaction\"]\n\t\t| ResolversParentTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversParentTypes[\"Ref\"]\n\t\t| ResolversParentTypes[\"ReferencedEvent\"]\n\t\t| ResolversParentTypes[\"Release\"]\n\t\t| ResolversParentTypes[\"ReleaseAsset\"]\n\t\t| ResolversParentTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversParentTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversParentTypes[\"ReopenedEvent\"]\n\t\t| ResolversParentTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"Repository\"]\n\t\t| ResolversParentTypes[\"RepositoryInvitation\"]\n\t\t| ResolversParentTypes[\"RepositoryTopic\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVulnerabilityAlert\"]\n\t\t| ResolversParentTypes[\"ReviewDismissalAllowance\"]\n\t\t| ResolversParentTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequest\"]\n\t\t| ResolversParentTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversParentTypes[\"SavedReply\"]\n\t\t| ResolversParentTypes[\"SecurityAdvisory\"]\n\t\t| ResolversParentTypes[\"SponsorsListing\"]\n\t\t| ResolversParentTypes[\"SponsorsTier\"]\n\t\t| ResolversParentTypes[\"Sponsorship\"]\n\t\t| ResolversParentTypes[\"Status\"]\n\t\t| ResolversParentTypes[\"StatusCheckRollup\"]\n\t\t| ResolversParentTypes[\"StatusContext\"]\n\t\t| ResolversParentTypes[\"SubscribedEvent\"]\n\t\t| ResolversParentTypes[\"Tag\"]\n\t\t| ResolversParentTypes[\"Team\"]\n\t\t| ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"]\n\t\t| ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"Topic\"]\n\t\t| ResolversParentTypes[\"TransferredEvent\"]\n\t\t| ResolversParentTypes[\"Tree\"]\n\t\t| ResolversParentTypes[\"UnassignedEvent\"]\n\t\t| ResolversParentTypes[\"UnlabeledEvent\"]\n\t\t| ResolversParentTypes[\"UnlockedEvent\"]\n\t\t| ResolversParentTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"UnpinnedEvent\"]\n\t\t| ResolversParentTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversParentTypes[\"User\"]\n\t\t| ResolversParentTypes[\"UserBlockedEvent\"]\n\t\t| ResolversParentTypes[\"UserContentEdit\"]\n\t\t| ResolversParentTypes[\"UserStatus\"];\n\tOauthApplicationAuditEntryData:\n\t\t| ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"];\n\tOauthApplicationCreateAuditEntry: Omit<OauthApplicationCreateAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgAddBillingManagerAuditEntry: Omit<OrgAddBillingManagerAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgAddMemberAuditEntry: Omit<OrgAddMemberAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tOrgBlockUserAuditEntry: Omit<OrgBlockUserAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tOrgConfigDisableCollaboratorsOnlyAuditEntry: Omit<OrgConfigDisableCollaboratorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgConfigEnableCollaboratorsOnlyAuditEntry: Omit<OrgConfigEnableCollaboratorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgCreateAuditEntry: Omit<OrgCreateAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tOrgDisableOauthAppRestrictionsAuditEntry: Omit<OrgDisableOauthAppRestrictionsAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgDisableSamlAuditEntry: Omit<OrgDisableSamlAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgDisableTwoFactorRequirementAuditEntry: Omit<OrgDisableTwoFactorRequirementAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgEnableOauthAppRestrictionsAuditEntry: Omit<OrgEnableOauthAppRestrictionsAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgEnableSamlAuditEntry: Omit<OrgEnableSamlAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgEnableTwoFactorRequirementAuditEntry: Omit<OrgEnableTwoFactorRequirementAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgInviteMemberAuditEntry: Omit<OrgInviteMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgInviteToBusinessAuditEntry: Omit<OrgInviteToBusinessAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgOauthAppAccessApprovedAuditEntry: Omit<OrgOauthAppAccessApprovedAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgOauthAppAccessDeniedAuditEntry: Omit<OrgOauthAppAccessDeniedAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgOauthAppAccessRequestedAuditEntry: Omit<OrgOauthAppAccessRequestedAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgRemoveBillingManagerAuditEntry: Omit<OrgRemoveBillingManagerAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgRemoveMemberAuditEntry: Omit<OrgRemoveMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgRemoveOutsideCollaboratorAuditEntry: Omit<OrgRemoveOutsideCollaboratorAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgRestoreMemberAuditEntry: Omit<OrgRestoreMemberAuditEntry, \"actor\" | \"restoredMemberships\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t\trestoredMemberships?: Maybe<Array<ResolversParentTypes[\"OrgRestoreMemberAuditEntryMembership\"]>>;\n\t};\n\tOrgRestoreMemberAuditEntryMembership:\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"];\n\tOrgRestoreMemberMembershipOrganizationAuditEntryData: OrgRestoreMemberMembershipOrganizationAuditEntryData;\n\tOrgRestoreMemberMembershipRepositoryAuditEntryData: OrgRestoreMemberMembershipRepositoryAuditEntryData;\n\tOrgRestoreMemberMembershipTeamAuditEntryData: OrgRestoreMemberMembershipTeamAuditEntryData;\n\tOrgUnblockUserAuditEntry: Omit<OrgUnblockUserAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgUpdateDefaultRepositoryPermissionAuditEntry: Omit<OrgUpdateDefaultRepositoryPermissionAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgUpdateMemberAuditEntry: Omit<OrgUpdateMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tOrgUpdateMemberRepositoryCreationPermissionAuditEntry: Omit<\n\t\tOrgUpdateMemberRepositoryCreationPermissionAuditEntry,\n\t\t\"actor\"\n\t> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tOrgUpdateMemberRepositoryInvitationPermissionAuditEntry: Omit<\n\t\tOrgUpdateMemberRepositoryInvitationPermissionAuditEntry,\n\t\t\"actor\"\n\t> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tOrganization: Organization;\n\tOrganizationAuditEntry:\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tOrganizationAuditEntryConnection: Omit<OrganizationAuditEntryConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"OrganizationAuditEntry\"]>>>;\n\t};\n\tOrganizationAuditEntryData:\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgBlockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableSamlAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"]\n\t\t| ResolversParentTypes[\"OrgUnblockUserAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tOrganizationAuditEntryEdge: Omit<OrganizationAuditEntryEdge, \"node\"> & {\n\t\tnode?: Maybe<ResolversParentTypes[\"OrganizationAuditEntry\"]>;\n\t};\n\tOrganizationConnection: OrganizationConnection;\n\tOrganizationEdge: OrganizationEdge;\n\tOrganizationIdentityProvider: OrganizationIdentityProvider;\n\tOrganizationInvitation: OrganizationInvitation;\n\tOrganizationInvitationConnection: OrganizationInvitationConnection;\n\tOrganizationInvitationEdge: OrganizationInvitationEdge;\n\tOrganizationMemberConnection: OrganizationMemberConnection;\n\tOrganizationMemberEdge: OrganizationMemberEdge;\n\tOrganizationOrder: OrganizationOrder;\n\tOrganizationTeamsHovercardContext: OrganizationTeamsHovercardContext;\n\tOrganizationsHovercardContext: OrganizationsHovercardContext;\n\tPackage: Package;\n\tPackageConnection: PackageConnection;\n\tPackageEdge: PackageEdge;\n\tPackageFile: PackageFile;\n\tPackageFileConnection: PackageFileConnection;\n\tPackageFileEdge: PackageFileEdge;\n\tPackageFileOrder: PackageFileOrder;\n\tPackageOrder: PackageOrder;\n\tPackageOwner: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"Repository\"] | ResolversParentTypes[\"User\"];\n\tPackageStatistics: PackageStatistics;\n\tPackageTag: PackageTag;\n\tPackageVersion: PackageVersion;\n\tPackageVersionConnection: PackageVersionConnection;\n\tPackageVersionEdge: PackageVersionEdge;\n\tPackageVersionOrder: PackageVersionOrder;\n\tPackageVersionStatistics: PackageVersionStatistics;\n\tPageInfo: PageInfo;\n\tPermissionGranter:\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"Repository\"]\n\t\t| ResolversParentTypes[\"Team\"];\n\tPermissionSource: Omit<PermissionSource, \"source\"> & { source: ResolversParentTypes[\"PermissionGranter\"] };\n\tPinnableItem: ResolversParentTypes[\"Gist\"] | ResolversParentTypes[\"Repository\"];\n\tPinnableItemConnection: Omit<PinnableItemConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"PinnableItem\"]>>>;\n\t};\n\tPinnableItemEdge: Omit<PinnableItemEdge, \"node\"> & { node?: Maybe<ResolversParentTypes[\"PinnableItem\"]> };\n\tPinnedEvent: PinnedEvent;\n\tPreciseDateTime: Scalars[\"PreciseDateTime\"];\n\tPrivateRepositoryForkingDisableAuditEntry: Omit<PrivateRepositoryForkingDisableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tPrivateRepositoryForkingEnableAuditEntry: Omit<PrivateRepositoryForkingEnableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tProfileItemShowcase: ProfileItemShowcase;\n\tProfileOwner: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"User\"];\n\tProject: Project;\n\tProjectCard: Omit<ProjectCard, \"content\"> & { content?: Maybe<ResolversParentTypes[\"ProjectCardItem\"]> };\n\tProjectCardConnection: ProjectCardConnection;\n\tProjectCardEdge: ProjectCardEdge;\n\tProjectCardItem: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tProjectColumn: ProjectColumn;\n\tProjectColumnConnection: ProjectColumnConnection;\n\tProjectColumnEdge: ProjectColumnEdge;\n\tProjectConnection: ProjectConnection;\n\tProjectEdge: ProjectEdge;\n\tProjectOrder: ProjectOrder;\n\tProjectOwner: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"Repository\"] | ResolversParentTypes[\"User\"];\n\tPublicKey: PublicKey;\n\tPublicKeyConnection: PublicKeyConnection;\n\tPublicKeyEdge: PublicKeyEdge;\n\tPullRequest: PullRequest;\n\tPullRequestChangedFile: PullRequestChangedFile;\n\tPullRequestChangedFileConnection: PullRequestChangedFileConnection;\n\tPullRequestChangedFileEdge: PullRequestChangedFileEdge;\n\tPullRequestCommit: PullRequestCommit;\n\tPullRequestCommitCommentThread: PullRequestCommitCommentThread;\n\tPullRequestCommitConnection: PullRequestCommitConnection;\n\tPullRequestCommitEdge: PullRequestCommitEdge;\n\tPullRequestConnection: PullRequestConnection;\n\tPullRequestContributionsByRepository: PullRequestContributionsByRepository;\n\tPullRequestEdge: PullRequestEdge;\n\tPullRequestOrder: PullRequestOrder;\n\tPullRequestReview: PullRequestReview;\n\tPullRequestReviewComment: PullRequestReviewComment;\n\tPullRequestReviewCommentConnection: PullRequestReviewCommentConnection;\n\tPullRequestReviewCommentEdge: PullRequestReviewCommentEdge;\n\tPullRequestReviewConnection: PullRequestReviewConnection;\n\tPullRequestReviewContributionsByRepository: PullRequestReviewContributionsByRepository;\n\tPullRequestReviewEdge: PullRequestReviewEdge;\n\tPullRequestReviewThread: PullRequestReviewThread;\n\tPullRequestReviewThreadConnection: PullRequestReviewThreadConnection;\n\tPullRequestReviewThreadEdge: PullRequestReviewThreadEdge;\n\tPullRequestRevisionMarker: PullRequestRevisionMarker;\n\tPullRequestTimelineConnection: Omit<PullRequestTimelineConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"PullRequestTimelineItem\"]>>>;\n\t};\n\tPullRequestTimelineItem:\n\t\t| ResolversParentTypes[\"AssignedEvent\"]\n\t\t| ResolversParentTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"CommitCommentThread\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"DemilestonedEvent\"]\n\t\t| ResolversParentTypes[\"DeployedEvent\"]\n\t\t| ResolversParentTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"LabeledEvent\"]\n\t\t| ResolversParentTypes[\"LockedEvent\"]\n\t\t| ResolversParentTypes[\"MergedEvent\"]\n\t\t| ResolversParentTypes[\"MilestonedEvent\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversParentTypes[\"ReferencedEvent\"]\n\t\t| ResolversParentTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversParentTypes[\"ReopenedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversParentTypes[\"SubscribedEvent\"]\n\t\t| ResolversParentTypes[\"UnassignedEvent\"]\n\t\t| ResolversParentTypes[\"UnlabeledEvent\"]\n\t\t| ResolversParentTypes[\"UnlockedEvent\"]\n\t\t| ResolversParentTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversParentTypes[\"UserBlockedEvent\"];\n\tPullRequestTimelineItemEdge: Omit<PullRequestTimelineItemEdge, \"node\"> & {\n\t\tnode?: Maybe<ResolversParentTypes[\"PullRequestTimelineItem\"]>;\n\t};\n\tPullRequestTimelineItems:\n\t\t| ResolversParentTypes[\"AddedToProjectEvent\"]\n\t\t| ResolversParentTypes[\"AssignedEvent\"]\n\t\t| ResolversParentTypes[\"AutomaticBaseChangeFailedEvent\"]\n\t\t| ResolversParentTypes[\"AutomaticBaseChangeSucceededEvent\"]\n\t\t| ResolversParentTypes[\"BaseRefChangedEvent\"]\n\t\t| ResolversParentTypes[\"BaseRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"CommentDeletedEvent\"]\n\t\t| ResolversParentTypes[\"ConnectedEvent\"]\n\t\t| ResolversParentTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversParentTypes[\"ConvertedNoteToIssueEvent\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"DemilestonedEvent\"]\n\t\t| ResolversParentTypes[\"DeployedEvent\"]\n\t\t| ResolversParentTypes[\"DeploymentEnvironmentChangedEvent\"]\n\t\t| ResolversParentTypes[\"DisconnectedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefDeletedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefForcePushedEvent\"]\n\t\t| ResolversParentTypes[\"HeadRefRestoredEvent\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"LabeledEvent\"]\n\t\t| ResolversParentTypes[\"LockedEvent\"]\n\t\t| ResolversParentTypes[\"MarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"MentionedEvent\"]\n\t\t| ResolversParentTypes[\"MergedEvent\"]\n\t\t| ResolversParentTypes[\"MilestonedEvent\"]\n\t\t| ResolversParentTypes[\"MovedColumnsInProjectEvent\"]\n\t\t| ResolversParentTypes[\"PinnedEvent\"]\n\t\t| ResolversParentTypes[\"PullRequestCommit\"]\n\t\t| ResolversParentTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewThread\"]\n\t\t| ResolversParentTypes[\"PullRequestRevisionMarker\"]\n\t\t| ResolversParentTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversParentTypes[\"ReferencedEvent\"]\n\t\t| ResolversParentTypes[\"RemovedFromProjectEvent\"]\n\t\t| ResolversParentTypes[\"RenamedTitleEvent\"]\n\t\t| ResolversParentTypes[\"ReopenedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequestRemovedEvent\"]\n\t\t| ResolversParentTypes[\"ReviewRequestedEvent\"]\n\t\t| ResolversParentTypes[\"SubscribedEvent\"]\n\t\t| ResolversParentTypes[\"TransferredEvent\"]\n\t\t| ResolversParentTypes[\"UnassignedEvent\"]\n\t\t| ResolversParentTypes[\"UnlabeledEvent\"]\n\t\t| ResolversParentTypes[\"UnlockedEvent\"]\n\t\t| ResolversParentTypes[\"UnmarkedAsDuplicateEvent\"]\n\t\t| ResolversParentTypes[\"UnpinnedEvent\"]\n\t\t| ResolversParentTypes[\"UnsubscribedEvent\"]\n\t\t| ResolversParentTypes[\"UserBlockedEvent\"];\n\tPullRequestTimelineItemsConnection: Omit<PullRequestTimelineItemsConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"PullRequestTimelineItems\"]>>>;\n\t};\n\tPullRequestTimelineItemsEdge: Omit<PullRequestTimelineItemsEdge, \"node\"> & {\n\t\tnode?: Maybe<ResolversParentTypes[\"PullRequestTimelineItems\"]>;\n\t};\n\tPushAllowance: Omit<PushAllowance, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"PushAllowanceActor\"]> };\n\tPushAllowanceActor: ResolversParentTypes[\"App\"] | ResolversParentTypes[\"Team\"] | ResolversParentTypes[\"User\"];\n\tPushAllowanceConnection: PushAllowanceConnection;\n\tPushAllowanceEdge: PushAllowanceEdge;\n\tQuery: {};\n\tRateLimit: RateLimit;\n\tReactable:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"];\n\tReactingUserConnection: ReactingUserConnection;\n\tReactingUserEdge: ReactingUserEdge;\n\tReaction: Reaction;\n\tReactionConnection: ReactionConnection;\n\tReactionEdge: ReactionEdge;\n\tReactionGroup: ReactionGroup;\n\tReactionOrder: ReactionOrder;\n\tReadyForReviewEvent: ReadyForReviewEvent;\n\tRef: Ref;\n\tRefConnection: RefConnection;\n\tRefEdge: RefEdge;\n\tRefOrder: RefOrder;\n\tReferencedEvent: Omit<ReferencedEvent, \"subject\"> & { subject: ResolversParentTypes[\"ReferencedSubject\"] };\n\tReferencedSubject: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tRegenerateEnterpriseIdentityProviderRecoveryCodesInput: RegenerateEnterpriseIdentityProviderRecoveryCodesInput;\n\tRegenerateEnterpriseIdentityProviderRecoveryCodesPayload: RegenerateEnterpriseIdentityProviderRecoveryCodesPayload;\n\tRelease: Release;\n\tReleaseAsset: ReleaseAsset;\n\tReleaseAssetConnection: ReleaseAssetConnection;\n\tReleaseAssetEdge: ReleaseAssetEdge;\n\tReleaseConnection: ReleaseConnection;\n\tReleaseEdge: ReleaseEdge;\n\tReleaseOrder: ReleaseOrder;\n\tRemoveAssigneesFromAssignableInput: RemoveAssigneesFromAssignableInput;\n\tRemoveAssigneesFromAssignablePayload: RemoveAssigneesFromAssignablePayload;\n\tRemoveEnterpriseAdminInput: RemoveEnterpriseAdminInput;\n\tRemoveEnterpriseAdminPayload: RemoveEnterpriseAdminPayload;\n\tRemoveEnterpriseIdentityProviderInput: RemoveEnterpriseIdentityProviderInput;\n\tRemoveEnterpriseIdentityProviderPayload: RemoveEnterpriseIdentityProviderPayload;\n\tRemoveEnterpriseOrganizationInput: RemoveEnterpriseOrganizationInput;\n\tRemoveEnterpriseOrganizationPayload: RemoveEnterpriseOrganizationPayload;\n\tRemoveLabelsFromLabelableInput: RemoveLabelsFromLabelableInput;\n\tRemoveLabelsFromLabelablePayload: RemoveLabelsFromLabelablePayload;\n\tRemoveOutsideCollaboratorInput: RemoveOutsideCollaboratorInput;\n\tRemoveOutsideCollaboratorPayload: RemoveOutsideCollaboratorPayload;\n\tRemoveReactionInput: RemoveReactionInput;\n\tRemoveReactionPayload: RemoveReactionPayload;\n\tRemoveStarInput: RemoveStarInput;\n\tRemoveStarPayload: RemoveStarPayload;\n\tRemovedFromProjectEvent: RemovedFromProjectEvent;\n\tRenamedTitleEvent: Omit<RenamedTitleEvent, \"subject\"> & { subject: ResolversParentTypes[\"RenamedTitleSubject\"] };\n\tRenamedTitleSubject: ResolversParentTypes[\"Issue\"] | ResolversParentTypes[\"PullRequest\"];\n\tReopenIssueInput: ReopenIssueInput;\n\tReopenIssuePayload: ReopenIssuePayload;\n\tReopenPullRequestInput: ReopenPullRequestInput;\n\tReopenPullRequestPayload: ReopenPullRequestPayload;\n\tReopenedEvent: ReopenedEvent;\n\tRepoAccessAuditEntry: Omit<RepoAccessAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tRepoAddMemberAuditEntry: Omit<RepoAddMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoAddTopicAuditEntry: Omit<RepoAddTopicAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tRepoArchivedAuditEntry: Omit<RepoArchivedAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tRepoChangeMergeSettingAuditEntry: Omit<RepoChangeMergeSettingAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigDisableAnonymousGitAccessAuditEntry: Omit<RepoConfigDisableAnonymousGitAccessAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigDisableCollaboratorsOnlyAuditEntry: Omit<RepoConfigDisableCollaboratorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigDisableContributorsOnlyAuditEntry: Omit<RepoConfigDisableContributorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigDisableSockpuppetDisallowedAuditEntry: Omit<RepoConfigDisableSockpuppetDisallowedAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigEnableAnonymousGitAccessAuditEntry: Omit<RepoConfigEnableAnonymousGitAccessAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigEnableCollaboratorsOnlyAuditEntry: Omit<RepoConfigEnableCollaboratorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigEnableContributorsOnlyAuditEntry: Omit<RepoConfigEnableContributorsOnlyAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigEnableSockpuppetDisallowedAuditEntry: Omit<RepoConfigEnableSockpuppetDisallowedAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigLockAnonymousGitAccessAuditEntry: Omit<RepoConfigLockAnonymousGitAccessAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoConfigUnlockAnonymousGitAccessAuditEntry: Omit<RepoConfigUnlockAnonymousGitAccessAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoCreateAuditEntry: Omit<RepoCreateAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tRepoDestroyAuditEntry: Omit<RepoDestroyAuditEntry, \"actor\"> & { actor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]> };\n\tRepoRemoveMemberAuditEntry: Omit<RepoRemoveMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepoRemoveTopicAuditEntry: Omit<RepoRemoveTopicAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepository: Omit<Repository, \"issueOrPullRequest\"> & {\n\t\tissueOrPullRequest?: Maybe<ResolversParentTypes[\"IssueOrPullRequest\"]>;\n\t};\n\tRepositoryAuditEntryData:\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n\t\t| ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoCreateAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tRepositoryCollaboratorConnection: RepositoryCollaboratorConnection;\n\tRepositoryCollaboratorEdge: RepositoryCollaboratorEdge;\n\tRepositoryConnection: RepositoryConnection;\n\tRepositoryEdge: RepositoryEdge;\n\tRepositoryInfo: ResolversParentTypes[\"Repository\"];\n\tRepositoryInvitation: RepositoryInvitation;\n\tRepositoryInvitationConnection: RepositoryInvitationConnection;\n\tRepositoryInvitationEdge: RepositoryInvitationEdge;\n\tRepositoryInvitationOrder: RepositoryInvitationOrder;\n\tRepositoryNode:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"CommitCommentThread\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestCommitCommentThread\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"RepositoryVulnerabilityAlert\"];\n\tRepositoryOrder: RepositoryOrder;\n\tRepositoryOwner: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"User\"];\n\tRepositoryTopic: RepositoryTopic;\n\tRepositoryTopicConnection: RepositoryTopicConnection;\n\tRepositoryTopicEdge: RepositoryTopicEdge;\n\tRepositoryVisibilityChangeDisableAuditEntry: Omit<RepositoryVisibilityChangeDisableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepositoryVisibilityChangeEnableAuditEntry: Omit<RepositoryVisibilityChangeEnableAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tRepositoryVulnerabilityAlert: RepositoryVulnerabilityAlert;\n\tRepositoryVulnerabilityAlertConnection: RepositoryVulnerabilityAlertConnection;\n\tRepositoryVulnerabilityAlertEdge: RepositoryVulnerabilityAlertEdge;\n\tRequestReviewsInput: RequestReviewsInput;\n\tRequestReviewsPayload: RequestReviewsPayload;\n\tRequestedReviewer: ResolversParentTypes[\"Mannequin\"] | ResolversParentTypes[\"Team\"] | ResolversParentTypes[\"User\"];\n\tResolveReviewThreadInput: ResolveReviewThreadInput;\n\tResolveReviewThreadPayload: ResolveReviewThreadPayload;\n\tRestrictedContribution: RestrictedContribution;\n\tReviewDismissalAllowance: Omit<ReviewDismissalAllowance, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"ReviewDismissalAllowanceActor\"]>;\n\t};\n\tReviewDismissalAllowanceActor: ResolversParentTypes[\"Team\"] | ResolversParentTypes[\"User\"];\n\tReviewDismissalAllowanceConnection: ReviewDismissalAllowanceConnection;\n\tReviewDismissalAllowanceEdge: ReviewDismissalAllowanceEdge;\n\tReviewDismissedEvent: ReviewDismissedEvent;\n\tReviewRequest: Omit<ReviewRequest, \"requestedReviewer\"> & {\n\t\trequestedReviewer?: Maybe<ResolversParentTypes[\"RequestedReviewer\"]>;\n\t};\n\tReviewRequestConnection: ReviewRequestConnection;\n\tReviewRequestEdge: ReviewRequestEdge;\n\tReviewRequestRemovedEvent: Omit<ReviewRequestRemovedEvent, \"requestedReviewer\"> & {\n\t\trequestedReviewer?: Maybe<ResolversParentTypes[\"RequestedReviewer\"]>;\n\t};\n\tReviewRequestedEvent: Omit<ReviewRequestedEvent, \"requestedReviewer\"> & {\n\t\trequestedReviewer?: Maybe<ResolversParentTypes[\"RequestedReviewer\"]>;\n\t};\n\tReviewStatusHovercardContext: ReviewStatusHovercardContext;\n\tSavedReply: SavedReply;\n\tSavedReplyConnection: SavedReplyConnection;\n\tSavedReplyEdge: SavedReplyEdge;\n\tSavedReplyOrder: SavedReplyOrder;\n\tSearchResultItem:\n\t\t| ResolversParentTypes[\"App\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"MarketplaceListing\"]\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"Repository\"]\n\t\t| ResolversParentTypes[\"User\"];\n\tSearchResultItemConnection: Omit<SearchResultItemConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"SearchResultItem\"]>>>;\n\t};\n\tSearchResultItemEdge: Omit<SearchResultItemEdge, \"node\"> & { node?: Maybe<ResolversParentTypes[\"SearchResultItem\"]> };\n\tSecurityAdvisory: SecurityAdvisory;\n\tSecurityAdvisoryConnection: SecurityAdvisoryConnection;\n\tSecurityAdvisoryEdge: SecurityAdvisoryEdge;\n\tSecurityAdvisoryIdentifier: SecurityAdvisoryIdentifier;\n\tSecurityAdvisoryIdentifierFilter: SecurityAdvisoryIdentifierFilter;\n\tSecurityAdvisoryOrder: SecurityAdvisoryOrder;\n\tSecurityAdvisoryPackage: SecurityAdvisoryPackage;\n\tSecurityAdvisoryPackageVersion: SecurityAdvisoryPackageVersion;\n\tSecurityAdvisoryReference: SecurityAdvisoryReference;\n\tSecurityVulnerability: SecurityVulnerability;\n\tSecurityVulnerabilityConnection: SecurityVulnerabilityConnection;\n\tSecurityVulnerabilityEdge: SecurityVulnerabilityEdge;\n\tSecurityVulnerabilityOrder: SecurityVulnerabilityOrder;\n\tSetEnterpriseIdentityProviderInput: SetEnterpriseIdentityProviderInput;\n\tSetEnterpriseIdentityProviderPayload: SetEnterpriseIdentityProviderPayload;\n\tSmimeSignature: SmimeSignature;\n\tSponsor: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"User\"];\n\tSponsorable: ResolversParentTypes[\"Organization\"] | ResolversParentTypes[\"User\"];\n\tSponsorsListing: SponsorsListing;\n\tSponsorsTier: SponsorsTier;\n\tSponsorsTierAdminInfo: SponsorsTierAdminInfo;\n\tSponsorsTierConnection: SponsorsTierConnection;\n\tSponsorsTierEdge: SponsorsTierEdge;\n\tSponsorsTierOrder: SponsorsTierOrder;\n\tSponsorship: Omit<Sponsorship, \"sponsorEntity\"> & { sponsorEntity?: Maybe<ResolversParentTypes[\"Sponsor\"]> };\n\tSponsorshipConnection: SponsorshipConnection;\n\tSponsorshipEdge: SponsorshipEdge;\n\tSponsorshipOrder: SponsorshipOrder;\n\tStarOrder: StarOrder;\n\tStargazerConnection: StargazerConnection;\n\tStargazerEdge: StargazerEdge;\n\tStarrable: ResolversParentTypes[\"Gist\"] | ResolversParentTypes[\"Repository\"] | ResolversParentTypes[\"Topic\"];\n\tStarredRepositoryConnection: StarredRepositoryConnection;\n\tStarredRepositoryEdge: StarredRepositoryEdge;\n\tStatus: Status;\n\tStatusCheckRollup: StatusCheckRollup;\n\tStatusCheckRollupContext: ResolversParentTypes[\"StatusContext\"];\n\tStatusCheckRollupContextConnection: Omit<StatusCheckRollupContextConnection, \"nodes\"> & {\n\t\tnodes?: Maybe<Array<Maybe<ResolversParentTypes[\"StatusCheckRollupContext\"]>>>;\n\t};\n\tStatusCheckRollupContextEdge: Omit<StatusCheckRollupContextEdge, \"node\"> & {\n\t\tnode?: Maybe<ResolversParentTypes[\"StatusCheckRollupContext\"]>;\n\t};\n\tStatusContext: StatusContext;\n\tSubmitPullRequestReviewInput: SubmitPullRequestReviewInput;\n\tSubmitPullRequestReviewPayload: SubmitPullRequestReviewPayload;\n\tSubmodule: Submodule;\n\tSubmoduleConnection: SubmoduleConnection;\n\tSubmoduleEdge: SubmoduleEdge;\n\tSubscribable:\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"Repository\"]\n\t\t| ResolversParentTypes[\"Team\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"];\n\tSubscribedEvent: SubscribedEvent;\n\tSuggestedReviewer: SuggestedReviewer;\n\tTag: Tag;\n\tTeam: Team;\n\tTeamAddMemberAuditEntry: Omit<TeamAddMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tTeamAddRepositoryAuditEntry: Omit<TeamAddRepositoryAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tTeamAuditEntryData:\n\t\t| ResolversParentTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"]\n\t\t| ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n\t\t| ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"];\n\tTeamChangeParentTeamAuditEntry: Omit<TeamChangeParentTeamAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tTeamConnection: TeamConnection;\n\tTeamDiscussion: TeamDiscussion;\n\tTeamDiscussionComment: TeamDiscussionComment;\n\tTeamDiscussionCommentConnection: TeamDiscussionCommentConnection;\n\tTeamDiscussionCommentEdge: TeamDiscussionCommentEdge;\n\tTeamDiscussionCommentOrder: TeamDiscussionCommentOrder;\n\tTeamDiscussionConnection: TeamDiscussionConnection;\n\tTeamDiscussionEdge: TeamDiscussionEdge;\n\tTeamDiscussionOrder: TeamDiscussionOrder;\n\tTeamEdge: TeamEdge;\n\tTeamMemberConnection: TeamMemberConnection;\n\tTeamMemberEdge: TeamMemberEdge;\n\tTeamMemberOrder: TeamMemberOrder;\n\tTeamOrder: TeamOrder;\n\tTeamRemoveMemberAuditEntry: Omit<TeamRemoveMemberAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tTeamRemoveRepositoryAuditEntry: Omit<TeamRemoveRepositoryAuditEntry, \"actor\"> & {\n\t\tactor?: Maybe<ResolversParentTypes[\"AuditEntryActor\"]>;\n\t};\n\tTeamRepositoryConnection: TeamRepositoryConnection;\n\tTeamRepositoryEdge: TeamRepositoryEdge;\n\tTeamRepositoryOrder: TeamRepositoryOrder;\n\tTextMatch: TextMatch;\n\tTextMatchHighlight: TextMatchHighlight;\n\tTopic: Topic;\n\tTopicAuditEntryData: ResolversParentTypes[\"RepoAddTopicAuditEntry\"] | ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"];\n\tTransferIssueInput: TransferIssueInput;\n\tTransferIssuePayload: TransferIssuePayload;\n\tTransferredEvent: TransferredEvent;\n\tTree: Tree;\n\tTreeEntry: TreeEntry;\n\tURI: Scalars[\"URI\"];\n\tUnarchiveRepositoryInput: UnarchiveRepositoryInput;\n\tUnarchiveRepositoryPayload: UnarchiveRepositoryPayload;\n\tUnassignedEvent: Omit<UnassignedEvent, \"assignee\"> & { assignee?: Maybe<ResolversParentTypes[\"Assignee\"]> };\n\tUnfollowUserInput: UnfollowUserInput;\n\tUnfollowUserPayload: UnfollowUserPayload;\n\tUniformResourceLocatable:\n\t\t| ResolversParentTypes[\"Bot\"]\n\t\t| ResolversParentTypes[\"ClosedEvent\"]\n\t\t| ResolversParentTypes[\"Commit\"]\n\t\t| ResolversParentTypes[\"ConvertToDraftEvent\"]\n\t\t| ResolversParentTypes[\"CrossReferencedEvent\"]\n\t\t| ResolversParentTypes[\"Gist\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"Mannequin\"]\n\t\t| ResolversParentTypes[\"MergedEvent\"]\n\t\t| ResolversParentTypes[\"Milestone\"]\n\t\t| ResolversParentTypes[\"Organization\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestCommit\"]\n\t\t| ResolversParentTypes[\"ReadyForReviewEvent\"]\n\t\t| ResolversParentTypes[\"Release\"]\n\t\t| ResolversParentTypes[\"Repository\"]\n\t\t| ResolversParentTypes[\"RepositoryTopic\"]\n\t\t| ResolversParentTypes[\"ReviewDismissedEvent\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"]\n\t\t| ResolversParentTypes[\"User\"];\n\tUnknownSignature: UnknownSignature;\n\tUnlabeledEvent: UnlabeledEvent;\n\tUnlinkRepositoryFromProjectInput: UnlinkRepositoryFromProjectInput;\n\tUnlinkRepositoryFromProjectPayload: UnlinkRepositoryFromProjectPayload;\n\tUnlockLockableInput: UnlockLockableInput;\n\tUnlockLockablePayload: UnlockLockablePayload;\n\tUnlockedEvent: UnlockedEvent;\n\tUnmarkIssueAsDuplicateInput: UnmarkIssueAsDuplicateInput;\n\tUnmarkIssueAsDuplicatePayload: Omit<UnmarkIssueAsDuplicatePayload, \"duplicate\"> & {\n\t\tduplicate?: Maybe<ResolversParentTypes[\"IssueOrPullRequest\"]>;\n\t};\n\tUnmarkedAsDuplicateEvent: UnmarkedAsDuplicateEvent;\n\tUnminimizeCommentInput: UnminimizeCommentInput;\n\tUnminimizeCommentPayload: UnminimizeCommentPayload;\n\tUnpinnedEvent: UnpinnedEvent;\n\tUnresolveReviewThreadInput: UnresolveReviewThreadInput;\n\tUnresolveReviewThreadPayload: UnresolveReviewThreadPayload;\n\tUnsubscribedEvent: UnsubscribedEvent;\n\tUpdatable:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"Project\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"];\n\tUpdatableComment:\n\t\t| ResolversParentTypes[\"CommitComment\"]\n\t\t| ResolversParentTypes[\"GistComment\"]\n\t\t| ResolversParentTypes[\"Issue\"]\n\t\t| ResolversParentTypes[\"IssueComment\"]\n\t\t| ResolversParentTypes[\"PullRequest\"]\n\t\t| ResolversParentTypes[\"PullRequestReview\"]\n\t\t| ResolversParentTypes[\"PullRequestReviewComment\"]\n\t\t| ResolversParentTypes[\"TeamDiscussion\"]\n\t\t| ResolversParentTypes[\"TeamDiscussionComment\"];\n\tUpdateBranchProtectionRuleInput: UpdateBranchProtectionRuleInput;\n\tUpdateBranchProtectionRulePayload: UpdateBranchProtectionRulePayload;\n\tUpdateEnterpriseActionExecutionCapabilitySettingInput: UpdateEnterpriseActionExecutionCapabilitySettingInput;\n\tUpdateEnterpriseActionExecutionCapabilitySettingPayload: UpdateEnterpriseActionExecutionCapabilitySettingPayload;\n\tUpdateEnterpriseAdministratorRoleInput: UpdateEnterpriseAdministratorRoleInput;\n\tUpdateEnterpriseAdministratorRolePayload: UpdateEnterpriseAdministratorRolePayload;\n\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingInput: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput;\n\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload: UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload;\n\tUpdateEnterpriseDefaultRepositoryPermissionSettingInput: UpdateEnterpriseDefaultRepositoryPermissionSettingInput;\n\tUpdateEnterpriseDefaultRepositoryPermissionSettingPayload: UpdateEnterpriseDefaultRepositoryPermissionSettingPayload;\n\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput;\n\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload;\n\tUpdateEnterpriseMembersCanCreateRepositoriesSettingInput: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput;\n\tUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload: UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload;\n\tUpdateEnterpriseMembersCanDeleteIssuesSettingInput: UpdateEnterpriseMembersCanDeleteIssuesSettingInput;\n\tUpdateEnterpriseMembersCanDeleteIssuesSettingPayload: UpdateEnterpriseMembersCanDeleteIssuesSettingPayload;\n\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingInput: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput;\n\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload: UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload;\n\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingInput: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput;\n\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload: UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload;\n\tUpdateEnterpriseMembersCanMakePurchasesSettingInput: UpdateEnterpriseMembersCanMakePurchasesSettingInput;\n\tUpdateEnterpriseMembersCanMakePurchasesSettingPayload: UpdateEnterpriseMembersCanMakePurchasesSettingPayload;\n\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput;\n\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload;\n\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingInput: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput;\n\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload: UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload;\n\tUpdateEnterpriseOrganizationProjectsSettingInput: UpdateEnterpriseOrganizationProjectsSettingInput;\n\tUpdateEnterpriseOrganizationProjectsSettingPayload: UpdateEnterpriseOrganizationProjectsSettingPayload;\n\tUpdateEnterpriseProfileInput: UpdateEnterpriseProfileInput;\n\tUpdateEnterpriseProfilePayload: UpdateEnterpriseProfilePayload;\n\tUpdateEnterpriseRepositoryProjectsSettingInput: UpdateEnterpriseRepositoryProjectsSettingInput;\n\tUpdateEnterpriseRepositoryProjectsSettingPayload: UpdateEnterpriseRepositoryProjectsSettingPayload;\n\tUpdateEnterpriseTeamDiscussionsSettingInput: UpdateEnterpriseTeamDiscussionsSettingInput;\n\tUpdateEnterpriseTeamDiscussionsSettingPayload: UpdateEnterpriseTeamDiscussionsSettingPayload;\n\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput;\n\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload;\n\tUpdateIpAllowListEnabledSettingInput: UpdateIpAllowListEnabledSettingInput;\n\tUpdateIpAllowListEnabledSettingPayload: Omit<UpdateIpAllowListEnabledSettingPayload, \"owner\"> & {\n\t\towner?: Maybe<ResolversParentTypes[\"IpAllowListOwner\"]>;\n\t};\n\tUpdateIpAllowListEntryInput: UpdateIpAllowListEntryInput;\n\tUpdateIpAllowListEntryPayload: UpdateIpAllowListEntryPayload;\n\tUpdateIssueCommentInput: UpdateIssueCommentInput;\n\tUpdateIssueCommentPayload: UpdateIssueCommentPayload;\n\tUpdateIssueInput: UpdateIssueInput;\n\tUpdateIssuePayload: UpdateIssuePayload;\n\tUpdateProjectCardInput: UpdateProjectCardInput;\n\tUpdateProjectCardPayload: UpdateProjectCardPayload;\n\tUpdateProjectColumnInput: UpdateProjectColumnInput;\n\tUpdateProjectColumnPayload: UpdateProjectColumnPayload;\n\tUpdateProjectInput: UpdateProjectInput;\n\tUpdateProjectPayload: UpdateProjectPayload;\n\tUpdatePullRequestInput: UpdatePullRequestInput;\n\tUpdatePullRequestPayload: UpdatePullRequestPayload;\n\tUpdatePullRequestReviewCommentInput: UpdatePullRequestReviewCommentInput;\n\tUpdatePullRequestReviewCommentPayload: UpdatePullRequestReviewCommentPayload;\n\tUpdatePullRequestReviewInput: UpdatePullRequestReviewInput;\n\tUpdatePullRequestReviewPayload: UpdatePullRequestReviewPayload;\n\tUpdateRefInput: UpdateRefInput;\n\tUpdateRefPayload: UpdateRefPayload;\n\tUpdateRepositoryInput: UpdateRepositoryInput;\n\tUpdateRepositoryPayload: UpdateRepositoryPayload;\n\tUpdateSubscriptionInput: UpdateSubscriptionInput;\n\tUpdateSubscriptionPayload: UpdateSubscriptionPayload;\n\tUpdateTeamDiscussionCommentInput: UpdateTeamDiscussionCommentInput;\n\tUpdateTeamDiscussionCommentPayload: UpdateTeamDiscussionCommentPayload;\n\tUpdateTeamDiscussionInput: UpdateTeamDiscussionInput;\n\tUpdateTeamDiscussionPayload: UpdateTeamDiscussionPayload;\n\tUpdateTopicsInput: UpdateTopicsInput;\n\tUpdateTopicsPayload: UpdateTopicsPayload;\n\tUser: User;\n\tUserBlockedEvent: UserBlockedEvent;\n\tUserConnection: UserConnection;\n\tUserContentEdit: UserContentEdit;\n\tUserContentEditConnection: UserContentEditConnection;\n\tUserContentEditEdge: UserContentEditEdge;\n\tUserEdge: UserEdge;\n\tUserStatus: UserStatus;\n\tUserStatusConnection: UserStatusConnection;\n\tUserStatusEdge: UserStatusEdge;\n\tUserStatusOrder: UserStatusOrder;\n\tViewerHovercardContext: ViewerHovercardContext;\n\tX509Certificate: Scalars[\"X509Certificate\"];\n};\n\nexport type AcceptEnterpriseAdministratorInvitationPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AcceptEnterpriseAdministratorInvitationPayload\"] = ResolversParentTypes[\"AcceptEnterpriseAdministratorInvitationPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tinvitation?: Resolver<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AcceptTopicSuggestionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AcceptTopicSuggestionPayload\"] = ResolversParentTypes[\"AcceptTopicSuggestionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ActorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Actor\"] = ResolversParentTypes[\"Actor\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t\"Bot\" | \"EnterpriseUserAccount\" | \"Mannequin\" | \"Organization\" | \"User\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<ActorAvatarUrlArgs, never>>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n};\n\nexport type ActorLocationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ActorLocation\"] = ResolversParentTypes[\"ActorLocation\"]\n> = {\n\tcity?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcountry?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcountryCode?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tregion?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tregionCode?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddAssigneesToAssignablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddAssigneesToAssignablePayload\"] = ResolversParentTypes[\"AddAssigneesToAssignablePayload\"]\n> = {\n\tassignable?: Resolver<Maybe<ResolversTypes[\"Assignable\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddCommentPayload\"] = ResolversParentTypes[\"AddCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcommentEdge?: Resolver<Maybe<ResolversTypes[\"IssueCommentEdge\"]>, ParentType, ContextType>;\n\tsubject?: Resolver<Maybe<ResolversTypes[\"Node\"]>, ParentType, ContextType>;\n\ttimelineEdge?: Resolver<Maybe<ResolversTypes[\"IssueTimelineItemEdge\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddLabelsToLabelablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddLabelsToLabelablePayload\"] = ResolversParentTypes[\"AddLabelsToLabelablePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlabelable?: Resolver<Maybe<ResolversTypes[\"Labelable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddProjectCardPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddProjectCardPayload\"] = ResolversParentTypes[\"AddProjectCardPayload\"]\n> = {\n\tcardEdge?: Resolver<Maybe<ResolversTypes[\"ProjectCardEdge\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tprojectColumn?: Resolver<Maybe<ResolversTypes[\"ProjectColumn\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddProjectColumnPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddProjectColumnPayload\"] = ResolversParentTypes[\"AddProjectColumnPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcolumnEdge?: Resolver<Maybe<ResolversTypes[\"ProjectColumnEdge\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddPullRequestReviewCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddPullRequestReviewCommentPayload\"] = ResolversParentTypes[\"AddPullRequestReviewCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcomment?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewComment\"]>, ParentType, ContextType>;\n\tcommentEdge?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewCommentEdge\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddPullRequestReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddPullRequestReviewPayload\"] = ResolversParentTypes[\"AddPullRequestReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\treviewEdge?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewEdge\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddPullRequestReviewThreadPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddPullRequestReviewThreadPayload\"] = ResolversParentTypes[\"AddPullRequestReviewThreadPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tthread?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewThread\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddReactionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddReactionPayload\"] = ResolversParentTypes[\"AddReactionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\treaction?: Resolver<Maybe<ResolversTypes[\"Reaction\"]>, ParentType, ContextType>;\n\tsubject?: Resolver<Maybe<ResolversTypes[\"Reactable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddStarPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddStarPayload\"] = ResolversParentTypes[\"AddStarPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tstarrable?: Resolver<Maybe<ResolversTypes[\"Starrable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AddedToProjectEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AddedToProjectEvent\"] = ResolversParentTypes[\"AddedToProjectEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AppResolvers<ContextType = any, ParentType extends ResolversParentTypes[\"App\"] = ResolversParentTypes[\"App\"]> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogoBackgroundColor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tlogoUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<AppLogoUrlArgs, never>>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ArchiveRepositoryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ArchiveRepositoryPayload\"] = ResolversParentTypes[\"ArchiveRepositoryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AssignableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Assignable\"] = ResolversParentTypes[\"Assignable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n\tassignees?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<AssignableAssigneesArgs, never>\n\t>;\n};\n\nexport type AssignedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AssignedEvent\"] = ResolversParentTypes[\"AssignedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tassignable?: Resolver<ResolversTypes[\"Assignable\"], ParentType, ContextType>;\n\tassignee?: Resolver<Maybe<ResolversTypes[\"Assignee\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AssigneeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Assignee\"] = ResolversParentTypes[\"Assignee\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Bot\" | \"Mannequin\" | \"Organization\" | \"User\", ParentType, ContextType>;\n};\n\nexport type AuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AuditEntry\"] = ResolversParentTypes[\"AuditEntry\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"MembersCanDeleteReposClearAuditEntry\"\n\t\t| \"MembersCanDeleteReposDisableAuditEntry\"\n\t\t| \"MembersCanDeleteReposEnableAuditEntry\"\n\t\t| \"OauthApplicationCreateAuditEntry\"\n\t\t| \"OrgAddBillingManagerAuditEntry\"\n\t\t| \"OrgAddMemberAuditEntry\"\n\t\t| \"OrgBlockUserAuditEntry\"\n\t\t| \"OrgConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgCreateAuditEntry\"\n\t\t| \"OrgDisableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgDisableSamlAuditEntry\"\n\t\t| \"OrgDisableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgEnableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgEnableSamlAuditEntry\"\n\t\t| \"OrgEnableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgInviteMemberAuditEntry\"\n\t\t| \"OrgInviteToBusinessAuditEntry\"\n\t\t| \"OrgOauthAppAccessApprovedAuditEntry\"\n\t\t| \"OrgOauthAppAccessDeniedAuditEntry\"\n\t\t| \"OrgOauthAppAccessRequestedAuditEntry\"\n\t\t| \"OrgRemoveBillingManagerAuditEntry\"\n\t\t| \"OrgRemoveMemberAuditEntry\"\n\t\t| \"OrgRemoveOutsideCollaboratorAuditEntry\"\n\t\t| \"OrgRestoreMemberAuditEntry\"\n\t\t| \"OrgUnblockUserAuditEntry\"\n\t\t| \"OrgUpdateDefaultRepositoryPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"RepoAccessAuditEntry\"\n\t\t| \"RepoAddMemberAuditEntry\"\n\t\t| \"RepoAddTopicAuditEntry\"\n\t\t| \"RepoArchivedAuditEntry\"\n\t\t| \"RepoChangeMergeSettingAuditEntry\"\n\t\t| \"RepoConfigDisableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigEnableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigLockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigUnlockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoCreateAuditEntry\"\n\t\t| \"RepoDestroyAuditEntry\"\n\t\t| \"RepoRemoveMemberAuditEntry\"\n\t\t| \"RepoRemoveTopicAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeDisableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeEnableAuditEntry\"\n\t\t| \"TeamAddMemberAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamChangeParentTeamAuditEntry\"\n\t\t| \"TeamRemoveMemberAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type AuditEntryActorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AuditEntryActor\"] = ResolversParentTypes[\"AuditEntryActor\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Bot\" | \"Organization\" | \"User\", ParentType, ContextType>;\n};\n\nexport type AutomaticBaseChangeFailedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AutomaticBaseChangeFailedEvent\"] = ResolversParentTypes[\"AutomaticBaseChangeFailedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tnewBase?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\toldBase?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type AutomaticBaseChangeSucceededEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"AutomaticBaseChangeSucceededEvent\"] = ResolversParentTypes[\"AutomaticBaseChangeSucceededEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tnewBase?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\toldBase?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BaseRefChangedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BaseRefChangedEvent\"] = ResolversParentTypes[\"BaseRefChangedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BaseRefForcePushedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BaseRefForcePushedEvent\"] = ResolversParentTypes[\"BaseRefForcePushedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tafterCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tbeforeCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BlameResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Blame\"] = ResolversParentTypes[\"Blame\"]\n> = {\n\tranges?: Resolver<Array<ResolversTypes[\"BlameRange\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BlameRangeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BlameRange\"] = ResolversParentTypes[\"BlameRange\"]\n> = {\n\tage?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tcommit?: Resolver<ResolversTypes[\"Commit\"], ParentType, ContextType>;\n\tendingLine?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tstartingLine?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BlobResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Blob\"] = ResolversParentTypes[\"Blob\"]\n> = {\n\tabbreviatedOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbyteSize?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tcommitResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisBinary?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tisTruncated?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\ttext?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BotResolvers<ContextType = any, ParentType extends ResolversParentTypes[\"Bot\"] = ResolversParentTypes[\"Bot\"]> = {\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<BotAvatarUrlArgs, never>>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRule\"] = ResolversParentTypes[\"BranchProtectionRule\"]\n> = {\n\tbranchProtectionRuleConflicts?: Resolver<\n\t\tResolversTypes[\"BranchProtectionRuleConflictConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<BranchProtectionRuleBranchProtectionRuleConflictsArgs, never>\n\t>;\n\tcreator?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdismissesStaleReviews?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisAdminEnforced?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmatchingRefs?: Resolver<\n\t\tResolversTypes[\"RefConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<BranchProtectionRuleMatchingRefsArgs, never>\n\t>;\n\tpattern?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpushAllowances?: Resolver<\n\t\tResolversTypes[\"PushAllowanceConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<BranchProtectionRulePushAllowancesArgs, never>\n\t>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trequiredApprovingReviewCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trequiredStatusCheckContexts?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"String\"]>>>, ParentType, ContextType>;\n\trequiresApprovingReviews?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trequiresCodeOwnerReviews?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trequiresCommitSignatures?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trequiresStatusChecks?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trequiresStrictStatusChecks?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trestrictsPushes?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\trestrictsReviewDismissals?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\treviewDismissalAllowances?: Resolver<\n\t\tResolversTypes[\"ReviewDismissalAllowanceConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<BranchProtectionRuleReviewDismissalAllowancesArgs, never>\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleConflictResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRuleConflict\"] = ResolversParentTypes[\"BranchProtectionRuleConflict\"]\n> = {\n\tbranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tconflictingBranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleConflictConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRuleConflictConnection\"] = ResolversParentTypes[\"BranchProtectionRuleConflictConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"BranchProtectionRuleConflictEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"BranchProtectionRuleConflict\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleConflictEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRuleConflictEdge\"] = ResolversParentTypes[\"BranchProtectionRuleConflictEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRuleConflict\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRuleConnection\"] = ResolversParentTypes[\"BranchProtectionRuleConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"BranchProtectionRuleEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"BranchProtectionRule\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type BranchProtectionRuleEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"BranchProtectionRuleEdge\"] = ResolversParentTypes[\"BranchProtectionRuleEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CancelEnterpriseAdminInvitationPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CancelEnterpriseAdminInvitationPayload\"] = ResolversParentTypes[\"CancelEnterpriseAdminInvitationPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tinvitation?: Resolver<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ChangeUserStatusPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ChangeUserStatusPayload\"] = ResolversParentTypes[\"ChangeUserStatusPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tstatus?: Resolver<Maybe<ResolversTypes[\"UserStatus\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ClearLabelsFromLabelablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ClearLabelsFromLabelablePayload\"] = ResolversParentTypes[\"ClearLabelsFromLabelablePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlabelable?: Resolver<Maybe<ResolversTypes[\"Labelable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CloneProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CloneProjectPayload\"] = ResolversParentTypes[\"CloneProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tjobStatusId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CloneTemplateRepositoryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CloneTemplateRepositoryPayload\"] = ResolversParentTypes[\"CloneTemplateRepositoryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ClosableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Closable\"] = ResolversParentTypes[\"Closable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"Milestone\" | \"Project\" | \"PullRequest\", ParentType, ContextType>;\n\tclosed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tclosedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n};\n\nexport type CloseIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CloseIssuePayload\"] = ResolversParentTypes[\"CloseIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ClosePullRequestPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ClosePullRequestPayload\"] = ResolversParentTypes[\"ClosePullRequestPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ClosedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ClosedEvent\"] = ResolversParentTypes[\"ClosedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclosable?: Resolver<ResolversTypes[\"Closable\"], ParentType, ContextType>;\n\tcloser?: Resolver<Maybe<ResolversTypes[\"Closer\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CloserResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Closer\"] = ResolversParentTypes[\"Closer\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Commit\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type CodeOfConductResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CodeOfConduct\"] = ResolversParentTypes[\"CodeOfConduct\"]\n> = {\n\tbody?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tkey?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\turl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Comment\"] = ResolversParentTypes[\"Comment\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"GistComment\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommentUserContentEditsArgs, never>\n\t>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type CommentDeletedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommentDeletedEvent\"] = ResolversParentTypes[\"CommentDeletedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Commit\"] = ResolversParentTypes[\"Commit\"]\n> = {\n\tabbreviatedOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tadditions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tassociatedPullRequests?: Resolver<\n\t\tMaybe<ResolversTypes[\"PullRequestConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitAssociatedPullRequestsArgs, \"orderBy\">\n\t>;\n\tauthor?: Resolver<Maybe<ResolversTypes[\"GitActor\"]>, ParentType, ContextType>;\n\tauthoredByCommitter?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tauthoredDate?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tblame?: Resolver<ResolversTypes[\"Blame\"], ParentType, ContextType, RequireFields<CommitBlameArgs, \"path\">>;\n\tchangedFiles?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tcomments?: Resolver<\n\t\tResolversTypes[\"CommitCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitCommentsArgs, never>\n\t>;\n\tcommitResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommittedDate?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcommittedViaWeb?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tcommitter?: Resolver<Maybe<ResolversTypes[\"GitActor\"]>, ParentType, ContextType>;\n\tdeletions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tdeployments?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeploymentConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitDeploymentsArgs, \"orderBy\">\n\t>;\n\thistory?: Resolver<\n\t\tResolversTypes[\"CommitHistoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitHistoryArgs, never>\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tmessageBody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tmessageBodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tmessageHeadline?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tmessageHeadlineHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\tonBehalfOf?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\tparents?: Resolver<ResolversTypes[\"CommitConnection\"], ParentType, ContextType, RequireFields<CommitParentsArgs, never>>;\n\tpushedDate?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tsignature?: Resolver<Maybe<ResolversTypes[\"GitSignature\"]>, ParentType, ContextType>;\n\tstatus?: Resolver<Maybe<ResolversTypes[\"Status\"]>, ParentType, ContextType>;\n\tstatusCheckRollup?: Resolver<Maybe<ResolversTypes[\"StatusCheckRollup\"]>, ParentType, ContextType>;\n\tsubmodules?: Resolver<\n\t\tResolversTypes[\"SubmoduleConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitSubmodulesArgs, never>\n\t>;\n\ttarballUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttree?: Resolver<ResolversTypes[\"Tree\"], ParentType, ContextType>;\n\ttreeResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttreeUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\tzipballUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitComment\"] = ResolversParentTypes[\"CommitComment\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMinimized?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tminimizedReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpath?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tposition?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitCommentReactionsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitCommentUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanMinimize?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitCommentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitCommentConnection\"] = ResolversParentTypes[\"CommitCommentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CommitCommentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CommitComment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitCommentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitCommentEdge\"] = ResolversParentTypes[\"CommitCommentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CommitComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitCommentThreadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitCommentThread\"] = ResolversParentTypes[\"CommitCommentThread\"]\n> = {\n\tcomments?: Resolver<\n\t\tResolversTypes[\"CommitCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitCommentThreadCommentsArgs, never>\n\t>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpath?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tposition?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitConnection\"] = ResolversParentTypes[\"CommitConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CommitEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Commit\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitContributionsByRepositoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitContributionsByRepository\"] = ResolversParentTypes[\"CommitContributionsByRepository\"]\n> = {\n\tcontributions?: Resolver<\n\t\tResolversTypes[\"CreatedCommitContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<CommitContributionsByRepositoryContributionsArgs, \"orderBy\">\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitEdge\"] = ResolversParentTypes[\"CommitEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CommitHistoryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CommitHistoryConnection\"] = ResolversParentTypes[\"CommitHistoryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CommitEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Commit\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ConnectedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ConnectedEvent\"] = ResolversParentTypes[\"ConnectedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisCrossRepository?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tsource?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Contribution\"] = ResolversParentTypes[\"Contribution\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CreatedCommitContribution\"\n\t\t| \"CreatedIssueContribution\"\n\t\t| \"CreatedPullRequestContribution\"\n\t\t| \"CreatedPullRequestReviewContribution\"\n\t\t| \"CreatedRepositoryContribution\"\n\t\t| \"JoinedGitHubContribution\"\n\t\t| \"RestrictedContribution\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n};\n\nexport type ContributionCalendarResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ContributionCalendar\"] = ResolversParentTypes[\"ContributionCalendar\"]\n> = {\n\tcolors?: Resolver<Array<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tisHalloween?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmonths?: Resolver<Array<ResolversTypes[\"ContributionCalendarMonth\"]>, ParentType, ContextType>;\n\ttotalContributions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tweeks?: Resolver<Array<ResolversTypes[\"ContributionCalendarWeek\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ContributionCalendarDayResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ContributionCalendarDay\"] = ResolversParentTypes[\"ContributionCalendarDay\"]\n> = {\n\tcolor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcontributionCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tdate?: Resolver<ResolversTypes[\"Date\"], ParentType, ContextType>;\n\tweekday?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ContributionCalendarMonthResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ContributionCalendarMonth\"] = ResolversParentTypes[\"ContributionCalendarMonth\"]\n> = {\n\tfirstDay?: Resolver<ResolversTypes[\"Date\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\ttotalWeeks?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tyear?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ContributionCalendarWeekResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ContributionCalendarWeek\"] = ResolversParentTypes[\"ContributionCalendarWeek\"]\n> = {\n\tcontributionDays?: Resolver<Array<ResolversTypes[\"ContributionCalendarDay\"]>, ParentType, ContextType>;\n\tfirstDay?: Resolver<ResolversTypes[\"Date\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ContributionsCollectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ContributionsCollection\"] = ResolversParentTypes[\"ContributionsCollection\"]\n> = {\n\tcommitContributionsByRepository?: Resolver<\n\t\tArray<ResolversTypes[\"CommitContributionsByRepository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionCommitContributionsByRepositoryArgs, \"maxRepositories\">\n\t>;\n\tcontributionCalendar?: Resolver<ResolversTypes[\"ContributionCalendar\"], ParentType, ContextType>;\n\tcontributionYears?: Resolver<Array<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdoesEndInCurrentMonth?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tearliestRestrictedContributionDate?: Resolver<Maybe<ResolversTypes[\"Date\"]>, ParentType, ContextType>;\n\tendedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tfirstIssueContribution?: Resolver<Maybe<ResolversTypes[\"CreatedIssueOrRestrictedContribution\"]>, ParentType, ContextType>;\n\tfirstPullRequestContribution?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreatedPullRequestOrRestrictedContribution\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\tfirstRepositoryContribution?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreatedRepositoryOrRestrictedContribution\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\thasActivityInThePast?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasAnyContributions?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasAnyRestrictedContributions?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisSingleDay?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissueContributions?: Resolver<\n\t\tResolversTypes[\"CreatedIssueContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionIssueContributionsArgs, \"excludeFirst\" | \"excludePopular\" | \"orderBy\">\n\t>;\n\tissueContributionsByRepository?: Resolver<\n\t\tArray<ResolversTypes[\"IssueContributionsByRepository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<\n\t\t\tContributionsCollectionIssueContributionsByRepositoryArgs,\n\t\t\t\"maxRepositories\" | \"excludeFirst\" | \"excludePopular\"\n\t\t>\n\t>;\n\tjoinedGitHubContribution?: Resolver<Maybe<ResolversTypes[\"JoinedGitHubContribution\"]>, ParentType, ContextType>;\n\tlatestRestrictedContributionDate?: Resolver<Maybe<ResolversTypes[\"Date\"]>, ParentType, ContextType>;\n\tmostRecentCollectionWithActivity?: Resolver<Maybe<ResolversTypes[\"ContributionsCollection\"]>, ParentType, ContextType>;\n\tmostRecentCollectionWithoutActivity?: Resolver<Maybe<ResolversTypes[\"ContributionsCollection\"]>, ParentType, ContextType>;\n\tpopularIssueContribution?: Resolver<Maybe<ResolversTypes[\"CreatedIssueContribution\"]>, ParentType, ContextType>;\n\tpopularPullRequestContribution?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreatedPullRequestContribution\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\tpullRequestContributions?: Resolver<\n\t\tResolversTypes[\"CreatedPullRequestContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionPullRequestContributionsArgs, \"excludeFirst\" | \"excludePopular\" | \"orderBy\">\n\t>;\n\tpullRequestContributionsByRepository?: Resolver<\n\t\tArray<ResolversTypes[\"PullRequestContributionsByRepository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<\n\t\t\tContributionsCollectionPullRequestContributionsByRepositoryArgs,\n\t\t\t\"maxRepositories\" | \"excludeFirst\" | \"excludePopular\"\n\t\t>\n\t>;\n\tpullRequestReviewContributions?: Resolver<\n\t\tResolversTypes[\"CreatedPullRequestReviewContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionPullRequestReviewContributionsArgs, \"orderBy\">\n\t>;\n\tpullRequestReviewContributionsByRepository?: Resolver<\n\t\tArray<ResolversTypes[\"PullRequestReviewContributionsByRepository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionPullRequestReviewContributionsByRepositoryArgs, \"maxRepositories\">\n\t>;\n\trepositoryContributions?: Resolver<\n\t\tResolversTypes[\"CreatedRepositoryContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionRepositoryContributionsArgs, \"excludeFirst\" | \"orderBy\">\n\t>;\n\trestrictedContributionsCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tstartedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\ttotalCommitContributions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalIssueContributions?: Resolver<\n\t\tResolversTypes[\"Int\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionTotalIssueContributionsArgs, \"excludeFirst\" | \"excludePopular\">\n\t>;\n\ttotalPullRequestContributions?: Resolver<\n\t\tResolversTypes[\"Int\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionTotalPullRequestContributionsArgs, \"excludeFirst\" | \"excludePopular\">\n\t>;\n\ttotalPullRequestReviewContributions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalRepositoriesWithContributedCommits?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalRepositoriesWithContributedIssues?: Resolver<\n\t\tResolversTypes[\"Int\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionTotalRepositoriesWithContributedIssuesArgs, \"excludeFirst\" | \"excludePopular\">\n\t>;\n\ttotalRepositoriesWithContributedPullRequestReviews?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalRepositoriesWithContributedPullRequests?: Resolver<\n\t\tResolversTypes[\"Int\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionTotalRepositoriesWithContributedPullRequestsArgs, \"excludeFirst\" | \"excludePopular\">\n\t>;\n\ttotalRepositoryContributions?: Resolver<\n\t\tResolversTypes[\"Int\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ContributionsCollectionTotalRepositoryContributionsArgs, \"excludeFirst\">\n\t>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ConvertProjectCardNoteToIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ConvertProjectCardNoteToIssuePayload\"] = ResolversParentTypes[\"ConvertProjectCardNoteToIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tprojectCard?: Resolver<Maybe<ResolversTypes[\"ProjectCard\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ConvertToDraftEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ConvertToDraftEvent\"] = ResolversParentTypes[\"ConvertToDraftEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ConvertedNoteToIssueEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ConvertedNoteToIssueEvent\"] = ResolversParentTypes[\"ConvertedNoteToIssueEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateBranchProtectionRulePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateBranchProtectionRulePayload\"] = ResolversParentTypes[\"CreateBranchProtectionRulePayload\"]\n> = {\n\tbranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateEnterpriseOrganizationPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateEnterpriseOrganizationPayload\"] = ResolversParentTypes[\"CreateEnterpriseOrganizationPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateIpAllowListEntryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateIpAllowListEntryPayload\"] = ResolversParentTypes[\"CreateIpAllowListEntryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tipAllowListEntry?: Resolver<Maybe<ResolversTypes[\"IpAllowListEntry\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateIssuePayload\"] = ResolversParentTypes[\"CreateIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateProjectPayload\"] = ResolversParentTypes[\"CreateProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatePullRequestPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatePullRequestPayload\"] = ResolversParentTypes[\"CreatePullRequestPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateRefPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateRefPayload\"] = ResolversParentTypes[\"CreateRefPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateRepositoryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateRepositoryPayload\"] = ResolversParentTypes[\"CreateRepositoryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateTeamDiscussionCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateTeamDiscussionCommentPayload\"] = ResolversParentTypes[\"CreateTeamDiscussionCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamDiscussionComment?: Resolver<Maybe<ResolversTypes[\"TeamDiscussionComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreateTeamDiscussionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreateTeamDiscussionPayload\"] = ResolversParentTypes[\"CreateTeamDiscussionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamDiscussion?: Resolver<Maybe<ResolversTypes[\"TeamDiscussion\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedCommitContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedCommitContribution\"] = ResolversParentTypes[\"CreatedCommitContribution\"]\n> = {\n\tcommitCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedCommitContributionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedCommitContributionConnection\"] = ResolversParentTypes[\"CreatedCommitContributionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedCommitContributionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedCommitContribution\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedCommitContributionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedCommitContributionEdge\"] = ResolversParentTypes[\"CreatedCommitContributionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CreatedCommitContribution\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedIssueContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedIssueContribution\"] = ResolversParentTypes[\"CreatedIssueContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissue?: Resolver<ResolversTypes[\"Issue\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedIssueContributionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedIssueContributionConnection\"] = ResolversParentTypes[\"CreatedIssueContributionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedIssueContributionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedIssueContribution\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedIssueContributionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedIssueContributionEdge\"] = ResolversParentTypes[\"CreatedIssueContributionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CreatedIssueContribution\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedIssueOrRestrictedContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedIssueOrRestrictedContribution\"] = ResolversParentTypes[\"CreatedIssueOrRestrictedContribution\"]\n> = {\n\t__resolveType: TypeResolveFn<\"CreatedIssueContribution\" | \"RestrictedContribution\", ParentType, ContextType>;\n};\n\nexport type CreatedPullRequestContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestContribution\"] = ResolversParentTypes[\"CreatedPullRequestContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedPullRequestContributionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestContributionConnection\"] = ResolversParentTypes[\"CreatedPullRequestContributionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedPullRequestContributionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedPullRequestContribution\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedPullRequestContributionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestContributionEdge\"] = ResolversParentTypes[\"CreatedPullRequestContributionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CreatedPullRequestContribution\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedPullRequestOrRestrictedContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestOrRestrictedContribution\"] = ResolversParentTypes[\"CreatedPullRequestOrRestrictedContribution\"]\n> = {\n\t__resolveType: TypeResolveFn<\"CreatedPullRequestContribution\" | \"RestrictedContribution\", ParentType, ContextType>;\n};\n\nexport type CreatedPullRequestReviewContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestReviewContribution\"] = ResolversParentTypes[\"CreatedPullRequestReviewContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tpullRequestReview?: Resolver<ResolversTypes[\"PullRequestReview\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedPullRequestReviewContributionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestReviewContributionConnection\"] = ResolversParentTypes[\"CreatedPullRequestReviewContributionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedPullRequestReviewContributionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedPullRequestReviewContribution\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedPullRequestReviewContributionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedPullRequestReviewContributionEdge\"] = ResolversParentTypes[\"CreatedPullRequestReviewContributionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CreatedPullRequestReviewContribution\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedRepositoryContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedRepositoryContribution\"] = ResolversParentTypes[\"CreatedRepositoryContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedRepositoryContributionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedRepositoryContributionConnection\"] = ResolversParentTypes[\"CreatedRepositoryContributionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedRepositoryContributionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CreatedRepositoryContribution\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedRepositoryContributionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedRepositoryContributionEdge\"] = ResolversParentTypes[\"CreatedRepositoryContributionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"CreatedRepositoryContribution\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type CreatedRepositoryOrRestrictedContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CreatedRepositoryOrRestrictedContribution\"] = ResolversParentTypes[\"CreatedRepositoryOrRestrictedContribution\"]\n> = {\n\t__resolveType: TypeResolveFn<\"CreatedRepositoryContribution\" | \"RestrictedContribution\", ParentType, ContextType>;\n};\n\nexport type CrossReferencedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"CrossReferencedEvent\"] = ResolversParentTypes[\"CrossReferencedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisCrossRepository?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\treferencedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tsource?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\ttarget?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\twillCloseTarget?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport interface DateScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"Date\"], any> {\n\tname: \"Date\";\n}\n\nexport interface DateTimeScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"DateTime\"], any> {\n\tname: \"DateTime\";\n}\n\nexport type DeclineTopicSuggestionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeclineTopicSuggestionPayload\"] = ResolversParentTypes[\"DeclineTopicSuggestionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeletableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Deletable\"] = ResolversParentTypes[\"Deletable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"GistComment\"\n\t\t| \"IssueComment\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type DeleteBranchProtectionRulePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteBranchProtectionRulePayload\"] = ResolversParentTypes[\"DeleteBranchProtectionRulePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteDeploymentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteDeploymentPayload\"] = ResolversParentTypes[\"DeleteDeploymentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteIpAllowListEntryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteIpAllowListEntryPayload\"] = ResolversParentTypes[\"DeleteIpAllowListEntryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tipAllowListEntry?: Resolver<Maybe<ResolversTypes[\"IpAllowListEntry\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteIssueCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteIssueCommentPayload\"] = ResolversParentTypes[\"DeleteIssueCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteIssuePayload\"] = ResolversParentTypes[\"DeleteIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteProjectCardPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteProjectCardPayload\"] = ResolversParentTypes[\"DeleteProjectCardPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcolumn?: Resolver<Maybe<ResolversTypes[\"ProjectColumn\"]>, ParentType, ContextType>;\n\tdeletedCardId?: Resolver<Maybe<ResolversTypes[\"ID\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteProjectColumnPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteProjectColumnPayload\"] = ResolversParentTypes[\"DeleteProjectColumnPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdeletedColumnId?: Resolver<Maybe<ResolversTypes[\"ID\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteProjectPayload\"] = ResolversParentTypes[\"DeleteProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\towner?: Resolver<Maybe<ResolversTypes[\"ProjectOwner\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeletePullRequestReviewCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeletePullRequestReviewCommentPayload\"] = ResolversParentTypes[\"DeletePullRequestReviewCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeletePullRequestReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeletePullRequestReviewPayload\"] = ResolversParentTypes[\"DeletePullRequestReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteRefPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteRefPayload\"] = ResolversParentTypes[\"DeleteRefPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteTeamDiscussionCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteTeamDiscussionCommentPayload\"] = ResolversParentTypes[\"DeleteTeamDiscussionCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeleteTeamDiscussionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeleteTeamDiscussionPayload\"] = ResolversParentTypes[\"DeleteTeamDiscussionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DemilestonedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DemilestonedEvent\"] = ResolversParentTypes[\"DemilestonedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmilestoneTitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"MilestoneItem\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeployKeyResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeployKey\"] = ResolversParentTypes[\"DeployKey\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tkey?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\treadOnly?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tverified?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeployKeyConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeployKeyConnection\"] = ResolversParentTypes[\"DeployKeyConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"DeployKeyEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"DeployKey\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeployKeyEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeployKeyEdge\"] = ResolversParentTypes[\"DeployKeyEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"DeployKey\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeployedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeployedEvent\"] = ResolversParentTypes[\"DeployedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdeployment?: Resolver<ResolversTypes[\"Deployment\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Deployment\"] = ResolversParentTypes[\"Deployment\"]\n> = {\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcommitOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<ResolversTypes[\"Actor\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenvironment?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlatestEnvironment?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlatestStatus?: Resolver<Maybe<ResolversTypes[\"DeploymentStatus\"]>, ParentType, ContextType>;\n\toriginalEnvironment?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpayload?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tstate?: Resolver<Maybe<ResolversTypes[\"DeploymentState\"]>, ParentType, ContextType>;\n\tstatuses?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeploymentStatusConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<DeploymentStatusesArgs, never>\n\t>;\n\ttask?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentConnection\"] = ResolversParentTypes[\"DeploymentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"DeploymentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Deployment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentEdge\"] = ResolversParentTypes[\"DeploymentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Deployment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentEnvironmentChangedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentEnvironmentChangedEvent\"] = ResolversParentTypes[\"DeploymentEnvironmentChangedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdeploymentStatus?: Resolver<ResolversTypes[\"DeploymentStatus\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentStatusResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentStatus\"] = ResolversParentTypes[\"DeploymentStatus\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<ResolversTypes[\"Actor\"], ParentType, ContextType>;\n\tdeployment?: Resolver<ResolversTypes[\"Deployment\"], ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenvironmentUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"DeploymentStatusState\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentStatusConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentStatusConnection\"] = ResolversParentTypes[\"DeploymentStatusConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"DeploymentStatusEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"DeploymentStatus\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DeploymentStatusEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DeploymentStatusEdge\"] = ResolversParentTypes[\"DeploymentStatusEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"DeploymentStatus\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DisconnectedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DisconnectedEvent\"] = ResolversParentTypes[\"DisconnectedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisCrossRepository?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tsource?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type DismissPullRequestReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"DismissPullRequestReviewPayload\"] = ResolversParentTypes[\"DismissPullRequestReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Enterprise\"] = ResolversParentTypes[\"Enterprise\"]\n> = {\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<EnterpriseAvatarUrlArgs, never>>;\n\tbillingInfo?: Resolver<Maybe<ResolversTypes[\"EnterpriseBillingInfo\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlocation?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tmembers?: Resolver<\n\t\tResolversTypes[\"EnterpriseMemberConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseMembersArgs, \"orderBy\">\n\t>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\torganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOrganizationsArgs, \"orderBy\">\n\t>;\n\townerInfo?: Resolver<Maybe<ResolversTypes[\"EnterpriseOwnerInfo\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserAccounts?: Resolver<\n\t\tResolversTypes[\"EnterpriseUserAccountConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseUserAccountsArgs, never>\n\t>;\n\tviewerIsAdmin?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\twebsiteUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAdministratorConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAdministratorConnection\"] = ResolversParentTypes[\"EnterpriseAdministratorConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseAdministratorEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAdministratorEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAdministratorEdge\"] = ResolversParentTypes[\"EnterpriseAdministratorEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\trole?: Resolver<ResolversTypes[\"EnterpriseAdministratorRole\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAdministratorInvitationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAdministratorInvitation\"] = ResolversParentTypes[\"EnterpriseAdministratorInvitation\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<ResolversTypes[\"Enterprise\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinvitee?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tinviter?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\trole?: Resolver<ResolversTypes[\"EnterpriseAdministratorRole\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAdministratorInvitationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAdministratorInvitationConnection\"] = ResolversParentTypes[\"EnterpriseAdministratorInvitationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAdministratorInvitationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAdministratorInvitationEdge\"] = ResolversParentTypes[\"EnterpriseAdministratorInvitationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseAuditEntryData\"] = ResolversParentTypes[\"EnterpriseAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"MembersCanDeleteReposClearAuditEntry\"\n\t\t| \"MembersCanDeleteReposDisableAuditEntry\"\n\t\t| \"MembersCanDeleteReposEnableAuditEntry\"\n\t\t| \"OrgInviteToBusinessAuditEntry\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeDisableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeEnableAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type EnterpriseBillingInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseBillingInfo\"] = ResolversParentTypes[\"EnterpriseBillingInfo\"]\n> = {\n\tallLicensableUsersCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tassetPacks?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tavailableSeats?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tbandwidthQuota?: Resolver<ResolversTypes[\"Float\"], ParentType, ContextType>;\n\tbandwidthUsage?: Resolver<ResolversTypes[\"Float\"], ParentType, ContextType>;\n\tbandwidthUsagePercentage?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tseats?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tstorageQuota?: Resolver<ResolversTypes[\"Float\"], ParentType, ContextType>;\n\tstorageUsage?: Resolver<ResolversTypes[\"Float\"], ParentType, ContextType>;\n\tstorageUsagePercentage?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalAvailableLicenses?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalLicenses?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseIdentityProviderResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseIdentityProvider\"] = ResolversParentTypes[\"EnterpriseIdentityProvider\"]\n> = {\n\tdigestMethod?: Resolver<Maybe<ResolversTypes[\"SamlDigestAlgorithm\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\texternalIdentities?: Resolver<\n\t\tResolversTypes[\"ExternalIdentityConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseIdentityProviderExternalIdentitiesArgs, never>\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tidpCertificate?: Resolver<Maybe<ResolversTypes[\"X509Certificate\"]>, ParentType, ContextType>;\n\tissuer?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trecoveryCodes?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\tsignatureMethod?: Resolver<Maybe<ResolversTypes[\"SamlSignatureAlgorithm\"]>, ParentType, ContextType>;\n\tssoUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseMemberResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseMember\"] = ResolversParentTypes[\"EnterpriseMember\"]\n> = {\n\t__resolveType: TypeResolveFn<\"EnterpriseUserAccount\" | \"User\", ParentType, ContextType>;\n};\n\nexport type EnterpriseMemberConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseMemberConnection\"] = ResolversParentTypes[\"EnterpriseMemberConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseMemberEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseMember\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseMemberEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseMemberEdge\"] = ResolversParentTypes[\"EnterpriseMemberEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisUnlicensed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseMember\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseOrganizationMembershipConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseOrganizationMembershipConnection\"] = ResolversParentTypes[\"EnterpriseOrganizationMembershipConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseOrganizationMembershipEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Organization\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseOrganizationMembershipEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseOrganizationMembershipEdge\"] = ResolversParentTypes[\"EnterpriseOrganizationMembershipEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\trole?: Resolver<ResolversTypes[\"EnterpriseUserAccountMembershipRole\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseOutsideCollaboratorConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseOutsideCollaboratorConnection\"] = ResolversParentTypes[\"EnterpriseOutsideCollaboratorConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseOutsideCollaboratorEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseOutsideCollaboratorEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseOutsideCollaboratorEdge\"] = ResolversParentTypes[\"EnterpriseOutsideCollaboratorEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisUnlicensed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"EnterpriseRepositoryInfoConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOutsideCollaboratorEdgeRepositoriesArgs, \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseOwnerInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseOwnerInfo\"] = ResolversParentTypes[\"EnterpriseOwnerInfo\"]\n> = {\n\tactionExecutionCapabilitySettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoActionExecutionCapabilitySettingOrganizationsArgs, \"orderBy\">\n\t>;\n\tadmins?: Resolver<\n\t\tResolversTypes[\"EnterpriseAdministratorConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoAdminsArgs, \"orderBy\">\n\t>;\n\taffiliatedUsersWithTwoFactorDisabled?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoAffiliatedUsersWithTwoFactorDisabledArgs, never>\n\t>;\n\taffiliatedUsersWithTwoFactorDisabledExist?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tallowPrivateRepositoryForkingSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tallowPrivateRepositoryForkingSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoAllowPrivateRepositoryForkingSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tdefaultRepositoryPermissionSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseDefaultRepositoryPermissionSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tdefaultRepositoryPermissionSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoDefaultRepositoryPermissionSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tenterpriseServerInstallations?: Resolver<\n\t\tResolversTypes[\"EnterpriseServerInstallationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoEnterpriseServerInstallationsArgs, \"connectedOnly\" | \"orderBy\">\n\t>;\n\tipAllowListEnabledSetting?: Resolver<ResolversTypes[\"IpAllowListEnabledSettingValue\"], ParentType, ContextType>;\n\tipAllowListEntries?: Resolver<\n\t\tResolversTypes[\"IpAllowListEntryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoIpAllowListEntriesArgs, \"orderBy\">\n\t>;\n\tisUpdatingDefaultRepositoryPermission?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisUpdatingTwoFactorRequirement?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmembersCanChangeRepositoryVisibilitySetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanChangeRepositoryVisibilitySettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanChangeRepositoryVisibilitySettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanCreateInternalRepositoriesSetting?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tmembersCanCreatePrivateRepositoriesSetting?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tmembersCanCreatePublicRepositoriesSetting?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tmembersCanCreateRepositoriesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"EnterpriseMembersCanCreateRepositoriesSettingValue\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanCreateRepositoriesSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanCreateRepositoriesSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanDeleteIssuesSetting?: Resolver<ResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"], ParentType, ContextType>;\n\tmembersCanDeleteIssuesSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanDeleteIssuesSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanDeleteRepositoriesSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanDeleteRepositoriesSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanDeleteRepositoriesSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanInviteCollaboratorsSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanInviteCollaboratorsSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanInviteCollaboratorsSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanMakePurchasesSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseMembersCanMakePurchasesSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanUpdateProtectedBranchesSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanUpdateProtectedBranchesSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanUpdateProtectedBranchesSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tmembersCanViewDependencyInsightsSetting?: Resolver<\n\t\tResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"],\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmembersCanViewDependencyInsightsSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoMembersCanViewDependencyInsightsSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\torganizationProjectsSetting?: Resolver<ResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"], ParentType, ContextType>;\n\torganizationProjectsSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoOrganizationProjectsSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\toutsideCollaborators?: Resolver<\n\t\tResolversTypes[\"EnterpriseOutsideCollaboratorConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoOutsideCollaboratorsArgs, \"orderBy\">\n\t>;\n\tpendingAdminInvitations?: Resolver<\n\t\tResolversTypes[\"EnterpriseAdministratorInvitationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoPendingAdminInvitationsArgs, \"orderBy\">\n\t>;\n\tpendingCollaboratorInvitations?: Resolver<\n\t\tResolversTypes[\"RepositoryInvitationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoPendingCollaboratorInvitationsArgs, \"orderBy\">\n\t>;\n\tpendingCollaborators?: Resolver<\n\t\tResolversTypes[\"EnterprisePendingCollaboratorConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoPendingCollaboratorsArgs, \"orderBy\">\n\t>;\n\tpendingMemberInvitations?: Resolver<\n\t\tResolversTypes[\"EnterprisePendingMemberInvitationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoPendingMemberInvitationsArgs, never>\n\t>;\n\trepositoryProjectsSetting?: Resolver<ResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"], ParentType, ContextType>;\n\trepositoryProjectsSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoRepositoryProjectsSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tsamlIdentityProvider?: Resolver<Maybe<ResolversTypes[\"EnterpriseIdentityProvider\"]>, ParentType, ContextType>;\n\tsamlIdentityProviderSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoSamlIdentityProviderSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\tteamDiscussionsSetting?: Resolver<ResolversTypes[\"EnterpriseEnabledDisabledSettingValue\"], ParentType, ContextType>;\n\tteamDiscussionsSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoTeamDiscussionsSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\ttwoFactorRequiredSetting?: Resolver<ResolversTypes[\"EnterpriseEnabledSettingValue\"], ParentType, ContextType>;\n\ttwoFactorRequiredSettingOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseOwnerInfoTwoFactorRequiredSettingOrganizationsArgs, \"value\" | \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterprisePendingCollaboratorConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterprisePendingCollaboratorConnection\"] = ResolversParentTypes[\"EnterprisePendingCollaboratorConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterprisePendingCollaboratorEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterprisePendingCollaboratorEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterprisePendingCollaboratorEdge\"] = ResolversParentTypes[\"EnterprisePendingCollaboratorEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisUnlicensed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"EnterpriseRepositoryInfoConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterprisePendingCollaboratorEdgeRepositoriesArgs, \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterprisePendingMemberInvitationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterprisePendingMemberInvitationConnection\"] = ResolversParentTypes[\"EnterprisePendingMemberInvitationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterprisePendingMemberInvitationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationInvitation\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalUniqueUserCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterprisePendingMemberInvitationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterprisePendingMemberInvitationEdge\"] = ResolversParentTypes[\"EnterprisePendingMemberInvitationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisUnlicensed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"OrganizationInvitation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseRepositoryInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseRepositoryInfo\"] = ResolversParentTypes[\"EnterpriseRepositoryInfo\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisPrivate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnameWithOwner?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseRepositoryInfoConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseRepositoryInfoConnection\"] = ResolversParentTypes[\"EnterpriseRepositoryInfoConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseRepositoryInfoEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseRepositoryInfo\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseRepositoryInfoEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseRepositoryInfoEdge\"] = ResolversParentTypes[\"EnterpriseRepositoryInfoEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseRepositoryInfo\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerInstallationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerInstallation\"] = ResolversParentTypes[\"EnterpriseServerInstallation\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcustomerName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\thostName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisConnected?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuserAccounts?: Resolver<\n\t\tResolversTypes[\"EnterpriseServerUserAccountConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseServerInstallationUserAccountsArgs, \"orderBy\">\n\t>;\n\tuserAccountsUploads?: Resolver<\n\t\tResolversTypes[\"EnterpriseServerUserAccountsUploadConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseServerInstallationUserAccountsUploadsArgs, \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerInstallationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerInstallationConnection\"] = ResolversParentTypes[\"EnterpriseServerInstallationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerInstallationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerInstallation\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerInstallationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerInstallationEdge\"] = ResolversParentTypes[\"EnterpriseServerInstallationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseServerInstallation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccount\"] = ResolversParentTypes[\"EnterpriseServerUserAccount\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\temails?: Resolver<\n\t\tResolversTypes[\"EnterpriseServerUserAccountEmailConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseServerUserAccountEmailsArgs, \"orderBy\">\n\t>;\n\tenterpriseServerInstallation?: Resolver<ResolversTypes[\"EnterpriseServerInstallation\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisSiteAdmin?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tprofileName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tremoteCreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tremoteUserId?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountConnection\"] = ResolversParentTypes[\"EnterpriseServerUserAccountConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccountEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccount\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountEdge\"] = ResolversParentTypes[\"EnterpriseServerUserAccountEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseServerUserAccount\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountEmailResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountEmail\"] = ResolversParentTypes[\"EnterpriseServerUserAccountEmail\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisPrimary?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuserAccount?: Resolver<ResolversTypes[\"EnterpriseServerUserAccount\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountEmailConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountEmailConnection\"] = ResolversParentTypes[\"EnterpriseServerUserAccountEmailConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccountEmailEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccountEmail\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountEmailEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountEmailEdge\"] = ResolversParentTypes[\"EnterpriseServerUserAccountEmailEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseServerUserAccountEmail\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountsUploadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountsUpload\"] = ResolversParentTypes[\"EnterpriseServerUserAccountsUpload\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tenterprise?: Resolver<ResolversTypes[\"Enterprise\"], ParentType, ContextType>;\n\tenterpriseServerInstallation?: Resolver<ResolversTypes[\"EnterpriseServerInstallation\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsyncState?: Resolver<ResolversTypes[\"EnterpriseServerUserAccountsUploadSyncState\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountsUploadConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountsUploadConnection\"] = ResolversParentTypes[\"EnterpriseServerUserAccountsUploadConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccountsUploadEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseServerUserAccountsUpload\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseServerUserAccountsUploadEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseServerUserAccountsUploadEdge\"] = ResolversParentTypes[\"EnterpriseServerUserAccountsUploadEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseServerUserAccountsUpload\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseUserAccountResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseUserAccount\"] = ResolversParentTypes[\"EnterpriseUserAccount\"]\n> = {\n\tavatarUrl?: Resolver<\n\t\tResolversTypes[\"URI\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseUserAccountAvatarUrlArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tenterprise?: Resolver<ResolversTypes[\"Enterprise\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizations?: Resolver<\n\t\tResolversTypes[\"EnterpriseOrganizationMembershipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<EnterpriseUserAccountOrganizationsArgs, \"orderBy\">\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseUserAccountConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseUserAccountConnection\"] = ResolversParentTypes[\"EnterpriseUserAccountConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseUserAccountEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"EnterpriseUserAccount\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type EnterpriseUserAccountEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"EnterpriseUserAccountEdge\"] = ResolversParentTypes[\"EnterpriseUserAccountEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"EnterpriseUserAccount\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ExternalIdentityResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ExternalIdentity\"] = ResolversParentTypes[\"ExternalIdentity\"]\n> = {\n\tguid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\torganizationInvitation?: Resolver<Maybe<ResolversTypes[\"OrganizationInvitation\"]>, ParentType, ContextType>;\n\tsamlIdentity?: Resolver<Maybe<ResolversTypes[\"ExternalIdentitySamlAttributes\"]>, ParentType, ContextType>;\n\tscimIdentity?: Resolver<Maybe<ResolversTypes[\"ExternalIdentityScimAttributes\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ExternalIdentityConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ExternalIdentityConnection\"] = ResolversParentTypes[\"ExternalIdentityConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ExternalIdentityEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ExternalIdentity\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ExternalIdentityEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ExternalIdentityEdge\"] = ResolversParentTypes[\"ExternalIdentityEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ExternalIdentity\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ExternalIdentitySamlAttributesResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ExternalIdentitySamlAttributes\"] = ResolversParentTypes[\"ExternalIdentitySamlAttributes\"]\n> = {\n\tnameId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ExternalIdentityScimAttributesResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ExternalIdentityScimAttributes\"] = ResolversParentTypes[\"ExternalIdentityScimAttributes\"]\n> = {\n\tusername?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type FollowUserPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"FollowUserPayload\"] = ResolversParentTypes[\"FollowUserPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type FollowerConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"FollowerConnection\"] = ResolversParentTypes[\"FollowerConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type FollowingConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"FollowingConnection\"] = ResolversParentTypes[\"FollowingConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type FundingLinkResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"FundingLink\"] = ResolversParentTypes[\"FundingLink\"]\n> = {\n\tplatform?: Resolver<ResolversTypes[\"FundingPlatform\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GenericHovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GenericHovercardContext\"] = ResolversParentTypes[\"GenericHovercardContext\"]\n> = {\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Gist\"] = ResolversParentTypes[\"Gist\"]\n> = {\n\tcomments?: Resolver<\n\t\tResolversTypes[\"GistCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<GistCommentsArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tfiles?: Resolver<\n\t\tMaybe<Array<Maybe<ResolversTypes[\"GistFile\"]>>>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<GistFilesArgs, \"limit\">\n\t>;\n\tforks?: Resolver<ResolversTypes[\"GistConnection\"], ParentType, ContextType, RequireFields<GistForksArgs, never>>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisFork?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPublic?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\towner?: Resolver<Maybe<ResolversTypes[\"RepositoryOwner\"]>, ParentType, ContextType>;\n\tpushedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstargazers?: Resolver<\n\t\tResolversTypes[\"StargazerConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<GistStargazersArgs, never>\n\t>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerHasStarred?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistComment\"] = ResolversParentTypes[\"GistComment\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tgist?: Resolver<ResolversTypes[\"Gist\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMinimized?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tminimizedReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<GistCommentUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanMinimize?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistCommentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistCommentConnection\"] = ResolversParentTypes[\"GistCommentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"GistCommentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"GistComment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistCommentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistCommentEdge\"] = ResolversParentTypes[\"GistCommentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"GistComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistConnection\"] = ResolversParentTypes[\"GistConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"GistEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Gist\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistEdge\"] = ResolversParentTypes[\"GistEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Gist\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GistFileResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GistFile\"] = ResolversParentTypes[\"GistFile\"]\n> = {\n\tencodedName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tencoding?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\textension?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tisImage?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisTruncated?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlanguage?: Resolver<Maybe<ResolversTypes[\"Language\"]>, ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tsize?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\ttext?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType, RequireFields<GistFileTextArgs, never>>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GitActorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GitActor\"] = ResolversParentTypes[\"GitActor\"]\n> = {\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<GitActorAvatarUrlArgs, never>>;\n\tdate?: Resolver<Maybe<ResolversTypes[\"GitTimestamp\"]>, ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GitHubMetadataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GitHubMetadata\"] = ResolversParentTypes[\"GitHubMetadata\"]\n> = {\n\tgitHubServicesSha?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\tgitIpAddresses?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\thookIpAddresses?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\timporterIpAddresses?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\tisPasswordAuthenticationVerifiable?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tpagesIpAddresses?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type GitObjectResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GitObject\"] = ResolversParentTypes[\"GitObject\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Blob\" | \"Commit\" | \"Tag\" | \"Tree\", ParentType, ContextType>;\n\tabbreviatedOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcommitResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n};\n\nexport interface GitObjectIdScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"GitObjectID\"], any> {\n\tname: \"GitObjectID\";\n}\n\nexport interface GitSshRemoteScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"GitSSHRemote\"], any> {\n\tname: \"GitSSHRemote\";\n}\n\nexport type GitSignatureResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GitSignature\"] = ResolversParentTypes[\"GitSignature\"]\n> = {\n\t__resolveType: TypeResolveFn<\"GpgSignature\" | \"SmimeSignature\" | \"UnknownSignature\", ParentType, ContextType>;\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisValid?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tpayload?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsignature?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsigner?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"GitSignatureState\"], ParentType, ContextType>;\n\twasSignedByGitHub?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport interface GitTimestampScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"GitTimestamp\"], any> {\n\tname: \"GitTimestamp\";\n}\n\nexport type GpgSignatureResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"GpgSignature\"] = ResolversParentTypes[\"GpgSignature\"]\n> = {\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisValid?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tkeyId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpayload?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsignature?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsigner?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"GitSignatureState\"], ParentType, ContextType>;\n\twasSignedByGitHub?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport interface HtmlScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"HTML\"], any> {\n\tname: \"HTML\";\n}\n\nexport type HeadRefDeletedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"HeadRefDeletedEvent\"] = ResolversParentTypes[\"HeadRefDeletedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\theadRef?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\theadRefName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type HeadRefForcePushedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"HeadRefForcePushedEvent\"] = ResolversParentTypes[\"HeadRefForcePushedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tafterCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tbeforeCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type HeadRefRestoredEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"HeadRefRestoredEvent\"] = ResolversParentTypes[\"HeadRefRestoredEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type HovercardResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Hovercard\"] = ResolversParentTypes[\"Hovercard\"]\n> = {\n\tcontexts?: Resolver<Array<ResolversTypes[\"HovercardContext\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type HovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"HovercardContext\"] = ResolversParentTypes[\"HovercardContext\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"GenericHovercardContext\"\n\t\t| \"OrganizationTeamsHovercardContext\"\n\t\t| \"OrganizationsHovercardContext\"\n\t\t| \"ReviewStatusHovercardContext\"\n\t\t| \"ViewerHovercardContext\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n};\n\nexport type InviteEnterpriseAdminPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"InviteEnterpriseAdminPayload\"] = ResolversParentTypes[\"InviteEnterpriseAdminPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tinvitation?: Resolver<Maybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IpAllowListEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IpAllowListEntry\"] = ResolversParentTypes[\"IpAllowListEntry\"]\n> = {\n\tallowListValue?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisActive?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\towner?: Resolver<ResolversTypes[\"IpAllowListOwner\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IpAllowListEntryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IpAllowListEntryConnection\"] = ResolversParentTypes[\"IpAllowListEntryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IpAllowListEntryEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IpAllowListEntry\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IpAllowListEntryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IpAllowListEntryEdge\"] = ResolversParentTypes[\"IpAllowListEntryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"IpAllowListEntry\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IpAllowListOwnerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IpAllowListOwner\"] = ResolversParentTypes[\"IpAllowListOwner\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Enterprise\" | \"Organization\", ParentType, ContextType>;\n};\n\nexport type IssueResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Issue\"] = ResolversParentTypes[\"Issue\"]\n> = {\n\tactiveLockReason?: Resolver<Maybe<ResolversTypes[\"LockReason\"]>, ParentType, ContextType>;\n\tassignees?: Resolver<ResolversTypes[\"UserConnection\"], ParentType, ContextType, RequireFields<IssueAssigneesArgs, never>>;\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tclosed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tclosedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tcomments?: Resolver<\n\t\tResolversTypes[\"IssueCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueCommentsArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\thovercard?: Resolver<\n\t\tResolversTypes[\"Hovercard\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueHovercardArgs, \"includeNotificationContexts\">\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlabels?: Resolver<\n\t\tMaybe<ResolversTypes[\"LabelConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueLabelsArgs, \"orderBy\">\n\t>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tlocked?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmilestone?: Resolver<Maybe<ResolversTypes[\"Milestone\"]>, ParentType, ContextType>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tparticipants?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueParticipantsArgs, never>\n\t>;\n\tprojectCards?: Resolver<\n\t\tResolversTypes[\"ProjectCardConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueProjectCardsArgs, \"archivedStates\">\n\t>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueReactionsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"IssueState\"], ParentType, ContextType>;\n\ttimeline?: Resolver<\n\t\tResolversTypes[\"IssueTimelineConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueTimelineArgs, never>\n\t>;\n\ttimelineItems?: Resolver<\n\t\tResolversTypes[\"IssueTimelineItemsConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueTimelineItemsArgs, never>\n\t>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueUserContentEditsArgs, never>\n\t>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueComment\"] = ResolversParentTypes[\"IssueComment\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMinimized?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissue?: Resolver<ResolversTypes[\"Issue\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tminimizedReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueCommentReactionsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueCommentUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanMinimize?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueCommentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueCommentConnection\"] = ResolversParentTypes[\"IssueCommentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueCommentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueComment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueCommentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueCommentEdge\"] = ResolversParentTypes[\"IssueCommentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"IssueComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueConnection\"] = ResolversParentTypes[\"IssueConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Issue\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueContributionsByRepositoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueContributionsByRepository\"] = ResolversParentTypes[\"IssueContributionsByRepository\"]\n> = {\n\tcontributions?: Resolver<\n\t\tResolversTypes[\"CreatedIssueContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<IssueContributionsByRepositoryContributionsArgs, \"orderBy\">\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueEdge\"] = ResolversParentTypes[\"IssueEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueOrPullRequestResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueOrPullRequest\"] = ResolversParentTypes[\"IssueOrPullRequest\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type IssueTimelineConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineConnection\"] = ResolversParentTypes[\"IssueTimelineConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItemEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItem\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueTimelineItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineItem\"] = ResolversParentTypes[\"IssueTimelineItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"AssignedEvent\"\n\t\t| \"ClosedEvent\"\n\t\t| \"Commit\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"DemilestonedEvent\"\n\t\t| \"IssueComment\"\n\t\t| \"LabeledEvent\"\n\t\t| \"LockedEvent\"\n\t\t| \"MilestonedEvent\"\n\t\t| \"ReferencedEvent\"\n\t\t| \"RenamedTitleEvent\"\n\t\t| \"ReopenedEvent\"\n\t\t| \"SubscribedEvent\"\n\t\t| \"TransferredEvent\"\n\t\t| \"UnassignedEvent\"\n\t\t| \"UnlabeledEvent\"\n\t\t| \"UnlockedEvent\"\n\t\t| \"UnsubscribedEvent\"\n\t\t| \"UserBlockedEvent\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type IssueTimelineItemEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineItemEdge\"] = ResolversParentTypes[\"IssueTimelineItemEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"IssueTimelineItem\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueTimelineItemsResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineItems\"] = ResolversParentTypes[\"IssueTimelineItems\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"AddedToProjectEvent\"\n\t\t| \"AssignedEvent\"\n\t\t| \"ClosedEvent\"\n\t\t| \"CommentDeletedEvent\"\n\t\t| \"ConnectedEvent\"\n\t\t| \"ConvertedNoteToIssueEvent\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"DemilestonedEvent\"\n\t\t| \"DisconnectedEvent\"\n\t\t| \"IssueComment\"\n\t\t| \"LabeledEvent\"\n\t\t| \"LockedEvent\"\n\t\t| \"MarkedAsDuplicateEvent\"\n\t\t| \"MentionedEvent\"\n\t\t| \"MilestonedEvent\"\n\t\t| \"MovedColumnsInProjectEvent\"\n\t\t| \"PinnedEvent\"\n\t\t| \"ReferencedEvent\"\n\t\t| \"RemovedFromProjectEvent\"\n\t\t| \"RenamedTitleEvent\"\n\t\t| \"ReopenedEvent\"\n\t\t| \"SubscribedEvent\"\n\t\t| \"TransferredEvent\"\n\t\t| \"UnassignedEvent\"\n\t\t| \"UnlabeledEvent\"\n\t\t| \"UnlockedEvent\"\n\t\t| \"UnmarkedAsDuplicateEvent\"\n\t\t| \"UnpinnedEvent\"\n\t\t| \"UnsubscribedEvent\"\n\t\t| \"UserBlockedEvent\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type IssueTimelineItemsConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineItemsConnection\"] = ResolversParentTypes[\"IssueTimelineItemsConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItemsEdge\"]>>>, ParentType, ContextType>;\n\tfilteredCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"IssueTimelineItems\"]>>>, ParentType, ContextType>;\n\tpageCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type IssueTimelineItemsEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"IssueTimelineItemsEdge\"] = ResolversParentTypes[\"IssueTimelineItemsEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"IssueTimelineItems\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type JoinedGitHubContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"JoinedGitHubContribution\"] = ResolversParentTypes[\"JoinedGitHubContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LabelResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Label\"] = ResolversParentTypes[\"Label\"]\n> = {\n\tcolor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisDefault?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissues?: Resolver<ResolversTypes[\"IssueConnection\"], ParentType, ContextType, RequireFields<LabelIssuesArgs, never>>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpullRequests?: Resolver<\n\t\tResolversTypes[\"PullRequestConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<LabelPullRequestsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LabelConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LabelConnection\"] = ResolversParentTypes[\"LabelConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"LabelEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Label\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LabelEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LabelEdge\"] = ResolversParentTypes[\"LabelEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Label\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LabelableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Labelable\"] = ResolversParentTypes[\"Labelable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n\tlabels?: Resolver<\n\t\tMaybe<ResolversTypes[\"LabelConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<LabelableLabelsArgs, \"orderBy\">\n\t>;\n};\n\nexport type LabeledEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LabeledEvent\"] = ResolversParentTypes[\"LabeledEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlabel?: Resolver<ResolversTypes[\"Label\"], ParentType, ContextType>;\n\tlabelable?: Resolver<ResolversTypes[\"Labelable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LanguageResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Language\"] = ResolversParentTypes[\"Language\"]\n> = {\n\tcolor?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LanguageConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LanguageConnection\"] = ResolversParentTypes[\"LanguageConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"LanguageEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Language\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalSize?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LanguageEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LanguageEdge\"] = ResolversParentTypes[\"LanguageEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"Language\"], ParentType, ContextType>;\n\tsize?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LicenseResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"License\"] = ResolversParentTypes[\"License\"]\n> = {\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tconditions?: Resolver<Array<Maybe<ResolversTypes[\"LicenseRule\"]>>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tfeatured?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thidden?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\timplementation?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tkey?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tlimitations?: Resolver<Array<Maybe<ResolversTypes[\"LicenseRule\"]>>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnickname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpermissions?: Resolver<Array<Maybe<ResolversTypes[\"LicenseRule\"]>>, ParentType, ContextType>;\n\tpseudoLicense?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tspdxId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\turl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LicenseRuleResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LicenseRule\"] = ResolversParentTypes[\"LicenseRule\"]\n> = {\n\tdescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tkey?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tlabel?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LinkRepositoryToProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LinkRepositoryToProjectPayload\"] = ResolversParentTypes[\"LinkRepositoryToProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LockLockablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LockLockablePayload\"] = ResolversParentTypes[\"LockLockablePayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlockedRecord?: Resolver<Maybe<ResolversTypes[\"Lockable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type LockableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Lockable\"] = ResolversParentTypes[\"Lockable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n\tactiveLockReason?: Resolver<Maybe<ResolversTypes[\"LockReason\"]>, ParentType, ContextType>;\n\tlocked?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type LockedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"LockedEvent\"] = ResolversParentTypes[\"LockedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlockReason?: Resolver<Maybe<ResolversTypes[\"LockReason\"]>, ParentType, ContextType>;\n\tlockable?: Resolver<ResolversTypes[\"Lockable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MannequinResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Mannequin\"] = ResolversParentTypes[\"Mannequin\"]\n> = {\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<MannequinAvatarUrlArgs, never>>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarkPullRequestReadyForReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarkPullRequestReadyForReviewPayload\"] = ResolversParentTypes[\"MarkPullRequestReadyForReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarkedAsDuplicateEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarkedAsDuplicateEvent\"] = ResolversParentTypes[\"MarkedAsDuplicateEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarketplaceCategoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarketplaceCategory\"] = ResolversParentTypes[\"MarketplaceCategory\"]\n> = {\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\thowItWorks?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tprimaryListingCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tsecondaryListingCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarketplaceListingResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarketplaceListing\"] = ResolversParentTypes[\"MarketplaceListing\"]\n> = {\n\tapp?: Resolver<Maybe<ResolversTypes[\"App\"]>, ParentType, ContextType>;\n\tcompanyUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tconfigurationResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tconfigurationUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tdocumentationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\textendedDescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\textendedDescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tfullDescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tfullDescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\thasPublishedFreeTrialPlans?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasTermsOfService?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thowItWorks?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\thowItWorksHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinstallationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tinstalledForViewer?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisArchived?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisDraft?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPaid?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPublic?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisRejected?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisUnverified?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisUnverifiedPending?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisVerificationPendingFromDraft?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisVerificationPendingFromUnverified?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisVerified?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlogoBackgroundColor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tlogoUrl?: Resolver<\n\t\tMaybe<ResolversTypes[\"URI\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MarketplaceListingLogoUrlArgs, \"size\">\n\t>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnormalizedShortDescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpricingUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tprimaryCategory?: Resolver<ResolversTypes[\"MarketplaceCategory\"], ParentType, ContextType>;\n\tprivacyPolicyUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tscreenshotUrls?: Resolver<Array<Maybe<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\tsecondaryCategory?: Resolver<Maybe<ResolversTypes[\"MarketplaceCategory\"]>, ParentType, ContextType>;\n\tshortDescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tstatusUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tsupportEmail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tsupportUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttermsOfServiceUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanAddPlans?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanApprove?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanDelist?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanEditCategories?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanEditPlans?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanRedraft?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReject?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanRequestApproval?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerHasPurchased?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerHasPurchasedForAllOrganizations?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerIsListingAdmin?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarketplaceListingConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarketplaceListingConnection\"] = ResolversParentTypes[\"MarketplaceListingConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"MarketplaceListingEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"MarketplaceListing\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MarketplaceListingEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MarketplaceListingEdge\"] = ResolversParentTypes[\"MarketplaceListingEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"MarketplaceListing\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MemberStatusableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MemberStatusable\"] = ResolversParentTypes[\"MemberStatusable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"Team\", ParentType, ContextType>;\n\tmemberStatuses?: Resolver<\n\t\tResolversTypes[\"UserStatusConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MemberStatusableMemberStatusesArgs, \"orderBy\">\n\t>;\n};\n\nexport type MembersCanDeleteReposClearAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"] = ResolversParentTypes[\"MembersCanDeleteReposClearAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MembersCanDeleteReposDisableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"] = ResolversParentTypes[\"MembersCanDeleteReposDisableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MembersCanDeleteReposEnableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"] = ResolversParentTypes[\"MembersCanDeleteReposEnableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MentionedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MentionedEvent\"] = ResolversParentTypes[\"MentionedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MergeBranchPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MergeBranchPayload\"] = ResolversParentTypes[\"MergeBranchPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tmergeCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MergePullRequestPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MergePullRequestPayload\"] = ResolversParentTypes[\"MergePullRequestPayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MergedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MergedEvent\"] = ResolversParentTypes[\"MergedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmergeRef?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\tmergeRefName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MilestoneResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Milestone\"] = ResolversParentTypes[\"Milestone\"]\n> = {\n\tclosed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tclosedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdueOn?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissuePrioritiesDebug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tissues?: Resolver<ResolversTypes[\"IssueConnection\"], ParentType, ContextType, RequireFields<MilestoneIssuesArgs, never>>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpullRequests?: Resolver<\n\t\tResolversTypes[\"PullRequestConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MilestonePullRequestsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"MilestoneState\"], ParentType, ContextType>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MilestoneConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MilestoneConnection\"] = ResolversParentTypes[\"MilestoneConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"MilestoneEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Milestone\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MilestoneEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MilestoneEdge\"] = ResolversParentTypes[\"MilestoneEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Milestone\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MilestoneItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MilestoneItem\"] = ResolversParentTypes[\"MilestoneItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type MilestonedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MilestonedEvent\"] = ResolversParentTypes[\"MilestonedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmilestoneTitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"MilestoneItem\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MinimizableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Minimizable\"] = ResolversParentTypes[\"Minimizable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t\"CommitComment\" | \"GistComment\" | \"IssueComment\" | \"PullRequestReviewComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tisMinimized?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tminimizedReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tviewerCanMinimize?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type MinimizeCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MinimizeCommentPayload\"] = ResolversParentTypes[\"MinimizeCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tminimizedComment?: Resolver<Maybe<ResolversTypes[\"Minimizable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MoveProjectCardPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MoveProjectCardPayload\"] = ResolversParentTypes[\"MoveProjectCardPayload\"]\n> = {\n\tcardEdge?: Resolver<Maybe<ResolversTypes[\"ProjectCardEdge\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MoveProjectColumnPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MoveProjectColumnPayload\"] = ResolversParentTypes[\"MoveProjectColumnPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcolumnEdge?: Resolver<Maybe<ResolversTypes[\"ProjectColumnEdge\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MovedColumnsInProjectEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"MovedColumnsInProjectEvent\"] = ResolversParentTypes[\"MovedColumnsInProjectEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type MutationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Mutation\"] = ResolversParentTypes[\"Mutation\"]\n> = {\n\tacceptEnterpriseAdministratorInvitation?: Resolver<\n\t\tMaybe<ResolversTypes[\"AcceptEnterpriseAdministratorInvitationPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAcceptEnterpriseAdministratorInvitationArgs, \"input\">\n\t>;\n\tacceptTopicSuggestion?: Resolver<\n\t\tMaybe<ResolversTypes[\"AcceptTopicSuggestionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAcceptTopicSuggestionArgs, \"input\">\n\t>;\n\taddAssigneesToAssignable?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddAssigneesToAssignablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddAssigneesToAssignableArgs, \"input\">\n\t>;\n\taddComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddCommentArgs, \"input\">\n\t>;\n\taddLabelsToLabelable?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddLabelsToLabelablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddLabelsToLabelableArgs, \"input\">\n\t>;\n\taddProjectCard?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddProjectCardPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddProjectCardArgs, \"input\">\n\t>;\n\taddProjectColumn?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddProjectColumnPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddProjectColumnArgs, \"input\">\n\t>;\n\taddPullRequestReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddPullRequestReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddPullRequestReviewArgs, \"input\">\n\t>;\n\taddPullRequestReviewComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddPullRequestReviewCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddPullRequestReviewCommentArgs, \"input\">\n\t>;\n\taddPullRequestReviewThread?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddPullRequestReviewThreadPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddPullRequestReviewThreadArgs, \"input\">\n\t>;\n\taddReaction?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddReactionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddReactionArgs, \"input\">\n\t>;\n\taddStar?: Resolver<\n\t\tMaybe<ResolversTypes[\"AddStarPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationAddStarArgs, \"input\">\n\t>;\n\tarchiveRepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"ArchiveRepositoryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationArchiveRepositoryArgs, \"input\">\n\t>;\n\tcancelEnterpriseAdminInvitation?: Resolver<\n\t\tMaybe<ResolversTypes[\"CancelEnterpriseAdminInvitationPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCancelEnterpriseAdminInvitationArgs, \"input\">\n\t>;\n\tchangeUserStatus?: Resolver<\n\t\tMaybe<ResolversTypes[\"ChangeUserStatusPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationChangeUserStatusArgs, \"input\">\n\t>;\n\tclearLabelsFromLabelable?: Resolver<\n\t\tMaybe<ResolversTypes[\"ClearLabelsFromLabelablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationClearLabelsFromLabelableArgs, \"input\">\n\t>;\n\tcloneProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"CloneProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCloneProjectArgs, \"input\">\n\t>;\n\tcloneTemplateRepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"CloneTemplateRepositoryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCloneTemplateRepositoryArgs, \"input\">\n\t>;\n\tcloseIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"CloseIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCloseIssueArgs, \"input\">\n\t>;\n\tclosePullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"ClosePullRequestPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationClosePullRequestArgs, \"input\">\n\t>;\n\tconvertProjectCardNoteToIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"ConvertProjectCardNoteToIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationConvertProjectCardNoteToIssueArgs, \"input\">\n\t>;\n\tcreateBranchProtectionRule?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateBranchProtectionRulePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateBranchProtectionRuleArgs, \"input\">\n\t>;\n\tcreateEnterpriseOrganization?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateEnterpriseOrganizationPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateEnterpriseOrganizationArgs, \"input\">\n\t>;\n\tcreateIpAllowListEntry?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateIpAllowListEntryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateIpAllowListEntryArgs, \"input\">\n\t>;\n\tcreateIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateIssueArgs, \"input\">\n\t>;\n\tcreateProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateProjectArgs, \"input\">\n\t>;\n\tcreatePullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreatePullRequestPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreatePullRequestArgs, \"input\">\n\t>;\n\tcreateRef?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateRefPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateRefArgs, \"input\">\n\t>;\n\tcreateRepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateRepositoryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateRepositoryArgs, \"input\">\n\t>;\n\tcreateTeamDiscussion?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateTeamDiscussionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateTeamDiscussionArgs, \"input\">\n\t>;\n\tcreateTeamDiscussionComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"CreateTeamDiscussionCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationCreateTeamDiscussionCommentArgs, \"input\">\n\t>;\n\tdeclineTopicSuggestion?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeclineTopicSuggestionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeclineTopicSuggestionArgs, \"input\">\n\t>;\n\tdeleteBranchProtectionRule?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteBranchProtectionRulePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteBranchProtectionRuleArgs, \"input\">\n\t>;\n\tdeleteDeployment?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteDeploymentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteDeploymentArgs, \"input\">\n\t>;\n\tdeleteIpAllowListEntry?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteIpAllowListEntryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteIpAllowListEntryArgs, \"input\">\n\t>;\n\tdeleteIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteIssueArgs, \"input\">\n\t>;\n\tdeleteIssueComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteIssueCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteIssueCommentArgs, \"input\">\n\t>;\n\tdeleteProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteProjectArgs, \"input\">\n\t>;\n\tdeleteProjectCard?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteProjectCardPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteProjectCardArgs, \"input\">\n\t>;\n\tdeleteProjectColumn?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteProjectColumnPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteProjectColumnArgs, \"input\">\n\t>;\n\tdeletePullRequestReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeletePullRequestReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeletePullRequestReviewArgs, \"input\">\n\t>;\n\tdeletePullRequestReviewComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeletePullRequestReviewCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeletePullRequestReviewCommentArgs, \"input\">\n\t>;\n\tdeleteRef?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteRefPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteRefArgs, \"input\">\n\t>;\n\tdeleteTeamDiscussion?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteTeamDiscussionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteTeamDiscussionArgs, \"input\">\n\t>;\n\tdeleteTeamDiscussionComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"DeleteTeamDiscussionCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDeleteTeamDiscussionCommentArgs, \"input\">\n\t>;\n\tdismissPullRequestReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"DismissPullRequestReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationDismissPullRequestReviewArgs, \"input\">\n\t>;\n\tfollowUser?: Resolver<\n\t\tMaybe<ResolversTypes[\"FollowUserPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationFollowUserArgs, \"input\">\n\t>;\n\tinviteEnterpriseAdmin?: Resolver<\n\t\tMaybe<ResolversTypes[\"InviteEnterpriseAdminPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationInviteEnterpriseAdminArgs, \"input\">\n\t>;\n\tlinkRepositoryToProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"LinkRepositoryToProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationLinkRepositoryToProjectArgs, \"input\">\n\t>;\n\tlockLockable?: Resolver<\n\t\tMaybe<ResolversTypes[\"LockLockablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationLockLockableArgs, \"input\">\n\t>;\n\tmarkPullRequestReadyForReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"MarkPullRequestReadyForReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMarkPullRequestReadyForReviewArgs, \"input\">\n\t>;\n\tmergeBranch?: Resolver<\n\t\tMaybe<ResolversTypes[\"MergeBranchPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMergeBranchArgs, \"input\">\n\t>;\n\tmergePullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"MergePullRequestPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMergePullRequestArgs, \"input\">\n\t>;\n\tminimizeComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"MinimizeCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMinimizeCommentArgs, \"input\">\n\t>;\n\tmoveProjectCard?: Resolver<\n\t\tMaybe<ResolversTypes[\"MoveProjectCardPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMoveProjectCardArgs, \"input\">\n\t>;\n\tmoveProjectColumn?: Resolver<\n\t\tMaybe<ResolversTypes[\"MoveProjectColumnPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationMoveProjectColumnArgs, \"input\">\n\t>;\n\tregenerateEnterpriseIdentityProviderRecoveryCodes?: Resolver<\n\t\tMaybe<ResolversTypes[\"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRegenerateEnterpriseIdentityProviderRecoveryCodesArgs, \"input\">\n\t>;\n\tremoveAssigneesFromAssignable?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveAssigneesFromAssignablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveAssigneesFromAssignableArgs, \"input\">\n\t>;\n\tremoveEnterpriseAdmin?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveEnterpriseAdminPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveEnterpriseAdminArgs, \"input\">\n\t>;\n\tremoveEnterpriseIdentityProvider?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveEnterpriseIdentityProviderPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveEnterpriseIdentityProviderArgs, \"input\">\n\t>;\n\tremoveEnterpriseOrganization?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveEnterpriseOrganizationPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveEnterpriseOrganizationArgs, \"input\">\n\t>;\n\tremoveLabelsFromLabelable?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveLabelsFromLabelablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveLabelsFromLabelableArgs, \"input\">\n\t>;\n\tremoveOutsideCollaborator?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveOutsideCollaboratorPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveOutsideCollaboratorArgs, \"input\">\n\t>;\n\tremoveReaction?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveReactionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveReactionArgs, \"input\">\n\t>;\n\tremoveStar?: Resolver<\n\t\tMaybe<ResolversTypes[\"RemoveStarPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRemoveStarArgs, \"input\">\n\t>;\n\treopenIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"ReopenIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationReopenIssueArgs, \"input\">\n\t>;\n\treopenPullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"ReopenPullRequestPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationReopenPullRequestArgs, \"input\">\n\t>;\n\trequestReviews?: Resolver<\n\t\tMaybe<ResolversTypes[\"RequestReviewsPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationRequestReviewsArgs, \"input\">\n\t>;\n\tresolveReviewThread?: Resolver<\n\t\tMaybe<ResolversTypes[\"ResolveReviewThreadPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationResolveReviewThreadArgs, \"input\">\n\t>;\n\tsetEnterpriseIdentityProvider?: Resolver<\n\t\tMaybe<ResolversTypes[\"SetEnterpriseIdentityProviderPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationSetEnterpriseIdentityProviderArgs, \"input\">\n\t>;\n\tsubmitPullRequestReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"SubmitPullRequestReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationSubmitPullRequestReviewArgs, \"input\">\n\t>;\n\ttransferIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"TransferIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationTransferIssueArgs, \"input\">\n\t>;\n\tunarchiveRepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnarchiveRepositoryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnarchiveRepositoryArgs, \"input\">\n\t>;\n\tunfollowUser?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnfollowUserPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnfollowUserArgs, \"input\">\n\t>;\n\tunlinkRepositoryFromProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnlinkRepositoryFromProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnlinkRepositoryFromProjectArgs, \"input\">\n\t>;\n\tunlockLockable?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnlockLockablePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnlockLockableArgs, \"input\">\n\t>;\n\tunmarkIssueAsDuplicate?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnmarkIssueAsDuplicatePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnmarkIssueAsDuplicateArgs, \"input\">\n\t>;\n\tunminimizeComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnminimizeCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnminimizeCommentArgs, \"input\">\n\t>;\n\tunresolveReviewThread?: Resolver<\n\t\tMaybe<ResolversTypes[\"UnresolveReviewThreadPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUnresolveReviewThreadArgs, \"input\">\n\t>;\n\tupdateBranchProtectionRule?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateBranchProtectionRulePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateBranchProtectionRuleArgs, \"input\">\n\t>;\n\tupdateEnterpriseActionExecutionCapabilitySetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseActionExecutionCapabilitySettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseActionExecutionCapabilitySettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseAdministratorRole?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseAdministratorRolePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseAdministratorRoleArgs, \"input\">\n\t>;\n\tupdateEnterpriseAllowPrivateRepositoryForkingSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseAllowPrivateRepositoryForkingSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseDefaultRepositoryPermissionSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseDefaultRepositoryPermissionSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanCreateRepositoriesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanCreateRepositoriesSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanDeleteIssuesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanDeleteIssuesSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanDeleteRepositoriesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanDeleteRepositoriesSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanInviteCollaboratorsSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanInviteCollaboratorsSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanMakePurchasesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanMakePurchasesSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanMakePurchasesSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanUpdateProtectedBranchesSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseMembersCanViewDependencyInsightsSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseMembersCanViewDependencyInsightsSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseOrganizationProjectsSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseOrganizationProjectsSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseOrganizationProjectsSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseProfile?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseProfilePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseProfileArgs, \"input\">\n\t>;\n\tupdateEnterpriseRepositoryProjectsSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseRepositoryProjectsSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseRepositoryProjectsSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseTeamDiscussionsSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseTeamDiscussionsSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseTeamDiscussionsSettingArgs, \"input\">\n\t>;\n\tupdateEnterpriseTwoFactorAuthenticationRequiredSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateEnterpriseTwoFactorAuthenticationRequiredSettingArgs, \"input\">\n\t>;\n\tupdateIpAllowListEnabledSetting?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateIpAllowListEnabledSettingPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateIpAllowListEnabledSettingArgs, \"input\">\n\t>;\n\tupdateIpAllowListEntry?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateIpAllowListEntryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateIpAllowListEntryArgs, \"input\">\n\t>;\n\tupdateIssue?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateIssuePayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateIssueArgs, \"input\">\n\t>;\n\tupdateIssueComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateIssueCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateIssueCommentArgs, \"input\">\n\t>;\n\tupdateProject?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateProjectPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateProjectArgs, \"input\">\n\t>;\n\tupdateProjectCard?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateProjectCardPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateProjectCardArgs, \"input\">\n\t>;\n\tupdateProjectColumn?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateProjectColumnPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateProjectColumnArgs, \"input\">\n\t>;\n\tupdatePullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdatePullRequestPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdatePullRequestArgs, \"input\">\n\t>;\n\tupdatePullRequestReview?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdatePullRequestReviewPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdatePullRequestReviewArgs, \"input\">\n\t>;\n\tupdatePullRequestReviewComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdatePullRequestReviewCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdatePullRequestReviewCommentArgs, \"input\">\n\t>;\n\tupdateRef?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateRefPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateRefArgs, \"input\">\n\t>;\n\tupdateRepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateRepositoryPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateRepositoryArgs, \"input\">\n\t>;\n\tupdateSubscription?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateSubscriptionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateSubscriptionArgs, \"input\">\n\t>;\n\tupdateTeamDiscussion?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateTeamDiscussionPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateTeamDiscussionArgs, \"input\">\n\t>;\n\tupdateTeamDiscussionComment?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateTeamDiscussionCommentPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateTeamDiscussionCommentArgs, \"input\">\n\t>;\n\tupdateTopics?: Resolver<\n\t\tMaybe<ResolversTypes[\"UpdateTopicsPayload\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<MutationUpdateTopicsArgs, \"input\">\n\t>;\n};\n\nexport type NodeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Node\"] = ResolversParentTypes[\"Node\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"AddedToProjectEvent\"\n\t\t| \"App\"\n\t\t| \"AssignedEvent\"\n\t\t| \"AutomaticBaseChangeFailedEvent\"\n\t\t| \"AutomaticBaseChangeSucceededEvent\"\n\t\t| \"BaseRefChangedEvent\"\n\t\t| \"BaseRefForcePushedEvent\"\n\t\t| \"Blob\"\n\t\t| \"Bot\"\n\t\t| \"BranchProtectionRule\"\n\t\t| \"ClosedEvent\"\n\t\t| \"CodeOfConduct\"\n\t\t| \"CommentDeletedEvent\"\n\t\t| \"Commit\"\n\t\t| \"CommitComment\"\n\t\t| \"CommitCommentThread\"\n\t\t| \"ConnectedEvent\"\n\t\t| \"ConvertToDraftEvent\"\n\t\t| \"ConvertedNoteToIssueEvent\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"DemilestonedEvent\"\n\t\t| \"DeployKey\"\n\t\t| \"DeployedEvent\"\n\t\t| \"Deployment\"\n\t\t| \"DeploymentEnvironmentChangedEvent\"\n\t\t| \"DeploymentStatus\"\n\t\t| \"DisconnectedEvent\"\n\t\t| \"Enterprise\"\n\t\t| \"EnterpriseAdministratorInvitation\"\n\t\t| \"EnterpriseIdentityProvider\"\n\t\t| \"EnterpriseRepositoryInfo\"\n\t\t| \"EnterpriseServerInstallation\"\n\t\t| \"EnterpriseServerUserAccount\"\n\t\t| \"EnterpriseServerUserAccountEmail\"\n\t\t| \"EnterpriseServerUserAccountsUpload\"\n\t\t| \"EnterpriseUserAccount\"\n\t\t| \"ExternalIdentity\"\n\t\t| \"Gist\"\n\t\t| \"GistComment\"\n\t\t| \"HeadRefDeletedEvent\"\n\t\t| \"HeadRefForcePushedEvent\"\n\t\t| \"HeadRefRestoredEvent\"\n\t\t| \"IpAllowListEntry\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"Label\"\n\t\t| \"LabeledEvent\"\n\t\t| \"Language\"\n\t\t| \"License\"\n\t\t| \"LockedEvent\"\n\t\t| \"Mannequin\"\n\t\t| \"MarkedAsDuplicateEvent\"\n\t\t| \"MarketplaceCategory\"\n\t\t| \"MarketplaceListing\"\n\t\t| \"MembersCanDeleteReposClearAuditEntry\"\n\t\t| \"MembersCanDeleteReposDisableAuditEntry\"\n\t\t| \"MembersCanDeleteReposEnableAuditEntry\"\n\t\t| \"MentionedEvent\"\n\t\t| \"MergedEvent\"\n\t\t| \"Milestone\"\n\t\t| \"MilestonedEvent\"\n\t\t| \"MovedColumnsInProjectEvent\"\n\t\t| \"OauthApplicationCreateAuditEntry\"\n\t\t| \"OrgAddBillingManagerAuditEntry\"\n\t\t| \"OrgAddMemberAuditEntry\"\n\t\t| \"OrgBlockUserAuditEntry\"\n\t\t| \"OrgConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgCreateAuditEntry\"\n\t\t| \"OrgDisableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgDisableSamlAuditEntry\"\n\t\t| \"OrgDisableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgEnableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgEnableSamlAuditEntry\"\n\t\t| \"OrgEnableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgInviteMemberAuditEntry\"\n\t\t| \"OrgInviteToBusinessAuditEntry\"\n\t\t| \"OrgOauthAppAccessApprovedAuditEntry\"\n\t\t| \"OrgOauthAppAccessDeniedAuditEntry\"\n\t\t| \"OrgOauthAppAccessRequestedAuditEntry\"\n\t\t| \"OrgRemoveBillingManagerAuditEntry\"\n\t\t| \"OrgRemoveMemberAuditEntry\"\n\t\t| \"OrgRemoveOutsideCollaboratorAuditEntry\"\n\t\t| \"OrgRestoreMemberAuditEntry\"\n\t\t| \"OrgUnblockUserAuditEntry\"\n\t\t| \"OrgUpdateDefaultRepositoryPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"\n\t\t| \"Organization\"\n\t\t| \"OrganizationIdentityProvider\"\n\t\t| \"OrganizationInvitation\"\n\t\t| \"Package\"\n\t\t| \"PackageFile\"\n\t\t| \"PackageTag\"\n\t\t| \"PackageVersion\"\n\t\t| \"PinnedEvent\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"Project\"\n\t\t| \"ProjectCard\"\n\t\t| \"ProjectColumn\"\n\t\t| \"PublicKey\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestCommit\"\n\t\t| \"PullRequestCommitCommentThread\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"PullRequestReviewThread\"\n\t\t| \"PushAllowance\"\n\t\t| \"Reaction\"\n\t\t| \"ReadyForReviewEvent\"\n\t\t| \"Ref\"\n\t\t| \"ReferencedEvent\"\n\t\t| \"Release\"\n\t\t| \"ReleaseAsset\"\n\t\t| \"RemovedFromProjectEvent\"\n\t\t| \"RenamedTitleEvent\"\n\t\t| \"ReopenedEvent\"\n\t\t| \"RepoAccessAuditEntry\"\n\t\t| \"RepoAddMemberAuditEntry\"\n\t\t| \"RepoAddTopicAuditEntry\"\n\t\t| \"RepoArchivedAuditEntry\"\n\t\t| \"RepoChangeMergeSettingAuditEntry\"\n\t\t| \"RepoConfigDisableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigEnableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigLockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigUnlockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoCreateAuditEntry\"\n\t\t| \"RepoDestroyAuditEntry\"\n\t\t| \"RepoRemoveMemberAuditEntry\"\n\t\t| \"RepoRemoveTopicAuditEntry\"\n\t\t| \"Repository\"\n\t\t| \"RepositoryInvitation\"\n\t\t| \"RepositoryTopic\"\n\t\t| \"RepositoryVisibilityChangeDisableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeEnableAuditEntry\"\n\t\t| \"RepositoryVulnerabilityAlert\"\n\t\t| \"ReviewDismissalAllowance\"\n\t\t| \"ReviewDismissedEvent\"\n\t\t| \"ReviewRequest\"\n\t\t| \"ReviewRequestRemovedEvent\"\n\t\t| \"ReviewRequestedEvent\"\n\t\t| \"SavedReply\"\n\t\t| \"SecurityAdvisory\"\n\t\t| \"SponsorsListing\"\n\t\t| \"SponsorsTier\"\n\t\t| \"Sponsorship\"\n\t\t| \"Status\"\n\t\t| \"StatusCheckRollup\"\n\t\t| \"StatusContext\"\n\t\t| \"SubscribedEvent\"\n\t\t| \"Tag\"\n\t\t| \"Team\"\n\t\t| \"TeamAddMemberAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamChangeParentTeamAuditEntry\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\"\n\t\t| \"TeamRemoveMemberAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\"\n\t\t| \"Topic\"\n\t\t| \"TransferredEvent\"\n\t\t| \"Tree\"\n\t\t| \"UnassignedEvent\"\n\t\t| \"UnlabeledEvent\"\n\t\t| \"UnlockedEvent\"\n\t\t| \"UnmarkedAsDuplicateEvent\"\n\t\t| \"UnpinnedEvent\"\n\t\t| \"UnsubscribedEvent\"\n\t\t| \"User\"\n\t\t| \"UserBlockedEvent\"\n\t\t| \"UserContentEdit\"\n\t\t| \"UserStatus\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n};\n\nexport type OauthApplicationAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OauthApplicationAuditEntryData\"] = ResolversParentTypes[\"OauthApplicationAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"OauthApplicationCreateAuditEntry\"\n\t\t| \"OrgOauthAppAccessApprovedAuditEntry\"\n\t\t| \"OrgOauthAppAccessDeniedAuditEntry\"\n\t\t| \"OrgOauthAppAccessRequestedAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\toauthApplicationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toauthApplicationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toauthApplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type OauthApplicationCreateAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"] = ResolversParentTypes[\"OauthApplicationCreateAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tapplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcallbackUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toauthApplicationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toauthApplicationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toauthApplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trateLimit?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tstate?: Resolver<Maybe<ResolversTypes[\"OauthApplicationCreateAuditEntryState\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgAddBillingManagerAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"] = ResolversParentTypes[\"OrgAddBillingManagerAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinvitationEmail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgAddMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgAddMemberAuditEntry\"] = ResolversParentTypes[\"OrgAddMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tpermission?: Resolver<Maybe<ResolversTypes[\"OrgAddMemberAuditEntryPermission\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgBlockUserAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgBlockUserAuditEntry\"] = ResolversParentTypes[\"OrgBlockUserAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tblockedUser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tblockedUserName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tblockedUserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tblockedUserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgConfigDisableCollaboratorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"] = ResolversParentTypes[\"OrgConfigDisableCollaboratorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgConfigEnableCollaboratorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"] = ResolversParentTypes[\"OrgConfigEnableCollaboratorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgCreateAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgCreateAuditEntry\"] = ResolversParentTypes[\"OrgCreateAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tbillingPlan?: Resolver<Maybe<ResolversTypes[\"OrgCreateAuditEntryBillingPlan\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgDisableOauthAppRestrictionsAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"] = ResolversParentTypes[\"OrgDisableOauthAppRestrictionsAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgDisableSamlAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgDisableSamlAuditEntry\"] = ResolversParentTypes[\"OrgDisableSamlAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tdigestMethodUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissuerUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tsignatureMethodUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tsingleSignOnUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgDisableTwoFactorRequirementAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"] = ResolversParentTypes[\"OrgDisableTwoFactorRequirementAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgEnableOauthAppRestrictionsAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"] = ResolversParentTypes[\"OrgEnableOauthAppRestrictionsAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgEnableSamlAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgEnableSamlAuditEntry\"] = ResolversParentTypes[\"OrgEnableSamlAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tdigestMethodUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissuerUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tsignatureMethodUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tsingleSignOnUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgEnableTwoFactorRequirementAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"] = ResolversParentTypes[\"OrgEnableTwoFactorRequirementAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgInviteMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgInviteMemberAuditEntry\"] = ResolversParentTypes[\"OrgInviteMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationInvitation?: Resolver<Maybe<ResolversTypes[\"OrganizationInvitation\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgInviteToBusinessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"] = ResolversParentTypes[\"OrgInviteToBusinessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgOauthAppAccessApprovedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"] = ResolversParentTypes[\"OrgOauthAppAccessApprovedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toauthApplicationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toauthApplicationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toauthApplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgOauthAppAccessDeniedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"] = ResolversParentTypes[\"OrgOauthAppAccessDeniedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toauthApplicationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toauthApplicationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toauthApplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgOauthAppAccessRequestedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"] = ResolversParentTypes[\"OrgOauthAppAccessRequestedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toauthApplicationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toauthApplicationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toauthApplicationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRemoveBillingManagerAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"] = ResolversParentTypes[\"OrgRemoveBillingManagerAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\treason?: Resolver<Maybe<ResolversTypes[\"OrgRemoveBillingManagerAuditEntryReason\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRemoveMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"] = ResolversParentTypes[\"OrgRemoveMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmembershipTypes?: Resolver<\n\t\tMaybe<Array<ResolversTypes[\"OrgRemoveMemberAuditEntryMembershipType\"]>>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\treason?: Resolver<Maybe<ResolversTypes[\"OrgRemoveMemberAuditEntryReason\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRemoveOutsideCollaboratorAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"] = ResolversParentTypes[\"OrgRemoveOutsideCollaboratorAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmembershipTypes?: Resolver<\n\t\tMaybe<Array<ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntryMembershipType\"]>>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\treason?: Resolver<Maybe<ResolversTypes[\"OrgRemoveOutsideCollaboratorAuditEntryReason\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRestoreMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"] = ResolversParentTypes[\"OrgRestoreMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trestoredCustomEmailRoutingsCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trestoredIssueAssignmentsCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trestoredMemberships?: Resolver<\n\t\tMaybe<Array<ResolversTypes[\"OrgRestoreMemberAuditEntryMembership\"]>>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\trestoredMembershipsCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trestoredRepositoriesCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trestoredRepositoryStarsCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\trestoredRepositoryWatchesCount?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRestoreMemberAuditEntryMembershipResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRestoreMemberAuditEntryMembership\"] = ResolversParentTypes[\"OrgRestoreMemberAuditEntryMembership\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"OrgRestoreMemberMembershipOrganizationAuditEntryData\"\n\t\t| \"OrgRestoreMemberMembershipRepositoryAuditEntryData\"\n\t\t| \"OrgRestoreMemberMembershipTeamAuditEntryData\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type OrgRestoreMemberMembershipOrganizationAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"] = ResolversParentTypes[\"OrgRestoreMemberMembershipOrganizationAuditEntryData\"]\n> = {\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRestoreMemberMembershipRepositoryAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"] = ResolversParentTypes[\"OrgRestoreMemberMembershipRepositoryAuditEntryData\"]\n> = {\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgRestoreMemberMembershipTeamAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"] = ResolversParentTypes[\"OrgRestoreMemberMembershipTeamAuditEntryData\"]\n> = {\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgUnblockUserAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgUnblockUserAuditEntry\"] = ResolversParentTypes[\"OrgUnblockUserAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tblockedUser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tblockedUserName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tblockedUserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tblockedUserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgUpdateDefaultRepositoryPermissionAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"] = ResolversParentTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tpermission?: Resolver<\n\t\tMaybe<ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\tpermissionWas?: Resolver<\n\t\tMaybe<ResolversTypes[\"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgUpdateMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"] = ResolversParentTypes[\"OrgUpdateMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tpermission?: Resolver<Maybe<ResolversTypes[\"OrgUpdateMemberAuditEntryPermission\"]>, ParentType, ContextType>;\n\tpermissionWas?: Resolver<Maybe<ResolversTypes[\"OrgUpdateMemberAuditEntryPermission\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgUpdateMemberRepositoryCreationPermissionAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"] = ResolversParentTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcanCreateRepositories?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<\n\t\tMaybe<ResolversTypes[\"OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility\"]>,\n\t\tParentType,\n\t\tContextType\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrgUpdateMemberRepositoryInvitationPermissionAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"] = ResolversParentTypes[\"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcanInviteOutsideCollaboratorsToRepositories?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Organization\"] = ResolversParentTypes[\"Organization\"]\n> = {\n\tanyPinnableItems?: Resolver<\n\t\tResolversTypes[\"Boolean\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationAnyPinnableItemsArgs, never>\n\t>;\n\tauditLog?: Resolver<\n\t\tResolversTypes[\"OrganizationAuditEntryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationAuditLogArgs, \"orderBy\">\n\t>;\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<OrganizationAvatarUrlArgs, never>>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tipAllowListEnabledSetting?: Resolver<ResolversTypes[\"IpAllowListEnabledSettingValue\"], ParentType, ContextType>;\n\tipAllowListEntries?: Resolver<\n\t\tResolversTypes[\"IpAllowListEntryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationIpAllowListEntriesArgs, \"orderBy\">\n\t>;\n\tisVerified?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\titemShowcase?: Resolver<ResolversTypes[\"ProfileItemShowcase\"], ParentType, ContextType>;\n\tlocation?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tmemberStatuses?: Resolver<\n\t\tResolversTypes[\"UserStatusConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationMemberStatusesArgs, \"orderBy\">\n\t>;\n\tmembersWithRole?: Resolver<\n\t\tResolversTypes[\"OrganizationMemberConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationMembersWithRoleArgs, never>\n\t>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tnewTeamResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tnewTeamUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\torganizationBillingEmail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpackages?: Resolver<\n\t\tResolversTypes[\"PackageConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationPackagesArgs, \"orderBy\">\n\t>;\n\tpendingMembers?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationPendingMembersArgs, never>\n\t>;\n\tpinnableItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationPinnableItemsArgs, never>\n\t>;\n\tpinnedItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationPinnedItemsArgs, never>\n\t>;\n\tpinnedItemsRemaining?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tproject?: Resolver<\n\t\tMaybe<ResolversTypes[\"Project\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationProjectArgs, \"number\">\n\t>;\n\tprojects?: Resolver<\n\t\tResolversTypes[\"ProjectConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationProjectsArgs, never>\n\t>;\n\tprojectsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tprojectsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationRepositoriesArgs, \"ownerAffiliations\">\n\t>;\n\trepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"Repository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationRepositoryArgs, \"name\">\n\t>;\n\trequiresTwoFactorAuthentication?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tsamlIdentityProvider?: Resolver<Maybe<ResolversTypes[\"OrganizationIdentityProvider\"]>, ParentType, ContextType>;\n\tsponsorsListing?: Resolver<Maybe<ResolversTypes[\"SponsorsListing\"]>, ParentType, ContextType>;\n\tsponsorshipsAsMaintainer?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationSponsorshipsAsMaintainerArgs, \"includePrivate\">\n\t>;\n\tsponsorshipsAsSponsor?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationSponsorshipsAsSponsorArgs, never>\n\t>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType, RequireFields<OrganizationTeamArgs, \"slug\">>;\n\tteams?: Resolver<\n\t\tResolversTypes[\"TeamConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationTeamsArgs, \"rootTeamsOnly\">\n\t>;\n\tteamsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tteamsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttwitterUsername?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanAdminister?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanChangePinnedItems?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanCreateProjects?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanCreateRepositories?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanCreateTeams?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerIsAMember?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\twebsiteUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationAuditEntry\"] = ResolversParentTypes[\"OrganizationAuditEntry\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"MembersCanDeleteReposClearAuditEntry\"\n\t\t| \"MembersCanDeleteReposDisableAuditEntry\"\n\t\t| \"MembersCanDeleteReposEnableAuditEntry\"\n\t\t| \"OauthApplicationCreateAuditEntry\"\n\t\t| \"OrgAddBillingManagerAuditEntry\"\n\t\t| \"OrgAddMemberAuditEntry\"\n\t\t| \"OrgBlockUserAuditEntry\"\n\t\t| \"OrgConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgCreateAuditEntry\"\n\t\t| \"OrgDisableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgDisableSamlAuditEntry\"\n\t\t| \"OrgDisableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgEnableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgEnableSamlAuditEntry\"\n\t\t| \"OrgEnableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgInviteMemberAuditEntry\"\n\t\t| \"OrgInviteToBusinessAuditEntry\"\n\t\t| \"OrgOauthAppAccessApprovedAuditEntry\"\n\t\t| \"OrgOauthAppAccessDeniedAuditEntry\"\n\t\t| \"OrgOauthAppAccessRequestedAuditEntry\"\n\t\t| \"OrgRemoveBillingManagerAuditEntry\"\n\t\t| \"OrgRemoveMemberAuditEntry\"\n\t\t| \"OrgRemoveOutsideCollaboratorAuditEntry\"\n\t\t| \"OrgRestoreMemberAuditEntry\"\n\t\t| \"OrgUnblockUserAuditEntry\"\n\t\t| \"OrgUpdateDefaultRepositoryPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"RepoAccessAuditEntry\"\n\t\t| \"RepoAddMemberAuditEntry\"\n\t\t| \"RepoAddTopicAuditEntry\"\n\t\t| \"RepoArchivedAuditEntry\"\n\t\t| \"RepoChangeMergeSettingAuditEntry\"\n\t\t| \"RepoConfigDisableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigEnableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigLockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigUnlockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoCreateAuditEntry\"\n\t\t| \"RepoDestroyAuditEntry\"\n\t\t| \"RepoRemoveMemberAuditEntry\"\n\t\t| \"RepoRemoveTopicAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeDisableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeEnableAuditEntry\"\n\t\t| \"TeamAddMemberAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamChangeParentTeamAuditEntry\"\n\t\t| \"TeamRemoveMemberAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type OrganizationAuditEntryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationAuditEntryConnection\"] = ResolversParentTypes[\"OrganizationAuditEntryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationAuditEntryEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationAuditEntry\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationAuditEntryData\"] = ResolversParentTypes[\"OrganizationAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"MembersCanDeleteReposClearAuditEntry\"\n\t\t| \"MembersCanDeleteReposDisableAuditEntry\"\n\t\t| \"MembersCanDeleteReposEnableAuditEntry\"\n\t\t| \"OauthApplicationCreateAuditEntry\"\n\t\t| \"OrgAddBillingManagerAuditEntry\"\n\t\t| \"OrgAddMemberAuditEntry\"\n\t\t| \"OrgBlockUserAuditEntry\"\n\t\t| \"OrgConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"OrgCreateAuditEntry\"\n\t\t| \"OrgDisableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgDisableSamlAuditEntry\"\n\t\t| \"OrgDisableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgEnableOauthAppRestrictionsAuditEntry\"\n\t\t| \"OrgEnableSamlAuditEntry\"\n\t\t| \"OrgEnableTwoFactorRequirementAuditEntry\"\n\t\t| \"OrgInviteMemberAuditEntry\"\n\t\t| \"OrgInviteToBusinessAuditEntry\"\n\t\t| \"OrgOauthAppAccessApprovedAuditEntry\"\n\t\t| \"OrgOauthAppAccessDeniedAuditEntry\"\n\t\t| \"OrgOauthAppAccessRequestedAuditEntry\"\n\t\t| \"OrgRemoveBillingManagerAuditEntry\"\n\t\t| \"OrgRemoveMemberAuditEntry\"\n\t\t| \"OrgRemoveOutsideCollaboratorAuditEntry\"\n\t\t| \"OrgRestoreMemberAuditEntry\"\n\t\t| \"OrgRestoreMemberMembershipOrganizationAuditEntryData\"\n\t\t| \"OrgUnblockUserAuditEntry\"\n\t\t| \"OrgUpdateDefaultRepositoryPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryCreationPermissionAuditEntry\"\n\t\t| \"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"RepoAccessAuditEntry\"\n\t\t| \"RepoAddMemberAuditEntry\"\n\t\t| \"RepoAddTopicAuditEntry\"\n\t\t| \"RepoArchivedAuditEntry\"\n\t\t| \"RepoChangeMergeSettingAuditEntry\"\n\t\t| \"RepoConfigDisableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigEnableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigLockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigUnlockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoCreateAuditEntry\"\n\t\t| \"RepoDestroyAuditEntry\"\n\t\t| \"RepoRemoveMemberAuditEntry\"\n\t\t| \"RepoRemoveTopicAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeDisableAuditEntry\"\n\t\t| \"RepositoryVisibilityChangeEnableAuditEntry\"\n\t\t| \"TeamAddMemberAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamChangeParentTeamAuditEntry\"\n\t\t| \"TeamRemoveMemberAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type OrganizationAuditEntryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationAuditEntryEdge\"] = ResolversParentTypes[\"OrganizationAuditEntryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"OrganizationAuditEntry\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationConnection\"] = ResolversParentTypes[\"OrganizationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Organization\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationEdge\"] = ResolversParentTypes[\"OrganizationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationIdentityProviderResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationIdentityProvider\"] = ResolversParentTypes[\"OrganizationIdentityProvider\"]\n> = {\n\tdigestMethod?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\texternalIdentities?: Resolver<\n\t\tResolversTypes[\"ExternalIdentityConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationIdentityProviderExternalIdentitiesArgs, never>\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tidpCertificate?: Resolver<Maybe<ResolversTypes[\"X509Certificate\"]>, ParentType, ContextType>;\n\tissuer?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\tsignatureMethod?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tssoUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationInvitationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationInvitation\"] = ResolversParentTypes[\"OrganizationInvitation\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinvitationType?: Resolver<ResolversTypes[\"OrganizationInvitationType\"], ParentType, ContextType>;\n\tinvitee?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tinviter?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\torganization?: Resolver<ResolversTypes[\"Organization\"], ParentType, ContextType>;\n\trole?: Resolver<ResolversTypes[\"OrganizationInvitationRole\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationInvitationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationInvitationConnection\"] = ResolversParentTypes[\"OrganizationInvitationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationInvitationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationInvitation\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationInvitationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationInvitationEdge\"] = ResolversParentTypes[\"OrganizationInvitationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"OrganizationInvitation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationMemberConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationMemberConnection\"] = ResolversParentTypes[\"OrganizationMemberConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"OrganizationMemberEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationMemberEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationMemberEdge\"] = ResolversParentTypes[\"OrganizationMemberEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\thasTwoFactorEnabled?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\trole?: Resolver<Maybe<ResolversTypes[\"OrganizationMemberRole\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationTeamsHovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationTeamsHovercardContext\"] = ResolversParentTypes[\"OrganizationTeamsHovercardContext\"]\n> = {\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trelevantTeams?: Resolver<\n\t\tResolversTypes[\"TeamConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationTeamsHovercardContextRelevantTeamsArgs, never>\n\t>;\n\tteamsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tteamsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttotalTeamCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type OrganizationsHovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"OrganizationsHovercardContext\"] = ResolversParentTypes[\"OrganizationsHovercardContext\"]\n> = {\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trelevantOrganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<OrganizationsHovercardContextRelevantOrganizationsArgs, never>\n\t>;\n\ttotalOrganizationCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Package\"] = ResolversParentTypes[\"Package\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlatestVersion?: Resolver<Maybe<ResolversTypes[\"PackageVersion\"]>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpackageType?: Resolver<ResolversTypes[\"PackageType\"], ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\tstatistics?: Resolver<Maybe<ResolversTypes[\"PackageStatistics\"]>, ParentType, ContextType>;\n\tversion?: Resolver<\n\t\tMaybe<ResolversTypes[\"PackageVersion\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PackageVersionArgs, \"version\">\n\t>;\n\tversions?: Resolver<\n\t\tResolversTypes[\"PackageVersionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PackageVersionsArgs, \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageConnection\"] = ResolversParentTypes[\"PackageConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PackageEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Package\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageEdge\"] = ResolversParentTypes[\"PackageEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Package\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageFileResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageFile\"] = ResolversParentTypes[\"PackageFile\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmd5?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpackageVersion?: Resolver<Maybe<ResolversTypes[\"PackageVersion\"]>, ParentType, ContextType>;\n\tsha1?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tsha256?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tsize?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageFileConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageFileConnection\"] = ResolversParentTypes[\"PackageFileConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PackageFileEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PackageFile\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageFileEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageFileEdge\"] = ResolversParentTypes[\"PackageFileEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PackageFile\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageOwnerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageOwner\"] = ResolversParentTypes[\"PackageOwner\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"Repository\" | \"User\", ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpackages?: Resolver<\n\t\tResolversTypes[\"PackageConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PackageOwnerPackagesArgs, \"orderBy\">\n\t>;\n};\n\nexport type PackageStatisticsResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageStatistics\"] = ResolversParentTypes[\"PackageStatistics\"]\n> = {\n\tdownloadsTotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageTagResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageTag\"] = ResolversParentTypes[\"PackageTag\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tversion?: Resolver<Maybe<ResolversTypes[\"PackageVersion\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageVersionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageVersion\"] = ResolversParentTypes[\"PackageVersion\"]\n> = {\n\tfiles?: Resolver<\n\t\tResolversTypes[\"PackageFileConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PackageVersionFilesArgs, \"orderBy\">\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpackage?: Resolver<Maybe<ResolversTypes[\"Package\"]>, ParentType, ContextType>;\n\tplatform?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpreRelease?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\treadme?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trelease?: Resolver<Maybe<ResolversTypes[\"Release\"]>, ParentType, ContextType>;\n\tstatistics?: Resolver<Maybe<ResolversTypes[\"PackageVersionStatistics\"]>, ParentType, ContextType>;\n\tsummary?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tversion?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageVersionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageVersionConnection\"] = ResolversParentTypes[\"PackageVersionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PackageVersionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PackageVersion\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageVersionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageVersionEdge\"] = ResolversParentTypes[\"PackageVersionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PackageVersion\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PackageVersionStatisticsResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PackageVersionStatistics\"] = ResolversParentTypes[\"PackageVersionStatistics\"]\n> = {\n\tdownloadsTotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PageInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PageInfo\"] = ResolversParentTypes[\"PageInfo\"]\n> = {\n\tendCursor?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\thasNextPage?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasPreviousPage?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tstartCursor?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PermissionGranterResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PermissionGranter\"] = ResolversParentTypes[\"PermissionGranter\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"Repository\" | \"Team\", ParentType, ContextType>;\n};\n\nexport type PermissionSourceResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PermissionSource\"] = ResolversParentTypes[\"PermissionSource\"]\n> = {\n\torganization?: Resolver<ResolversTypes[\"Organization\"], ParentType, ContextType>;\n\tpermission?: Resolver<ResolversTypes[\"DefaultRepositoryPermissionField\"], ParentType, ContextType>;\n\tsource?: Resolver<ResolversTypes[\"PermissionGranter\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PinnableItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PinnableItem\"] = ResolversParentTypes[\"PinnableItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Gist\" | \"Repository\", ParentType, ContextType>;\n};\n\nexport type PinnableItemConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PinnableItemConnection\"] = ResolversParentTypes[\"PinnableItemConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PinnableItemEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PinnableItem\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PinnableItemEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PinnableItemEdge\"] = ResolversParentTypes[\"PinnableItemEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PinnableItem\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PinnedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PinnedEvent\"] = ResolversParentTypes[\"PinnedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissue?: Resolver<ResolversTypes[\"Issue\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport interface PreciseDateTimeScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"PreciseDateTime\"], any> {\n\tname: \"PreciseDateTime\";\n}\n\nexport type PrivateRepositoryForkingDisableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"] = ResolversParentTypes[\"PrivateRepositoryForkingDisableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PrivateRepositoryForkingEnableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"] = ResolversParentTypes[\"PrivateRepositoryForkingEnableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProfileItemShowcaseResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProfileItemShowcase\"] = ResolversParentTypes[\"ProfileItemShowcase\"]\n> = {\n\thasPinnedItems?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\titems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProfileItemShowcaseItemsArgs, never>\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProfileOwnerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProfileOwner\"] = ResolversParentTypes[\"ProfileOwner\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"User\", ParentType, ContextType>;\n\tanyPinnableItems?: Resolver<\n\t\tResolversTypes[\"Boolean\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProfileOwnerAnyPinnableItemsArgs, never>\n\t>;\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\titemShowcase?: Resolver<ResolversTypes[\"ProfileItemShowcase\"], ParentType, ContextType>;\n\tlocation?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpinnableItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProfileOwnerPinnableItemsArgs, never>\n\t>;\n\tpinnedItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProfileOwnerPinnedItemsArgs, never>\n\t>;\n\tpinnedItemsRemaining?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tviewerCanChangePinnedItems?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\twebsiteUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type ProjectResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Project\"] = ResolversParentTypes[\"Project\"]\n> = {\n\tbody?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tclosed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tclosedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tcolumns?: Resolver<\n\t\tResolversTypes[\"ProjectColumnConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProjectColumnsArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\towner?: Resolver<ResolversTypes[\"ProjectOwner\"], ParentType, ContextType>;\n\tpendingCards?: Resolver<\n\t\tResolversTypes[\"ProjectCardConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProjectPendingCardsArgs, \"archivedStates\">\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"ProjectState\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectCardResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectCard\"] = ResolversParentTypes[\"ProjectCard\"]\n> = {\n\tcolumn?: Resolver<Maybe<ResolversTypes[\"ProjectColumn\"]>, ParentType, ContextType>;\n\tcontent?: Resolver<Maybe<ResolversTypes[\"ProjectCardItem\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisArchived?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnote?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<ResolversTypes[\"Project\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<Maybe<ResolversTypes[\"ProjectCardState\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectCardConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectCardConnection\"] = ResolversParentTypes[\"ProjectCardConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ProjectCardEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ProjectCard\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectCardEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectCardEdge\"] = ResolversParentTypes[\"ProjectCardEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ProjectCard\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectCardItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectCardItem\"] = ResolversParentTypes[\"ProjectCardItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type ProjectColumnResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectColumn\"] = ResolversParentTypes[\"ProjectColumn\"]\n> = {\n\tcards?: Resolver<\n\t\tResolversTypes[\"ProjectCardConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProjectColumnCardsArgs, \"archivedStates\">\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tproject?: Resolver<ResolversTypes[\"Project\"], ParentType, ContextType>;\n\tpurpose?: Resolver<Maybe<ResolversTypes[\"ProjectColumnPurpose\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectColumnConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectColumnConnection\"] = ResolversParentTypes[\"ProjectColumnConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ProjectColumnEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ProjectColumn\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectColumnEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectColumnEdge\"] = ResolversParentTypes[\"ProjectColumnEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ProjectColumn\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectConnection\"] = ResolversParentTypes[\"ProjectConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ProjectEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Project\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectEdge\"] = ResolversParentTypes[\"ProjectEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ProjectOwnerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ProjectOwner\"] = ResolversParentTypes[\"ProjectOwner\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"Repository\" | \"User\", ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tproject?: Resolver<\n\t\tMaybe<ResolversTypes[\"Project\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProjectOwnerProjectArgs, \"number\">\n\t>;\n\tprojects?: Resolver<\n\t\tResolversTypes[\"ProjectConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ProjectOwnerProjectsArgs, never>\n\t>;\n\tprojectsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tprojectsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanCreateProjects?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type PublicKeyResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PublicKey\"] = ResolversParentTypes[\"PublicKey\"]\n> = {\n\taccessedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tfingerprint?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisReadOnly?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tkey?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PublicKeyConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PublicKeyConnection\"] = ResolversParentTypes[\"PublicKeyConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PublicKeyEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PublicKey\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PublicKeyEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PublicKeyEdge\"] = ResolversParentTypes[\"PublicKeyEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PublicKey\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequest\"] = ResolversParentTypes[\"PullRequest\"]\n> = {\n\tactiveLockReason?: Resolver<Maybe<ResolversTypes[\"LockReason\"]>, ParentType, ContextType>;\n\tadditions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tassignees?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestAssigneesArgs, never>\n\t>;\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbaseRef?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\tbaseRefName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbaseRefOid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\tbaseRepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tchangedFiles?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tchecksResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tchecksUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tclosed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tclosedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tcomments?: Resolver<\n\t\tResolversTypes[\"IssueCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestCommentsArgs, never>\n\t>;\n\tcommits?: Resolver<\n\t\tResolversTypes[\"PullRequestCommitConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestCommitsArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdeletions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tfiles?: Resolver<\n\t\tMaybe<ResolversTypes[\"PullRequestChangedFileConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestFilesArgs, never>\n\t>;\n\theadRef?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\theadRefName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\theadRefOid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\theadRepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\theadRepositoryOwner?: Resolver<Maybe<ResolversTypes[\"RepositoryOwner\"]>, ParentType, ContextType>;\n\thovercard?: Resolver<\n\t\tResolversTypes[\"Hovercard\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestHovercardArgs, \"includeNotificationContexts\">\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisCrossRepository?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisDraft?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlabels?: Resolver<\n\t\tMaybe<ResolversTypes[\"LabelConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestLabelsArgs, \"orderBy\">\n\t>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tlocked?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmaintainerCanModify?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmergeCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tmergeable?: Resolver<ResolversTypes[\"MergeableState\"], ParentType, ContextType>;\n\tmerged?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmergedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tmergedBy?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tmilestone?: Resolver<Maybe<ResolversTypes[\"Milestone\"]>, ParentType, ContextType>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tparticipants?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestParticipantsArgs, never>\n\t>;\n\tpermalink?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tpotentialMergeCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tprojectCards?: Resolver<\n\t\tResolversTypes[\"ProjectCardConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestProjectCardsArgs, \"archivedStates\">\n\t>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReactionsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\trevertResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\trevertUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\treviewDecision?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewDecision\"]>, ParentType, ContextType>;\n\treviewRequests?: Resolver<\n\t\tMaybe<ResolversTypes[\"ReviewRequestConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewRequestsArgs, never>\n\t>;\n\treviewThreads?: Resolver<\n\t\tResolversTypes[\"PullRequestReviewThreadConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewThreadsArgs, never>\n\t>;\n\treviews?: Resolver<\n\t\tMaybe<ResolversTypes[\"PullRequestReviewConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewsArgs, never>\n\t>;\n\tstate?: Resolver<ResolversTypes[\"PullRequestState\"], ParentType, ContextType>;\n\tsuggestedReviewers?: Resolver<Array<Maybe<ResolversTypes[\"SuggestedReviewer\"]>>, ParentType, ContextType>;\n\ttimeline?: Resolver<\n\t\tResolversTypes[\"PullRequestTimelineConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestTimelineArgs, never>\n\t>;\n\ttimelineItems?: Resolver<\n\t\tResolversTypes[\"PullRequestTimelineItemsConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestTimelineItemsArgs, never>\n\t>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestUserContentEditsArgs, never>\n\t>;\n\tviewerCanApplySuggestion?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestChangedFileResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestChangedFile\"] = ResolversParentTypes[\"PullRequestChangedFile\"]\n> = {\n\tadditions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tdeletions?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpath?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestChangedFileConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestChangedFileConnection\"] = ResolversParentTypes[\"PullRequestChangedFileConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestChangedFileEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestChangedFile\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestChangedFileEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestChangedFileEdge\"] = ResolversParentTypes[\"PullRequestChangedFileEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestChangedFile\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestCommitResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestCommit\"] = ResolversParentTypes[\"PullRequestCommit\"]\n> = {\n\tcommit?: Resolver<ResolversTypes[\"Commit\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestCommitCommentThreadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestCommitCommentThread\"] = ResolversParentTypes[\"PullRequestCommitCommentThread\"]\n> = {\n\tcomments?: Resolver<\n\t\tResolversTypes[\"CommitCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestCommitCommentThreadCommentsArgs, never>\n\t>;\n\tcommit?: Resolver<ResolversTypes[\"Commit\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpath?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tposition?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestCommitConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestCommitConnection\"] = ResolversParentTypes[\"PullRequestCommitConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestCommitEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestCommit\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestCommitEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestCommitEdge\"] = ResolversParentTypes[\"PullRequestCommitEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestCommit\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestConnection\"] = ResolversParentTypes[\"PullRequestConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequest\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestContributionsByRepositoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestContributionsByRepository\"] = ResolversParentTypes[\"PullRequestContributionsByRepository\"]\n> = {\n\tcontributions?: Resolver<\n\t\tResolversTypes[\"CreatedPullRequestContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestContributionsByRepositoryContributionsArgs, \"orderBy\">\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestEdge\"] = ResolversParentTypes[\"PullRequestEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReview\"] = ResolversParentTypes[\"PullRequestReview\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcomments?: Resolver<\n\t\tResolversTypes[\"PullRequestReviewCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewCommentsArgs, never>\n\t>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tonBehalfOf?: Resolver<\n\t\tResolversTypes[\"TeamConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewOnBehalfOfArgs, never>\n\t>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewReactionsArgs, never>\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"PullRequestReviewState\"], ParentType, ContextType>;\n\tsubmittedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewComment\"] = ResolversParentTypes[\"PullRequestReviewComment\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdiffHunk?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tdraftedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMinimized?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tminimizedReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\toriginalCommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\toriginalPosition?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\toutdated?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tpath?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tposition?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewCommentReactionsArgs, never>\n\t>;\n\treplyTo?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewComment\"]>, ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"PullRequestReviewCommentState\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewCommentUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanMinimize?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewCommentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewCommentConnection\"] = ResolversParentTypes[\"PullRequestReviewCommentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReviewCommentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReviewComment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewCommentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewCommentEdge\"] = ResolversParentTypes[\"PullRequestReviewCommentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewConnection\"] = ResolversParentTypes[\"PullRequestReviewConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReviewEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReview\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewContributionsByRepositoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewContributionsByRepository\"] = ResolversParentTypes[\"PullRequestReviewContributionsByRepository\"]\n> = {\n\tcontributions?: Resolver<\n\t\tResolversTypes[\"CreatedPullRequestReviewContributionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewContributionsByRepositoryContributionsArgs, \"orderBy\">\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewEdge\"] = ResolversParentTypes[\"PullRequestReviewEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewThreadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewThread\"] = ResolversParentTypes[\"PullRequestReviewThread\"]\n> = {\n\tcomments?: Resolver<\n\t\tResolversTypes[\"PullRequestReviewCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<PullRequestReviewThreadCommentsArgs, never>\n\t>;\n\tdiffSide?: Resolver<ResolversTypes[\"DiffSide\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisResolved?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tline?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\toriginalLine?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\toriginalStartLine?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tresolvedBy?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tstartDiffSide?: Resolver<Maybe<ResolversTypes[\"DiffSide\"]>, ParentType, ContextType>;\n\tstartLine?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tviewerCanResolve?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUnresolve?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewThreadConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewThreadConnection\"] = ResolversParentTypes[\"PullRequestReviewThreadConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReviewThreadEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestReviewThread\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestReviewThreadEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestReviewThreadEdge\"] = ResolversParentTypes[\"PullRequestReviewThreadEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewThread\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestRevisionMarkerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestRevisionMarker\"] = ResolversParentTypes[\"PullRequestRevisionMarker\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tlastSeenCommit?: Resolver<ResolversTypes[\"Commit\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestTimelineConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineConnection\"] = ResolversParentTypes[\"PullRequestTimelineConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItemEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItem\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestTimelineItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineItem\"] = ResolversParentTypes[\"PullRequestTimelineItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"AssignedEvent\"\n\t\t| \"BaseRefForcePushedEvent\"\n\t\t| \"ClosedEvent\"\n\t\t| \"Commit\"\n\t\t| \"CommitCommentThread\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"DemilestonedEvent\"\n\t\t| \"DeployedEvent\"\n\t\t| \"DeploymentEnvironmentChangedEvent\"\n\t\t| \"HeadRefDeletedEvent\"\n\t\t| \"HeadRefForcePushedEvent\"\n\t\t| \"HeadRefRestoredEvent\"\n\t\t| \"IssueComment\"\n\t\t| \"LabeledEvent\"\n\t\t| \"LockedEvent\"\n\t\t| \"MergedEvent\"\n\t\t| \"MilestonedEvent\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"PullRequestReviewThread\"\n\t\t| \"ReferencedEvent\"\n\t\t| \"RenamedTitleEvent\"\n\t\t| \"ReopenedEvent\"\n\t\t| \"ReviewDismissedEvent\"\n\t\t| \"ReviewRequestRemovedEvent\"\n\t\t| \"ReviewRequestedEvent\"\n\t\t| \"SubscribedEvent\"\n\t\t| \"UnassignedEvent\"\n\t\t| \"UnlabeledEvent\"\n\t\t| \"UnlockedEvent\"\n\t\t| \"UnsubscribedEvent\"\n\t\t| \"UserBlockedEvent\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type PullRequestTimelineItemEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineItemEdge\"] = ResolversParentTypes[\"PullRequestTimelineItemEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestTimelineItem\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestTimelineItemsResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineItems\"] = ResolversParentTypes[\"PullRequestTimelineItems\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"AddedToProjectEvent\"\n\t\t| \"AssignedEvent\"\n\t\t| \"AutomaticBaseChangeFailedEvent\"\n\t\t| \"AutomaticBaseChangeSucceededEvent\"\n\t\t| \"BaseRefChangedEvent\"\n\t\t| \"BaseRefForcePushedEvent\"\n\t\t| \"ClosedEvent\"\n\t\t| \"CommentDeletedEvent\"\n\t\t| \"ConnectedEvent\"\n\t\t| \"ConvertToDraftEvent\"\n\t\t| \"ConvertedNoteToIssueEvent\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"DemilestonedEvent\"\n\t\t| \"DeployedEvent\"\n\t\t| \"DeploymentEnvironmentChangedEvent\"\n\t\t| \"DisconnectedEvent\"\n\t\t| \"HeadRefDeletedEvent\"\n\t\t| \"HeadRefForcePushedEvent\"\n\t\t| \"HeadRefRestoredEvent\"\n\t\t| \"IssueComment\"\n\t\t| \"LabeledEvent\"\n\t\t| \"LockedEvent\"\n\t\t| \"MarkedAsDuplicateEvent\"\n\t\t| \"MentionedEvent\"\n\t\t| \"MergedEvent\"\n\t\t| \"MilestonedEvent\"\n\t\t| \"MovedColumnsInProjectEvent\"\n\t\t| \"PinnedEvent\"\n\t\t| \"PullRequestCommit\"\n\t\t| \"PullRequestCommitCommentThread\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewThread\"\n\t\t| \"PullRequestRevisionMarker\"\n\t\t| \"ReadyForReviewEvent\"\n\t\t| \"ReferencedEvent\"\n\t\t| \"RemovedFromProjectEvent\"\n\t\t| \"RenamedTitleEvent\"\n\t\t| \"ReopenedEvent\"\n\t\t| \"ReviewDismissedEvent\"\n\t\t| \"ReviewRequestRemovedEvent\"\n\t\t| \"ReviewRequestedEvent\"\n\t\t| \"SubscribedEvent\"\n\t\t| \"TransferredEvent\"\n\t\t| \"UnassignedEvent\"\n\t\t| \"UnlabeledEvent\"\n\t\t| \"UnlockedEvent\"\n\t\t| \"UnmarkedAsDuplicateEvent\"\n\t\t| \"UnpinnedEvent\"\n\t\t| \"UnsubscribedEvent\"\n\t\t| \"UserBlockedEvent\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type PullRequestTimelineItemsConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineItemsConnection\"] = ResolversParentTypes[\"PullRequestTimelineItemsConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItemsEdge\"]>>>, ParentType, ContextType>;\n\tfilteredCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PullRequestTimelineItems\"]>>>, ParentType, ContextType>;\n\tpageCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PullRequestTimelineItemsEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PullRequestTimelineItemsEdge\"] = ResolversParentTypes[\"PullRequestTimelineItemsEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PullRequestTimelineItems\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PushAllowanceResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PushAllowance\"] = ResolversParentTypes[\"PushAllowance\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"PushAllowanceActor\"]>, ParentType, ContextType>;\n\tbranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PushAllowanceActorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PushAllowanceActor\"] = ResolversParentTypes[\"PushAllowanceActor\"]\n> = {\n\t__resolveType: TypeResolveFn<\"App\" | \"Team\" | \"User\", ParentType, ContextType>;\n};\n\nexport type PushAllowanceConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PushAllowanceConnection\"] = ResolversParentTypes[\"PushAllowanceConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PushAllowanceEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"PushAllowance\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type PushAllowanceEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"PushAllowanceEdge\"] = ResolversParentTypes[\"PushAllowanceEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"PushAllowance\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type QueryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Query\"] = ResolversParentTypes[\"Query\"]\n> = {\n\tcodeOfConduct?: Resolver<\n\t\tMaybe<ResolversTypes[\"CodeOfConduct\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryCodeOfConductArgs, \"key\">\n\t>;\n\tcodesOfConduct?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"CodeOfConduct\"]>>>, ParentType, ContextType>;\n\tenterprise?: Resolver<\n\t\tMaybe<ResolversTypes[\"Enterprise\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryEnterpriseArgs, \"slug\">\n\t>;\n\tenterpriseAdministratorInvitation?: Resolver<\n\t\tMaybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryEnterpriseAdministratorInvitationArgs, \"userLogin\" | \"enterpriseSlug\" | \"role\">\n\t>;\n\tenterpriseAdministratorInvitationByToken?: Resolver<\n\t\tMaybe<ResolversTypes[\"EnterpriseAdministratorInvitation\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryEnterpriseAdministratorInvitationByTokenArgs, \"invitationToken\">\n\t>;\n\tlicense?: Resolver<Maybe<ResolversTypes[\"License\"]>, ParentType, ContextType, RequireFields<QueryLicenseArgs, \"key\">>;\n\tlicenses?: Resolver<Array<Maybe<ResolversTypes[\"License\"]>>, ParentType, ContextType>;\n\tmarketplaceCategories?: Resolver<\n\t\tArray<ResolversTypes[\"MarketplaceCategory\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryMarketplaceCategoriesArgs, never>\n\t>;\n\tmarketplaceCategory?: Resolver<\n\t\tMaybe<ResolversTypes[\"MarketplaceCategory\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryMarketplaceCategoryArgs, \"slug\">\n\t>;\n\tmarketplaceListing?: Resolver<\n\t\tMaybe<ResolversTypes[\"MarketplaceListing\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryMarketplaceListingArgs, \"slug\">\n\t>;\n\tmarketplaceListings?: Resolver<\n\t\tResolversTypes[\"MarketplaceListingConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryMarketplaceListingsArgs, \"primaryCategoryOnly\" | \"withFreeTrialsOnly\">\n\t>;\n\tmeta?: Resolver<ResolversTypes[\"GitHubMetadata\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Node\"]>, ParentType, ContextType, RequireFields<QueryNodeArgs, \"id\">>;\n\tnodes?: Resolver<Array<Maybe<ResolversTypes[\"Node\"]>>, ParentType, ContextType, RequireFields<QueryNodesArgs, \"ids\">>;\n\torganization?: Resolver<\n\t\tMaybe<ResolversTypes[\"Organization\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryOrganizationArgs, \"login\">\n\t>;\n\trateLimit?: Resolver<\n\t\tMaybe<ResolversTypes[\"RateLimit\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryRateLimitArgs, \"dryRun\">\n\t>;\n\trelay?: Resolver<ResolversTypes[\"Query\"], ParentType, ContextType>;\n\trepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"Repository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryRepositoryArgs, \"owner\" | \"name\">\n\t>;\n\trepositoryOwner?: Resolver<\n\t\tMaybe<ResolversTypes[\"RepositoryOwner\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryRepositoryOwnerArgs, \"login\">\n\t>;\n\tresource?: Resolver<\n\t\tMaybe<ResolversTypes[\"UniformResourceLocatable\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QueryResourceArgs, \"url\">\n\t>;\n\tsearch?: Resolver<\n\t\tResolversTypes[\"SearchResultItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QuerySearchArgs, \"query\" | \"type\">\n\t>;\n\tsecurityAdvisories?: Resolver<\n\t\tResolversTypes[\"SecurityAdvisoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QuerySecurityAdvisoriesArgs, \"orderBy\">\n\t>;\n\tsecurityAdvisory?: Resolver<\n\t\tMaybe<ResolversTypes[\"SecurityAdvisory\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QuerySecurityAdvisoryArgs, \"ghsaId\">\n\t>;\n\tsecurityVulnerabilities?: Resolver<\n\t\tResolversTypes[\"SecurityVulnerabilityConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QuerySecurityVulnerabilitiesArgs, \"orderBy\">\n\t>;\n\tsponsorsListing?: Resolver<\n\t\tMaybe<ResolversTypes[\"SponsorsListing\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<QuerySponsorsListingArgs, \"slug\">\n\t>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType, RequireFields<QueryTopicArgs, \"name\">>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType, RequireFields<QueryUserArgs, \"login\">>;\n\tviewer?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n};\n\nexport type RateLimitResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RateLimit\"] = ResolversParentTypes[\"RateLimit\"]\n> = {\n\tcost?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tlimit?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tnodeCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tremaining?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tresetAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Reactable\"] = ResolversParentTypes[\"Reactable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ReactableReactionsArgs, never>\n\t>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type ReactingUserConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReactingUserConnection\"] = ResolversParentTypes[\"ReactingUserConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReactingUserEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactingUserEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReactingUserEdge\"] = ResolversParentTypes[\"ReactingUserEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\treactedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Reaction\"] = ResolversParentTypes[\"Reaction\"]\n> = {\n\tcontent?: Resolver<ResolversTypes[\"ReactionContent\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\treactable?: Resolver<ResolversTypes[\"Reactable\"], ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReactionConnection\"] = ResolversParentTypes[\"ReactionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReactionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Reaction\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tviewerHasReacted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReactionEdge\"] = ResolversParentTypes[\"ReactionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Reaction\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReactionGroupResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReactionGroup\"] = ResolversParentTypes[\"ReactionGroup\"]\n> = {\n\tcontent?: Resolver<ResolversTypes[\"ReactionContent\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"Reactable\"], ParentType, ContextType>;\n\tusers?: Resolver<\n\t\tResolversTypes[\"ReactingUserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ReactionGroupUsersArgs, never>\n\t>;\n\tviewerHasReacted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReadyForReviewEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReadyForReviewEvent\"] = ResolversParentTypes[\"ReadyForReviewEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RefResolvers<ContextType = any, ParentType extends ResolversParentTypes[\"Ref\"] = ResolversParentTypes[\"Ref\"]> = {\n\tassociatedPullRequests?: Resolver<\n\t\tResolversTypes[\"PullRequestConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RefAssociatedPullRequestsArgs, never>\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tprefix?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\ttarget?: Resolver<Maybe<ResolversTypes[\"GitObject\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RefConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RefConnection\"] = ResolversParentTypes[\"RefConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RefEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Ref\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RefEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RefEdge\"] = ResolversParentTypes[\"RefEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReferencedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReferencedEvent\"] = ResolversParentTypes[\"ReferencedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcommitRepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisCrossRepository?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisDirectReference?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"ReferencedSubject\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReferencedSubjectResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReferencedSubject\"] = ResolversParentTypes[\"ReferencedSubject\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload\"] = ResolversParentTypes[\"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tidentityProvider?: Resolver<Maybe<ResolversTypes[\"EnterpriseIdentityProvider\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Release\"] = ResolversParentTypes[\"Release\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<Maybe<ResolversTypes[\"HTML\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisDraft?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPrerelease?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treleaseAssets?: Resolver<\n\t\tResolversTypes[\"ReleaseAssetConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ReleaseReleaseAssetsArgs, never>\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tshortDescriptionHTML?: Resolver<\n\t\tMaybe<ResolversTypes[\"HTML\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<ReleaseShortDescriptionHtmlArgs, \"limit\">\n\t>;\n\ttag?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\ttagName?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseAssetResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReleaseAsset\"] = ResolversParentTypes[\"ReleaseAsset\"]\n> = {\n\tcontentType?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdownloadCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tdownloadUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trelease?: Resolver<Maybe<ResolversTypes[\"Release\"]>, ParentType, ContextType>;\n\tsize?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuploadedBy?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseAssetConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReleaseAssetConnection\"] = ResolversParentTypes[\"ReleaseAssetConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReleaseAssetEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReleaseAsset\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseAssetEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReleaseAssetEdge\"] = ResolversParentTypes[\"ReleaseAssetEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ReleaseAsset\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReleaseConnection\"] = ResolversParentTypes[\"ReleaseConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReleaseEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Release\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReleaseEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReleaseEdge\"] = ResolversParentTypes[\"ReleaseEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Release\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveAssigneesFromAssignablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveAssigneesFromAssignablePayload\"] = ResolversParentTypes[\"RemoveAssigneesFromAssignablePayload\"]\n> = {\n\tassignable?: Resolver<Maybe<ResolversTypes[\"Assignable\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveEnterpriseAdminPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveEnterpriseAdminPayload\"] = ResolversParentTypes[\"RemoveEnterpriseAdminPayload\"]\n> = {\n\tadmin?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tviewer?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveEnterpriseIdentityProviderPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveEnterpriseIdentityProviderPayload\"] = ResolversParentTypes[\"RemoveEnterpriseIdentityProviderPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tidentityProvider?: Resolver<Maybe<ResolversTypes[\"EnterpriseIdentityProvider\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveEnterpriseOrganizationPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveEnterpriseOrganizationPayload\"] = ResolversParentTypes[\"RemoveEnterpriseOrganizationPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\tviewer?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveLabelsFromLabelablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveLabelsFromLabelablePayload\"] = ResolversParentTypes[\"RemoveLabelsFromLabelablePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlabelable?: Resolver<Maybe<ResolversTypes[\"Labelable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveOutsideCollaboratorPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveOutsideCollaboratorPayload\"] = ResolversParentTypes[\"RemoveOutsideCollaboratorPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tremovedUser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveReactionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveReactionPayload\"] = ResolversParentTypes[\"RemoveReactionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\treaction?: Resolver<Maybe<ResolversTypes[\"Reaction\"]>, ParentType, ContextType>;\n\tsubject?: Resolver<Maybe<ResolversTypes[\"Reactable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemoveStarPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemoveStarPayload\"] = ResolversParentTypes[\"RemoveStarPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tstarrable?: Resolver<Maybe<ResolversTypes[\"Starrable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RemovedFromProjectEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RemovedFromProjectEvent\"] = ResolversParentTypes[\"RemovedFromProjectEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RenamedTitleEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RenamedTitleEvent\"] = ResolversParentTypes[\"RenamedTitleEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcurrentTitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpreviousTitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsubject?: Resolver<ResolversTypes[\"RenamedTitleSubject\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RenamedTitleSubjectResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RenamedTitleSubject\"] = ResolversParentTypes[\"RenamedTitleSubject\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Issue\" | \"PullRequest\", ParentType, ContextType>;\n};\n\nexport type ReopenIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReopenIssuePayload\"] = ResolversParentTypes[\"ReopenIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReopenPullRequestPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReopenPullRequestPayload\"] = ResolversParentTypes[\"ReopenPullRequestPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReopenedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReopenedEvent\"] = ResolversParentTypes[\"ReopenedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclosable?: Resolver<ResolversTypes[\"Closable\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoAccessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoAccessAuditEntry\"] = ResolversParentTypes[\"RepoAccessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoAccessAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoAddMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoAddMemberAuditEntry\"] = ResolversParentTypes[\"RepoAddMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoAddMemberAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoAddTopicAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoAddTopicAuditEntry\"] = ResolversParentTypes[\"RepoAddTopicAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType>;\n\ttopicName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoArchivedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoArchivedAuditEntry\"] = ResolversParentTypes[\"RepoArchivedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoArchivedAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoChangeMergeSettingAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"] = ResolversParentTypes[\"RepoChangeMergeSettingAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisEnabled?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\tmergeType?: Resolver<Maybe<ResolversTypes[\"RepoChangeMergeSettingAuditEntryMergeType\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigDisableAnonymousGitAccessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"] = ResolversParentTypes[\"RepoConfigDisableAnonymousGitAccessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigDisableCollaboratorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"] = ResolversParentTypes[\"RepoConfigDisableCollaboratorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigDisableContributorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"] = ResolversParentTypes[\"RepoConfigDisableContributorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigDisableSockpuppetDisallowedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"] = ResolversParentTypes[\"RepoConfigDisableSockpuppetDisallowedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigEnableAnonymousGitAccessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"] = ResolversParentTypes[\"RepoConfigEnableAnonymousGitAccessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigEnableCollaboratorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"] = ResolversParentTypes[\"RepoConfigEnableCollaboratorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigEnableContributorsOnlyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"] = ResolversParentTypes[\"RepoConfigEnableContributorsOnlyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigEnableSockpuppetDisallowedAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"] = ResolversParentTypes[\"RepoConfigEnableSockpuppetDisallowedAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigLockAnonymousGitAccessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"] = ResolversParentTypes[\"RepoConfigLockAnonymousGitAccessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoConfigUnlockAnonymousGitAccessAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"] = ResolversParentTypes[\"RepoConfigUnlockAnonymousGitAccessAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoCreateAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoCreateAuditEntry\"] = ResolversParentTypes[\"RepoCreateAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tforkParentName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tforkSourceName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoCreateAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoDestroyAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoDestroyAuditEntry\"] = ResolversParentTypes[\"RepoDestroyAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoDestroyAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoRemoveMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"] = ResolversParentTypes[\"RepoRemoveMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tvisibility?: Resolver<Maybe<ResolversTypes[\"RepoRemoveMemberAuditEntryVisibility\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepoRemoveTopicAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"] = ResolversParentTypes[\"RepoRemoveTopicAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType>;\n\ttopicName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Repository\"] = ResolversParentTypes[\"Repository\"]\n> = {\n\tassignableUsers?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryAssignableUsersArgs, never>\n\t>;\n\tbranchProtectionRules?: Resolver<\n\t\tResolversTypes[\"BranchProtectionRuleConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryBranchProtectionRulesArgs, never>\n\t>;\n\tcodeOfConduct?: Resolver<Maybe<ResolversTypes[\"CodeOfConduct\"]>, ParentType, ContextType>;\n\tcollaborators?: Resolver<\n\t\tMaybe<ResolversTypes[\"RepositoryCollaboratorConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryCollaboratorsArgs, never>\n\t>;\n\tcommitComments?: Resolver<\n\t\tResolversTypes[\"CommitCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryCommitCommentsArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdefaultBranchRef?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\tdeleteBranchOnMerge?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdeployKeys?: Resolver<\n\t\tResolversTypes[\"DeployKeyConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryDeployKeysArgs, never>\n\t>;\n\tdeployments?: Resolver<\n\t\tResolversTypes[\"DeploymentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryDeploymentsArgs, \"orderBy\">\n\t>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tdiskUsage?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tforkCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tforks?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryForksArgs, \"ownerAffiliations\">\n\t>;\n\tfundingLinks?: Resolver<Array<ResolversTypes[\"FundingLink\"]>, ParentType, ContextType>;\n\thasIssuesEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasProjectsEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasWikiEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thomepageUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisArchived?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisDisabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisEmpty?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisFork?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisLocked?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMirror?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPrivate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisTemplate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType, RequireFields<RepositoryIssueArgs, \"number\">>;\n\tissueOrPullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"IssueOrPullRequest\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryIssueOrPullRequestArgs, \"number\">\n\t>;\n\tissues?: Resolver<ResolversTypes[\"IssueConnection\"], ParentType, ContextType, RequireFields<RepositoryIssuesArgs, never>>;\n\tlabel?: Resolver<Maybe<ResolversTypes[\"Label\"]>, ParentType, ContextType, RequireFields<RepositoryLabelArgs, \"name\">>;\n\tlabels?: Resolver<\n\t\tMaybe<ResolversTypes[\"LabelConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryLabelsArgs, \"orderBy\">\n\t>;\n\tlanguages?: Resolver<\n\t\tMaybe<ResolversTypes[\"LanguageConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryLanguagesArgs, never>\n\t>;\n\tlicenseInfo?: Resolver<Maybe<ResolversTypes[\"License\"]>, ParentType, ContextType>;\n\tlockReason?: Resolver<Maybe<ResolversTypes[\"RepositoryLockReason\"]>, ParentType, ContextType>;\n\tmentionableUsers?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryMentionableUsersArgs, never>\n\t>;\n\tmergeCommitAllowed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmilestone?: Resolver<\n\t\tMaybe<ResolversTypes[\"Milestone\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryMilestoneArgs, \"number\">\n\t>;\n\tmilestones?: Resolver<\n\t\tMaybe<ResolversTypes[\"MilestoneConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryMilestonesArgs, never>\n\t>;\n\tmirrorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnameWithOwner?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tobject?: Resolver<Maybe<ResolversTypes[\"GitObject\"]>, ParentType, ContextType, RequireFields<RepositoryObjectArgs, never>>;\n\topenGraphImageUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\towner?: Resolver<ResolversTypes[\"RepositoryOwner\"], ParentType, ContextType>;\n\tpackages?: Resolver<\n\t\tResolversTypes[\"PackageConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryPackagesArgs, \"orderBy\">\n\t>;\n\tparent?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\tprimaryLanguage?: Resolver<Maybe<ResolversTypes[\"Language\"]>, ParentType, ContextType>;\n\tproject?: Resolver<\n\t\tMaybe<ResolversTypes[\"Project\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryProjectArgs, \"number\">\n\t>;\n\tprojects?: Resolver<\n\t\tResolversTypes[\"ProjectConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryProjectsArgs, never>\n\t>;\n\tprojectsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tprojectsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<\n\t\tMaybe<ResolversTypes[\"PullRequest\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryPullRequestArgs, \"number\">\n\t>;\n\tpullRequests?: Resolver<\n\t\tResolversTypes[\"PullRequestConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryPullRequestsArgs, never>\n\t>;\n\tpushedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\trebaseMergeAllowed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType, RequireFields<RepositoryRefArgs, \"qualifiedName\">>;\n\trefs?: Resolver<\n\t\tMaybe<ResolversTypes[\"RefConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryRefsArgs, \"refPrefix\">\n\t>;\n\trelease?: Resolver<\n\t\tMaybe<ResolversTypes[\"Release\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryReleaseArgs, \"tagName\">\n\t>;\n\treleases?: Resolver<\n\t\tResolversTypes[\"ReleaseConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryReleasesArgs, never>\n\t>;\n\trepositoryTopics?: Resolver<\n\t\tResolversTypes[\"RepositoryTopicConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryRepositoryTopicsArgs, never>\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tshortDescriptionHTML?: Resolver<\n\t\tResolversTypes[\"HTML\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryShortDescriptionHtmlArgs, \"limit\">\n\t>;\n\tsquashMergeAllowed?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tsshUrl?: Resolver<ResolversTypes[\"GitSSHRemote\"], ParentType, ContextType>;\n\tstargazers?: Resolver<\n\t\tResolversTypes[\"StargazerConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryStargazersArgs, never>\n\t>;\n\tsubmodules?: Resolver<\n\t\tResolversTypes[\"SubmoduleConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositorySubmodulesArgs, never>\n\t>;\n\ttempCloneToken?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\ttemplateRepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tusesCustomOpenGraphImage?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanAdminister?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanCreateProjects?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdateTopics?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerHasStarred?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerPermission?: Resolver<Maybe<ResolversTypes[\"RepositoryPermission\"]>, ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\tvulnerabilityAlerts?: Resolver<\n\t\tMaybe<ResolversTypes[\"RepositoryVulnerabilityAlertConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryVulnerabilityAlertsArgs, never>\n\t>;\n\twatchers?: Resolver<\n\t\tResolversTypes[\"UserConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryWatchersArgs, never>\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryAuditEntryData\"] = ResolversParentTypes[\"RepositoryAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"OrgRestoreMemberMembershipRepositoryAuditEntryData\"\n\t\t| \"PrivateRepositoryForkingDisableAuditEntry\"\n\t\t| \"PrivateRepositoryForkingEnableAuditEntry\"\n\t\t| \"RepoAccessAuditEntry\"\n\t\t| \"RepoAddMemberAuditEntry\"\n\t\t| \"RepoAddTopicAuditEntry\"\n\t\t| \"RepoArchivedAuditEntry\"\n\t\t| \"RepoChangeMergeSettingAuditEntry\"\n\t\t| \"RepoConfigDisableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigDisableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigDisableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigEnableAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigEnableCollaboratorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableContributorsOnlyAuditEntry\"\n\t\t| \"RepoConfigEnableSockpuppetDisallowedAuditEntry\"\n\t\t| \"RepoConfigLockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoConfigUnlockAnonymousGitAccessAuditEntry\"\n\t\t| \"RepoCreateAuditEntry\"\n\t\t| \"RepoDestroyAuditEntry\"\n\t\t| \"RepoRemoveMemberAuditEntry\"\n\t\t| \"RepoRemoveTopicAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type RepositoryCollaboratorConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryCollaboratorConnection\"] = ResolversParentTypes[\"RepositoryCollaboratorConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryCollaboratorEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryCollaboratorEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryCollaboratorEdge\"] = ResolversParentTypes[\"RepositoryCollaboratorEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\tpermission?: Resolver<ResolversTypes[\"RepositoryPermission\"], ParentType, ContextType>;\n\tpermissionSources?: Resolver<Maybe<Array<ResolversTypes[\"PermissionSource\"]>>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryConnection\"] = ResolversParentTypes[\"RepositoryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Repository\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttotalDiskUsage?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryEdge\"] = ResolversParentTypes[\"RepositoryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryInfo\"] = ResolversParentTypes[\"RepositoryInfo\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Repository\", ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tforkCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\thasIssuesEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasProjectsEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thasWikiEnabled?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\thomepageUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tisArchived?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisFork?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisLocked?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisMirror?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPrivate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisTemplate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlicenseInfo?: Resolver<Maybe<ResolversTypes[\"License\"]>, ParentType, ContextType>;\n\tlockReason?: Resolver<Maybe<ResolversTypes[\"RepositoryLockReason\"]>, ParentType, ContextType>;\n\tmirrorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnameWithOwner?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\topenGraphImageUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\towner?: Resolver<ResolversTypes[\"RepositoryOwner\"], ParentType, ContextType>;\n\tpushedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tshortDescriptionHTML?: Resolver<\n\t\tResolversTypes[\"HTML\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryInfoShortDescriptionHtmlArgs, \"limit\">\n\t>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tusesCustomOpenGraphImage?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type RepositoryInvitationResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryInvitation\"] = ResolversParentTypes[\"RepositoryInvitation\"]\n> = {\n\temail?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinvitee?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tinviter?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\tpermission?: Resolver<ResolversTypes[\"RepositoryPermission\"], ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"RepositoryInfo\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryInvitationConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryInvitationConnection\"] = ResolversParentTypes[\"RepositoryInvitationConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryInvitationEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryInvitation\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryInvitationEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryInvitationEdge\"] = ResolversParentTypes[\"RepositoryInvitationEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"RepositoryInvitation\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryNodeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryNode\"] = ResolversParentTypes[\"RepositoryNode\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"CommitCommentThread\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestCommitCommentThread\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"RepositoryVulnerabilityAlert\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n};\n\nexport type RepositoryOwnerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryOwner\"] = ResolversParentTypes[\"RepositoryOwner\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"User\", ParentType, ContextType>;\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<RepositoryOwnerAvatarUrlArgs, never>>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryOwnerRepositoriesArgs, \"ownerAffiliations\">\n\t>;\n\trepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"Repository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<RepositoryOwnerRepositoryArgs, \"name\">\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n};\n\nexport type RepositoryTopicResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryTopic\"] = ResolversParentTypes[\"RepositoryTopic\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\ttopic?: Resolver<ResolversTypes[\"Topic\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryTopicConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryTopicConnection\"] = ResolversParentTypes[\"RepositoryTopicConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryTopicEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryTopic\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryTopicEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryTopicEdge\"] = ResolversParentTypes[\"RepositoryTopicEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"RepositoryTopic\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryVisibilityChangeDisableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"] = ResolversParentTypes[\"RepositoryVisibilityChangeDisableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryVisibilityChangeEnableAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"] = ResolversParentTypes[\"RepositoryVisibilityChangeEnableAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tenterpriseResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tenterpriseSlug?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterpriseUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryVulnerabilityAlertResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryVulnerabilityAlert\"] = ResolversParentTypes[\"RepositoryVulnerabilityAlert\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdismissReason?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdismissedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tdismisser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tsecurityAdvisory?: Resolver<Maybe<ResolversTypes[\"SecurityAdvisory\"]>, ParentType, ContextType>;\n\tsecurityVulnerability?: Resolver<Maybe<ResolversTypes[\"SecurityVulnerability\"]>, ParentType, ContextType>;\n\tvulnerableManifestFilename?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tvulnerableManifestPath?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tvulnerableRequirements?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryVulnerabilityAlertConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryVulnerabilityAlertConnection\"] = ResolversParentTypes[\"RepositoryVulnerabilityAlertConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryVulnerabilityAlertEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"RepositoryVulnerabilityAlert\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RepositoryVulnerabilityAlertEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RepositoryVulnerabilityAlertEdge\"] = ResolversParentTypes[\"RepositoryVulnerabilityAlertEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"RepositoryVulnerabilityAlert\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RequestReviewsPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RequestReviewsPayload\"] = ResolversParentTypes[\"RequestReviewsPayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\trequestedReviewersEdge?: Resolver<Maybe<ResolversTypes[\"UserEdge\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RequestedReviewerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RequestedReviewer\"] = ResolversParentTypes[\"RequestedReviewer\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Mannequin\" | \"Team\" | \"User\", ParentType, ContextType>;\n};\n\nexport type ResolveReviewThreadPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ResolveReviewThreadPayload\"] = ResolversParentTypes[\"ResolveReviewThreadPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tthread?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewThread\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type RestrictedContributionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"RestrictedContribution\"] = ResolversParentTypes[\"RestrictedContribution\"]\n> = {\n\tisRestricted?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\toccurredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewDismissalAllowanceResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewDismissalAllowance\"] = ResolversParentTypes[\"ReviewDismissalAllowance\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"ReviewDismissalAllowanceActor\"]>, ParentType, ContextType>;\n\tbranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewDismissalAllowanceActorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewDismissalAllowanceActor\"] = ResolversParentTypes[\"ReviewDismissalAllowanceActor\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Team\" | \"User\", ParentType, ContextType>;\n};\n\nexport type ReviewDismissalAllowanceConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewDismissalAllowanceConnection\"] = ResolversParentTypes[\"ReviewDismissalAllowanceConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReviewDismissalAllowanceEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReviewDismissalAllowance\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewDismissalAllowanceEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewDismissalAllowanceEdge\"] = ResolversParentTypes[\"ReviewDismissalAllowanceEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ReviewDismissalAllowance\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewDismissedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewDismissedEvent\"] = ResolversParentTypes[\"ReviewDismissedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdismissalMessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdismissalMessageHTML?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpreviousReviewState?: Resolver<ResolversTypes[\"PullRequestReviewState\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\tpullRequestCommit?: Resolver<Maybe<ResolversTypes[\"PullRequestCommit\"]>, ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\treview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewRequestResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewRequest\"] = ResolversParentTypes[\"ReviewRequest\"]\n> = {\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\trequestedReviewer?: Resolver<Maybe<ResolversTypes[\"RequestedReviewer\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewRequestConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewRequestConnection\"] = ResolversParentTypes[\"ReviewRequestConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReviewRequestEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"ReviewRequest\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewRequestEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewRequestEdge\"] = ResolversParentTypes[\"ReviewRequestEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"ReviewRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewRequestRemovedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewRequestRemovedEvent\"] = ResolversParentTypes[\"ReviewRequestRemovedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\trequestedReviewer?: Resolver<Maybe<ResolversTypes[\"RequestedReviewer\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewRequestedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewRequestedEvent\"] = ResolversParentTypes[\"ReviewRequestedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tpullRequest?: Resolver<ResolversTypes[\"PullRequest\"], ParentType, ContextType>;\n\trequestedReviewer?: Resolver<Maybe<ResolversTypes[\"RequestedReviewer\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ReviewStatusHovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ReviewStatusHovercardContext\"] = ResolversParentTypes[\"ReviewStatusHovercardContext\"]\n> = {\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\treviewDecision?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewDecision\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SavedReplyResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SavedReply\"] = ResolversParentTypes[\"SavedReply\"]\n> = {\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SavedReplyConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SavedReplyConnection\"] = ResolversParentTypes[\"SavedReplyConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SavedReplyEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SavedReply\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SavedReplyEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SavedReplyEdge\"] = ResolversParentTypes[\"SavedReplyEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"SavedReply\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SearchResultItemResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SearchResultItem\"] = ResolversParentTypes[\"SearchResultItem\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t\"App\" | \"Issue\" | \"MarketplaceListing\" | \"Organization\" | \"PullRequest\" | \"Repository\" | \"User\",\n\t\tParentType,\n\t\tContextType\n\t>;\n};\n\nexport type SearchResultItemConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SearchResultItemConnection\"] = ResolversParentTypes[\"SearchResultItemConnection\"]\n> = {\n\tcodeCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SearchResultItemEdge\"]>>>, ParentType, ContextType>;\n\tissueCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SearchResultItem\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\trepositoryCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tuserCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\twikiCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SearchResultItemEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SearchResultItemEdge\"] = ResolversParentTypes[\"SearchResultItemEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"SearchResultItem\"]>, ParentType, ContextType>;\n\ttextMatches?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TextMatch\"]>>>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisory\"] = ResolversParentTypes[\"SecurityAdvisory\"]\n> = {\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tghsaId?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tidentifiers?: Resolver<Array<ResolversTypes[\"SecurityAdvisoryIdentifier\"]>, ParentType, ContextType>;\n\torigin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpermalink?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tpublishedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\treferences?: Resolver<Array<ResolversTypes[\"SecurityAdvisoryReference\"]>, ParentType, ContextType>;\n\tseverity?: Resolver<ResolversTypes[\"SecurityAdvisorySeverity\"], ParentType, ContextType>;\n\tsummary?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tvulnerabilities?: Resolver<\n\t\tResolversTypes[\"SecurityVulnerabilityConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<SecurityAdvisoryVulnerabilitiesArgs, \"orderBy\">\n\t>;\n\twithdrawnAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryConnection\"] = ResolversParentTypes[\"SecurityAdvisoryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SecurityAdvisoryEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SecurityAdvisory\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryEdge\"] = ResolversParentTypes[\"SecurityAdvisoryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"SecurityAdvisory\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryIdentifierResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryIdentifier\"] = ResolversParentTypes[\"SecurityAdvisoryIdentifier\"]\n> = {\n\ttype?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tvalue?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryPackageResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryPackage\"] = ResolversParentTypes[\"SecurityAdvisoryPackage\"]\n> = {\n\tecosystem?: Resolver<ResolversTypes[\"SecurityAdvisoryEcosystem\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryPackageVersionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryPackageVersion\"] = ResolversParentTypes[\"SecurityAdvisoryPackageVersion\"]\n> = {\n\tidentifier?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityAdvisoryReferenceResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityAdvisoryReference\"] = ResolversParentTypes[\"SecurityAdvisoryReference\"]\n> = {\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityVulnerabilityResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityVulnerability\"] = ResolversParentTypes[\"SecurityVulnerability\"]\n> = {\n\tadvisory?: Resolver<ResolversTypes[\"SecurityAdvisory\"], ParentType, ContextType>;\n\tfirstPatchedVersion?: Resolver<Maybe<ResolversTypes[\"SecurityAdvisoryPackageVersion\"]>, ParentType, ContextType>;\n\tpackage?: Resolver<ResolversTypes[\"SecurityAdvisoryPackage\"], ParentType, ContextType>;\n\tseverity?: Resolver<ResolversTypes[\"SecurityAdvisorySeverity\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tvulnerableVersionRange?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityVulnerabilityConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityVulnerabilityConnection\"] = ResolversParentTypes[\"SecurityVulnerabilityConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SecurityVulnerabilityEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SecurityVulnerability\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SecurityVulnerabilityEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SecurityVulnerabilityEdge\"] = ResolversParentTypes[\"SecurityVulnerabilityEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"SecurityVulnerability\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SetEnterpriseIdentityProviderPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SetEnterpriseIdentityProviderPayload\"] = ResolversParentTypes[\"SetEnterpriseIdentityProviderPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tidentityProvider?: Resolver<Maybe<ResolversTypes[\"EnterpriseIdentityProvider\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SmimeSignatureResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SmimeSignature\"] = ResolversParentTypes[\"SmimeSignature\"]\n> = {\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisValid?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tpayload?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsignature?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsigner?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"GitSignatureState\"], ParentType, ContextType>;\n\twasSignedByGitHub?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Sponsor\"] = ResolversParentTypes[\"Sponsor\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"User\", ParentType, ContextType>;\n};\n\nexport type SponsorableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Sponsorable\"] = ResolversParentTypes[\"Sponsorable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Organization\" | \"User\", ParentType, ContextType>;\n\tsponsorsListing?: Resolver<Maybe<ResolversTypes[\"SponsorsListing\"]>, ParentType, ContextType>;\n\tsponsorshipsAsMaintainer?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<SponsorableSponsorshipsAsMaintainerArgs, \"includePrivate\">\n\t>;\n\tsponsorshipsAsSponsor?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<SponsorableSponsorshipsAsSponsorArgs, never>\n\t>;\n};\n\nexport type SponsorsListingResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorsListing\"] = ResolversParentTypes[\"SponsorsListing\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tfullDescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tfullDescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tshortDescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\ttiers?: Resolver<\n\t\tMaybe<ResolversTypes[\"SponsorsTierConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<SponsorsListingTiersArgs, \"orderBy\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorsTierResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorsTier\"] = ResolversParentTypes[\"SponsorsTier\"]\n> = {\n\tadminInfo?: Resolver<Maybe<ResolversTypes[\"SponsorsTierAdminInfo\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdescription?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tdescriptionHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmonthlyPriceInCents?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tmonthlyPriceInDollars?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsponsorsListing?: Resolver<ResolversTypes[\"SponsorsListing\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorsTierAdminInfoResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorsTierAdminInfo\"] = ResolversParentTypes[\"SponsorsTierAdminInfo\"]\n> = {\n\tsponsorships?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<SponsorsTierAdminInfoSponsorshipsArgs, \"includePrivate\">\n\t>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorsTierConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorsTierConnection\"] = ResolversParentTypes[\"SponsorsTierConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SponsorsTierEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SponsorsTier\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorsTierEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorsTierEdge\"] = ResolversParentTypes[\"SponsorsTierEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"SponsorsTier\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorshipResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Sponsorship\"] = ResolversParentTypes[\"Sponsorship\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmaintainer?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\tprivacyLevel?: Resolver<ResolversTypes[\"SponsorshipPrivacy\"], ParentType, ContextType>;\n\tsponsor?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tsponsorEntity?: Resolver<Maybe<ResolversTypes[\"Sponsor\"]>, ParentType, ContextType>;\n\tsponsorable?: Resolver<ResolversTypes[\"Sponsorable\"], ParentType, ContextType>;\n\ttier?: Resolver<Maybe<ResolversTypes[\"SponsorsTier\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorshipConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorshipConnection\"] = ResolversParentTypes[\"SponsorshipConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SponsorshipEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Sponsorship\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SponsorshipEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SponsorshipEdge\"] = ResolversParentTypes[\"SponsorshipEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Sponsorship\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StargazerConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StargazerConnection\"] = ResolversParentTypes[\"StargazerConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"StargazerEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StargazerEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StargazerEdge\"] = ResolversParentTypes[\"StargazerEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\tstarredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StarrableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Starrable\"] = ResolversParentTypes[\"Starrable\"]\n> = {\n\t__resolveType: TypeResolveFn<\"Gist\" | \"Repository\" | \"Topic\", ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tstargazers?: Resolver<\n\t\tResolversTypes[\"StargazerConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<StarrableStargazersArgs, never>\n\t>;\n\tviewerHasStarred?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type StarredRepositoryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StarredRepositoryConnection\"] = ResolversParentTypes[\"StarredRepositoryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"StarredRepositoryEdge\"]>>>, ParentType, ContextType>;\n\tisOverLimit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Repository\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StarredRepositoryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StarredRepositoryEdge\"] = ResolversParentTypes[\"StarredRepositoryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tstarredAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StatusResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Status\"] = ResolversParentTypes[\"Status\"]\n> = {\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcontext?: Resolver<\n\t\tMaybe<ResolversTypes[\"StatusContext\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<StatusContextArgs, \"name\">\n\t>;\n\tcontexts?: Resolver<Array<ResolversTypes[\"StatusContext\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"StatusState\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StatusCheckRollupResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StatusCheckRollup\"] = ResolversParentTypes[\"StatusCheckRollup\"]\n> = {\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcontexts?: Resolver<\n\t\tResolversTypes[\"StatusCheckRollupContextConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<StatusCheckRollupContextsArgs, never>\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"StatusState\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StatusCheckRollupContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StatusCheckRollupContext\"] = ResolversParentTypes[\"StatusCheckRollupContext\"]\n> = {\n\t__resolveType: TypeResolveFn<\"StatusContext\", ParentType, ContextType>;\n};\n\nexport type StatusCheckRollupContextConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StatusCheckRollupContextConnection\"] = ResolversParentTypes[\"StatusCheckRollupContextConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"StatusCheckRollupContextEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"StatusCheckRollupContext\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StatusCheckRollupContextEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StatusCheckRollupContextEdge\"] = ResolversParentTypes[\"StatusCheckRollupContextEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"StatusCheckRollupContext\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type StatusContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"StatusContext\"] = ResolversParentTypes[\"StatusContext\"]\n> = {\n\tavatarUrl?: Resolver<\n\t\tMaybe<ResolversTypes[\"URI\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<StatusContextAvatarUrlArgs, \"size\">\n\t>;\n\tcommit?: Resolver<Maybe<ResolversTypes[\"Commit\"]>, ParentType, ContextType>;\n\tcontext?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreator?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"StatusState\"], ParentType, ContextType>;\n\ttargetUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SubmitPullRequestReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SubmitPullRequestReviewPayload\"] = ResolversParentTypes[\"SubmitPullRequestReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SubmoduleResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Submodule\"] = ResolversParentTypes[\"Submodule\"]\n> = {\n\tbranch?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tgitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tpath?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsubprojectCommitOid?: Resolver<Maybe<ResolversTypes[\"GitObjectID\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SubmoduleConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SubmoduleConnection\"] = ResolversParentTypes[\"SubmoduleConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"SubmoduleEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Submodule\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SubmoduleEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SubmoduleEdge\"] = ResolversParentTypes[\"SubmoduleEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Submodule\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SubscribableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Subscribable\"] = ResolversParentTypes[\"Subscribable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t\"Commit\" | \"Issue\" | \"PullRequest\" | \"Repository\" | \"Team\" | \"TeamDiscussion\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n};\n\nexport type SubscribedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SubscribedEvent\"] = ResolversParentTypes[\"SubscribedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tsubscribable?: Resolver<ResolversTypes[\"Subscribable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type SuggestedReviewerResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"SuggestedReviewer\"] = ResolversParentTypes[\"SuggestedReviewer\"]\n> = {\n\tisAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisCommenter?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\treviewer?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TagResolvers<ContextType = any, ParentType extends ResolversParentTypes[\"Tag\"] = ResolversParentTypes[\"Tag\"]> = {\n\tabbreviatedOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcommitResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\ttagger?: Resolver<Maybe<ResolversTypes[\"GitActor\"]>, ParentType, ContextType>;\n\ttarget?: Resolver<ResolversTypes[\"GitObject\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Team\"] = ResolversParentTypes[\"Team\"]\n> = {\n\tancestors?: Resolver<ResolversTypes[\"TeamConnection\"], ParentType, ContextType, RequireFields<TeamAncestorsArgs, never>>;\n\tavatarUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType, RequireFields<TeamAvatarUrlArgs, \"size\">>;\n\tchildTeams?: Resolver<\n\t\tResolversTypes[\"TeamConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamChildTeamsArgs, \"immediateOnly\">\n\t>;\n\tcombinedSlug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdescription?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tdiscussion?: Resolver<\n\t\tMaybe<ResolversTypes[\"TeamDiscussion\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionArgs, \"number\">\n\t>;\n\tdiscussions?: Resolver<\n\t\tResolversTypes[\"TeamDiscussionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionsArgs, never>\n\t>;\n\tdiscussionsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tdiscussionsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\teditTeamResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\teditTeamUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tinvitations?: Resolver<\n\t\tMaybe<ResolversTypes[\"OrganizationInvitationConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamInvitationsArgs, never>\n\t>;\n\tmemberStatuses?: Resolver<\n\t\tResolversTypes[\"UserStatusConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamMemberStatusesArgs, \"orderBy\">\n\t>;\n\tmembers?: Resolver<\n\t\tResolversTypes[\"TeamMemberConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamMembersArgs, \"membership\">\n\t>;\n\tmembersResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tmembersUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnewTeamResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tnewTeamUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\torganization?: Resolver<ResolversTypes[\"Organization\"], ParentType, ContextType>;\n\tparentTeam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tprivacy?: Resolver<ResolversTypes[\"TeamPrivacy\"], ParentType, ContextType>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"TeamRepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamRepositoriesArgs, never>\n\t>;\n\trepositoriesResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\trepositoriesUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tslug?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tteamsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tteamsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanAdminister?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamAddMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamAddMemberAuditEntry\"] = ResolversParentTypes[\"TeamAddMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisLdapMapped?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamAddRepositoryAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"] = ResolversParentTypes[\"TeamAddRepositoryAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisLdapMapped?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamAuditEntryData\"] = ResolversParentTypes[\"TeamAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"OrgRestoreMemberMembershipTeamAuditEntryData\"\n\t\t| \"TeamAddMemberAuditEntry\"\n\t\t| \"TeamAddRepositoryAuditEntry\"\n\t\t| \"TeamChangeParentTeamAuditEntry\"\n\t\t| \"TeamRemoveMemberAuditEntry\"\n\t\t| \"TeamRemoveRepositoryAuditEntry\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n};\n\nexport type TeamChangeParentTeamAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"] = ResolversParentTypes[\"TeamChangeParentTeamAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisLdapMapped?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tparentTeam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tparentTeamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tparentTeamNameWas?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tparentTeamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tparentTeamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tparentTeamWas?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tparentTeamWasResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tparentTeamWasUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamConnection\"] = ResolversParentTypes[\"TeamConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Team\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussion\"] = ResolversParentTypes[\"TeamDiscussion\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyVersion?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcomments?: Resolver<\n\t\tResolversTypes[\"TeamDiscussionCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionCommentsArgs, never>\n\t>;\n\tcommentsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommentsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPinned?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisPrivate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionReactionsArgs, never>\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tteam?: Resolver<ResolversTypes[\"Team\"], ParentType, ContextType>;\n\ttitle?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanPin?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanSubscribe?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerSubscription?: Resolver<Maybe<ResolversTypes[\"SubscriptionState\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussionComment\"] = ResolversParentTypes[\"TeamDiscussionComment\"]\n> = {\n\tauthor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tauthorAssociation?: Resolver<ResolversTypes[\"CommentAuthorAssociation\"], ParentType, ContextType>;\n\tbody?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tbodyText?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tbodyVersion?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tcreatedViaEmail?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\tdiscussion?: Resolver<ResolversTypes[\"TeamDiscussion\"], ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tincludesCreatedEdit?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tlastEditedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tnumber?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tpublishedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\treactionGroups?: Resolver<Maybe<Array<ResolversTypes[\"ReactionGroup\"]>>, ParentType, ContextType>;\n\treactions?: Resolver<\n\t\tResolversTypes[\"ReactionConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionCommentReactionsArgs, never>\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tuserContentEdits?: Resolver<\n\t\tMaybe<ResolversTypes[\"UserContentEditConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TeamDiscussionCommentUserContentEditsArgs, never>\n\t>;\n\tviewerCanDelete?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanReact?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n\tviewerDidAuthor?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionCommentConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussionCommentConnection\"] = ResolversParentTypes[\"TeamDiscussionCommentConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamDiscussionCommentEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamDiscussionComment\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionCommentEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussionCommentEdge\"] = ResolversParentTypes[\"TeamDiscussionCommentEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"TeamDiscussionComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussionConnection\"] = ResolversParentTypes[\"TeamDiscussionConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamDiscussionEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamDiscussion\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamDiscussionEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamDiscussionEdge\"] = ResolversParentTypes[\"TeamDiscussionEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"TeamDiscussion\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamEdge\"] = ResolversParentTypes[\"TeamEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamMemberConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamMemberConnection\"] = ResolversParentTypes[\"TeamMemberConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamMemberEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamMemberEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamMemberEdge\"] = ResolversParentTypes[\"TeamMemberEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tmemberAccessResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tmemberAccessUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\trole?: Resolver<ResolversTypes[\"TeamMemberRole\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamRemoveMemberAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"] = ResolversParentTypes[\"TeamRemoveMemberAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisLdapMapped?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamRemoveRepositoryAuditEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"] = ResolversParentTypes[\"TeamRemoveRepositoryAuditEntry\"]\n> = {\n\taction?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tactor?: Resolver<Maybe<ResolversTypes[\"AuditEntryActor\"]>, ParentType, ContextType>;\n\tactorIp?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorLocation?: Resolver<Maybe<ResolversTypes[\"ActorLocation\"]>, ParentType, ContextType>;\n\tactorLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tactorResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tactorUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"PreciseDateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisLdapMapped?: Resolver<Maybe<ResolversTypes[\"Boolean\"]>, ParentType, ContextType>;\n\toperationType?: Resolver<Maybe<ResolversTypes[\"OperationType\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\torganizationName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganizationResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\torganizationUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\trepositoryName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepositoryResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\trepositoryUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteam?: Resolver<Maybe<ResolversTypes[\"Team\"]>, ParentType, ContextType>;\n\tteamName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tteamUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tuserLogin?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuserResourcePath?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\tuserUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamRepositoryConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamRepositoryConnection\"] = ResolversParentTypes[\"TeamRepositoryConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"TeamRepositoryEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"Repository\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TeamRepositoryEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TeamRepositoryEdge\"] = ResolversParentTypes[\"TeamRepositoryEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tpermission?: Resolver<ResolversTypes[\"RepositoryPermission\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TextMatchResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TextMatch\"] = ResolversParentTypes[\"TextMatch\"]\n> = {\n\tfragment?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\thighlights?: Resolver<Array<ResolversTypes[\"TextMatchHighlight\"]>, ParentType, ContextType>;\n\tproperty?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TextMatchHighlightResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TextMatchHighlight\"] = ResolversParentTypes[\"TextMatchHighlight\"]\n> = {\n\tbeginIndice?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tendIndice?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\ttext?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TopicResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Topic\"] = ResolversParentTypes[\"Topic\"]\n> = {\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\trelatedTopics?: Resolver<\n\t\tArray<ResolversTypes[\"Topic\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TopicRelatedTopicsArgs, \"first\">\n\t>;\n\tstargazers?: Resolver<\n\t\tResolversTypes[\"StargazerConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<TopicStargazersArgs, never>\n\t>;\n\tviewerHasStarred?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TopicAuditEntryDataResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TopicAuditEntryData\"] = ResolversParentTypes[\"TopicAuditEntryData\"]\n> = {\n\t__resolveType: TypeResolveFn<\"RepoAddTopicAuditEntry\" | \"RepoRemoveTopicAuditEntry\", ParentType, ContextType>;\n\ttopic?: Resolver<Maybe<ResolversTypes[\"Topic\"]>, ParentType, ContextType>;\n\ttopicName?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n};\n\nexport type TransferIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TransferIssuePayload\"] = ResolversParentTypes[\"TransferIssuePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TransferredEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TransferredEvent\"] = ResolversParentTypes[\"TransferredEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tfromRepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissue?: Resolver<ResolversTypes[\"Issue\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TreeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Tree\"] = ResolversParentTypes[\"Tree\"]\n> = {\n\tabbreviatedOid?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tcommitResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tcommitUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tentries?: Resolver<Maybe<Array<ResolversTypes[\"TreeEntry\"]>>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type TreeEntryResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"TreeEntry\"] = ResolversParentTypes[\"TreeEntry\"]\n> = {\n\tmode?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tname?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tobject?: Resolver<Maybe<ResolversTypes[\"GitObject\"]>, ParentType, ContextType>;\n\toid?: Resolver<ResolversTypes[\"GitObjectID\"], ParentType, ContextType>;\n\trepository?: Resolver<ResolversTypes[\"Repository\"], ParentType, ContextType>;\n\tsubmodule?: Resolver<Maybe<ResolversTypes[\"Submodule\"]>, ParentType, ContextType>;\n\ttype?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport interface UriScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"URI\"], any> {\n\tname: \"URI\";\n}\n\nexport type UnarchiveRepositoryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnarchiveRepositoryPayload\"] = ResolversParentTypes[\"UnarchiveRepositoryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnassignedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnassignedEvent\"] = ResolversParentTypes[\"UnassignedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tassignable?: Resolver<ResolversTypes[\"Assignable\"], ParentType, ContextType>;\n\tassignee?: Resolver<Maybe<ResolversTypes[\"Assignee\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnfollowUserPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnfollowUserPayload\"] = ResolversParentTypes[\"UnfollowUserPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tuser?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UniformResourceLocatableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UniformResourceLocatable\"] = ResolversParentTypes[\"UniformResourceLocatable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"Bot\"\n\t\t| \"ClosedEvent\"\n\t\t| \"Commit\"\n\t\t| \"ConvertToDraftEvent\"\n\t\t| \"CrossReferencedEvent\"\n\t\t| \"Gist\"\n\t\t| \"Issue\"\n\t\t| \"Mannequin\"\n\t\t| \"MergedEvent\"\n\t\t| \"Milestone\"\n\t\t| \"Organization\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestCommit\"\n\t\t| \"ReadyForReviewEvent\"\n\t\t| \"Release\"\n\t\t| \"Repository\"\n\t\t| \"RepositoryTopic\"\n\t\t| \"ReviewDismissedEvent\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\"\n\t\t| \"User\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n};\n\nexport type UnknownSignatureResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnknownSignature\"] = ResolversParentTypes[\"UnknownSignature\"]\n> = {\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tisValid?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tpayload?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsignature?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tsigner?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\tstate?: Resolver<ResolversTypes[\"GitSignatureState\"], ParentType, ContextType>;\n\twasSignedByGitHub?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnlabeledEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnlabeledEvent\"] = ResolversParentTypes[\"UnlabeledEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlabel?: Resolver<ResolversTypes[\"Label\"], ParentType, ContextType>;\n\tlabelable?: Resolver<ResolversTypes[\"Labelable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnlinkRepositoryFromProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnlinkRepositoryFromProjectPayload\"] = ResolversParentTypes[\"UnlinkRepositoryFromProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnlockLockablePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnlockLockablePayload\"] = ResolversParentTypes[\"UnlockLockablePayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tunlockedRecord?: Resolver<Maybe<ResolversTypes[\"Lockable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnlockedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnlockedEvent\"] = ResolversParentTypes[\"UnlockedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tlockable?: Resolver<ResolversTypes[\"Lockable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnmarkIssueAsDuplicatePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnmarkIssueAsDuplicatePayload\"] = ResolversParentTypes[\"UnmarkIssueAsDuplicatePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tduplicate?: Resolver<Maybe<ResolversTypes[\"IssueOrPullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnmarkedAsDuplicateEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnmarkedAsDuplicateEvent\"] = ResolversParentTypes[\"UnmarkedAsDuplicateEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnminimizeCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnminimizeCommentPayload\"] = ResolversParentTypes[\"UnminimizeCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tunminimizedComment?: Resolver<Maybe<ResolversTypes[\"Minimizable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnpinnedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnpinnedEvent\"] = ResolversParentTypes[\"UnpinnedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tissue?: Resolver<ResolversTypes[\"Issue\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnresolveReviewThreadPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnresolveReviewThreadPayload\"] = ResolversParentTypes[\"UnresolveReviewThreadPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tthread?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewThread\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UnsubscribedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UnsubscribedEvent\"] = ResolversParentTypes[\"UnsubscribedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tsubscribable?: Resolver<ResolversTypes[\"Subscribable\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdatableResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"Updatable\"] = ResolversParentTypes[\"Updatable\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"GistComment\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"Project\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tviewerCanUpdate?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n};\n\nexport type UpdatableCommentResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdatableComment\"] = ResolversParentTypes[\"UpdatableComment\"]\n> = {\n\t__resolveType: TypeResolveFn<\n\t\t| \"CommitComment\"\n\t\t| \"GistComment\"\n\t\t| \"Issue\"\n\t\t| \"IssueComment\"\n\t\t| \"PullRequest\"\n\t\t| \"PullRequestReview\"\n\t\t| \"PullRequestReviewComment\"\n\t\t| \"TeamDiscussion\"\n\t\t| \"TeamDiscussionComment\",\n\t\tParentType,\n\t\tContextType\n\t>;\n\tviewerCannotUpdateReasons?: Resolver<Array<ResolversTypes[\"CommentCannotUpdateReason\"]>, ParentType, ContextType>;\n};\n\nexport type UpdateBranchProtectionRulePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateBranchProtectionRulePayload\"] = ResolversParentTypes[\"UpdateBranchProtectionRulePayload\"]\n> = {\n\tbranchProtectionRule?: Resolver<Maybe<ResolversTypes[\"BranchProtectionRule\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseActionExecutionCapabilitySettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseActionExecutionCapabilitySettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseActionExecutionCapabilitySettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseAdministratorRolePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseAdministratorRolePayload\"] = ResolversParentTypes[\"UpdateEnterpriseAdministratorRolePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanMakePurchasesSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanMakePurchasesSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanMakePurchasesSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseOrganizationProjectsSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseOrganizationProjectsSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseOrganizationProjectsSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseProfilePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseProfilePayload\"] = ResolversParentTypes[\"UpdateEnterpriseProfilePayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseRepositoryProjectsSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseRepositoryProjectsSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseRepositoryProjectsSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseTeamDiscussionsSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseTeamDiscussionsSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseTeamDiscussionsSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\"] = ResolversParentTypes[\"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tenterprise?: Resolver<Maybe<ResolversTypes[\"Enterprise\"]>, ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateIpAllowListEnabledSettingPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateIpAllowListEnabledSettingPayload\"] = ResolversParentTypes[\"UpdateIpAllowListEnabledSettingPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\towner?: Resolver<Maybe<ResolversTypes[\"IpAllowListOwner\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateIpAllowListEntryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateIpAllowListEntryPayload\"] = ResolversParentTypes[\"UpdateIpAllowListEntryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tipAllowListEntry?: Resolver<Maybe<ResolversTypes[\"IpAllowListEntry\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateIssueCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateIssueCommentPayload\"] = ResolversParentTypes[\"UpdateIssueCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissueComment?: Resolver<Maybe<ResolversTypes[\"IssueComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateIssuePayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateIssuePayload\"] = ResolversParentTypes[\"UpdateIssuePayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tissue?: Resolver<Maybe<ResolversTypes[\"Issue\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateProjectCardPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateProjectCardPayload\"] = ResolversParentTypes[\"UpdateProjectCardPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tprojectCard?: Resolver<Maybe<ResolversTypes[\"ProjectCard\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateProjectColumnPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateProjectColumnPayload\"] = ResolversParentTypes[\"UpdateProjectColumnPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tprojectColumn?: Resolver<Maybe<ResolversTypes[\"ProjectColumn\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateProjectPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateProjectPayload\"] = ResolversParentTypes[\"UpdateProjectPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdatePullRequestPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdatePullRequestPayload\"] = ResolversParentTypes[\"UpdatePullRequestPayload\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequest?: Resolver<Maybe<ResolversTypes[\"PullRequest\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdatePullRequestReviewCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdatePullRequestReviewCommentPayload\"] = ResolversParentTypes[\"UpdatePullRequestReviewCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReviewComment?: Resolver<Maybe<ResolversTypes[\"PullRequestReviewComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdatePullRequestReviewPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdatePullRequestReviewPayload\"] = ResolversParentTypes[\"UpdatePullRequestReviewPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tpullRequestReview?: Resolver<Maybe<ResolversTypes[\"PullRequestReview\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateRefPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateRefPayload\"] = ResolversParentTypes[\"UpdateRefPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tref?: Resolver<Maybe<ResolversTypes[\"Ref\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateRepositoryPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateRepositoryPayload\"] = ResolversParentTypes[\"UpdateRepositoryPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateSubscriptionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateSubscriptionPayload\"] = ResolversParentTypes[\"UpdateSubscriptionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tsubscribable?: Resolver<Maybe<ResolversTypes[\"Subscribable\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateTeamDiscussionCommentPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateTeamDiscussionCommentPayload\"] = ResolversParentTypes[\"UpdateTeamDiscussionCommentPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamDiscussionComment?: Resolver<Maybe<ResolversTypes[\"TeamDiscussionComment\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateTeamDiscussionPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateTeamDiscussionPayload\"] = ResolversParentTypes[\"UpdateTeamDiscussionPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tteamDiscussion?: Resolver<Maybe<ResolversTypes[\"TeamDiscussion\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UpdateTopicsPayloadResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UpdateTopicsPayload\"] = ResolversParentTypes[\"UpdateTopicsPayload\"]\n> = {\n\tclientMutationId?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tinvalidTopicNames?: Resolver<Maybe<Array<ResolversTypes[\"String\"]>>, ParentType, ContextType>;\n\trepository?: Resolver<Maybe<ResolversTypes[\"Repository\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"User\"] = ResolversParentTypes[\"User\"]\n> = {\n\tanyPinnableItems?: Resolver<\n\t\tResolversTypes[\"Boolean\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserAnyPinnableItemsArgs, never>\n\t>;\n\tavatarUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType, RequireFields<UserAvatarUrlArgs, never>>;\n\tbio?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tbioHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tcommitComments?: Resolver<\n\t\tResolversTypes[\"CommitCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserCommitCommentsArgs, never>\n\t>;\n\tcompany?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tcompanyHTML?: Resolver<ResolversTypes[\"HTML\"], ParentType, ContextType>;\n\tcontributionsCollection?: Resolver<\n\t\tResolversTypes[\"ContributionsCollection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserContributionsCollectionArgs, never>\n\t>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdatabaseId?: Resolver<Maybe<ResolversTypes[\"Int\"]>, ParentType, ContextType>;\n\temail?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tfollowers?: Resolver<\n\t\tResolversTypes[\"FollowerConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserFollowersArgs, never>\n\t>;\n\tfollowing?: Resolver<\n\t\tResolversTypes[\"FollowingConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserFollowingArgs, never>\n\t>;\n\tgist?: Resolver<Maybe<ResolversTypes[\"Gist\"]>, ParentType, ContextType, RequireFields<UserGistArgs, \"name\">>;\n\tgistComments?: Resolver<\n\t\tResolversTypes[\"GistCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserGistCommentsArgs, never>\n\t>;\n\tgists?: Resolver<ResolversTypes[\"GistConnection\"], ParentType, ContextType, RequireFields<UserGistsArgs, never>>;\n\thovercard?: Resolver<ResolversTypes[\"Hovercard\"], ParentType, ContextType, RequireFields<UserHovercardArgs, never>>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tisBountyHunter?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisCampusExpert?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisDeveloperProgramMember?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisEmployee?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisHireable?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisSiteAdmin?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tisViewer?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tissueComments?: Resolver<\n\t\tResolversTypes[\"IssueCommentConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserIssueCommentsArgs, never>\n\t>;\n\tissues?: Resolver<ResolversTypes[\"IssueConnection\"], ParentType, ContextType, RequireFields<UserIssuesArgs, never>>;\n\titemShowcase?: Resolver<ResolversTypes[\"ProfileItemShowcase\"], ParentType, ContextType>;\n\tlocation?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tlogin?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tname?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganization?: Resolver<\n\t\tMaybe<ResolversTypes[\"Organization\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserOrganizationArgs, \"login\">\n\t>;\n\torganizationVerifiedDomainEmails?: Resolver<\n\t\tArray<ResolversTypes[\"String\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserOrganizationVerifiedDomainEmailsArgs, \"login\">\n\t>;\n\torganizations?: Resolver<\n\t\tResolversTypes[\"OrganizationConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserOrganizationsArgs, never>\n\t>;\n\tpackages?: Resolver<\n\t\tResolversTypes[\"PackageConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserPackagesArgs, \"orderBy\">\n\t>;\n\tpinnableItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserPinnableItemsArgs, never>\n\t>;\n\tpinnedItems?: Resolver<\n\t\tResolversTypes[\"PinnableItemConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserPinnedItemsArgs, never>\n\t>;\n\tpinnedItemsRemaining?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\tproject?: Resolver<Maybe<ResolversTypes[\"Project\"]>, ParentType, ContextType, RequireFields<UserProjectArgs, \"number\">>;\n\tprojects?: Resolver<ResolversTypes[\"ProjectConnection\"], ParentType, ContextType, RequireFields<UserProjectsArgs, never>>;\n\tprojectsResourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tprojectsUrl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tpublicKeys?: Resolver<\n\t\tResolversTypes[\"PublicKeyConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserPublicKeysArgs, never>\n\t>;\n\tpullRequests?: Resolver<\n\t\tResolversTypes[\"PullRequestConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserPullRequestsArgs, never>\n\t>;\n\trepositories?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserRepositoriesArgs, \"ownerAffiliations\">\n\t>;\n\trepositoriesContributedTo?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserRepositoriesContributedToArgs, never>\n\t>;\n\trepository?: Resolver<\n\t\tMaybe<ResolversTypes[\"Repository\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserRepositoryArgs, \"name\">\n\t>;\n\tresourcePath?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tsavedReplies?: Resolver<\n\t\tMaybe<ResolversTypes[\"SavedReplyConnection\"]>,\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserSavedRepliesArgs, \"orderBy\">\n\t>;\n\tsponsorsListing?: Resolver<Maybe<ResolversTypes[\"SponsorsListing\"]>, ParentType, ContextType>;\n\tsponsorshipsAsMaintainer?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserSponsorshipsAsMaintainerArgs, \"includePrivate\">\n\t>;\n\tsponsorshipsAsSponsor?: Resolver<\n\t\tResolversTypes[\"SponsorshipConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserSponsorshipsAsSponsorArgs, never>\n\t>;\n\tstarredRepositories?: Resolver<\n\t\tResolversTypes[\"StarredRepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserStarredRepositoriesArgs, never>\n\t>;\n\tstatus?: Resolver<Maybe<ResolversTypes[\"UserStatus\"]>, ParentType, ContextType>;\n\ttopRepositories?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserTopRepositoriesArgs, \"orderBy\">\n\t>;\n\ttwitterUsername?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\turl?: Resolver<ResolversTypes[\"URI\"], ParentType, ContextType>;\n\tviewerCanChangePinnedItems?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanCreateProjects?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerCanFollow?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tviewerIsFollowing?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\twatching?: Resolver<\n\t\tResolversTypes[\"RepositoryConnection\"],\n\t\tParentType,\n\t\tContextType,\n\t\tRequireFields<UserWatchingArgs, \"ownerAffiliations\">\n\t>;\n\twebsiteUrl?: Resolver<Maybe<ResolversTypes[\"URI\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserBlockedEventResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserBlockedEvent\"] = ResolversParentTypes[\"UserBlockedEvent\"]\n> = {\n\tactor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tblockDuration?: Resolver<ResolversTypes[\"UserBlockDuration\"], ParentType, ContextType>;\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tsubject?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserConnection\"] = ResolversParentTypes[\"UserConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"User\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserContentEditResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserContentEdit\"] = ResolversParentTypes[\"UserContentEdit\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tdeletedAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tdeletedBy?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tdiff?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\teditedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\teditor?: Resolver<Maybe<ResolversTypes[\"Actor\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserContentEditConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserContentEditConnection\"] = ResolversParentTypes[\"UserContentEditConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserContentEditEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserContentEdit\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserContentEditEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserContentEditEdge\"] = ResolversParentTypes[\"UserContentEditEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"UserContentEdit\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserEdge\"] = ResolversParentTypes[\"UserEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"User\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserStatusResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserStatus\"] = ResolversParentTypes[\"UserStatus\"]\n> = {\n\tcreatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\temoji?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\temojiHTML?: Resolver<Maybe<ResolversTypes[\"HTML\"]>, ParentType, ContextType>;\n\texpiresAt?: Resolver<Maybe<ResolversTypes[\"DateTime\"]>, ParentType, ContextType>;\n\tid?: Resolver<ResolversTypes[\"ID\"], ParentType, ContextType>;\n\tindicatesLimitedAvailability?: Resolver<ResolversTypes[\"Boolean\"], ParentType, ContextType>;\n\tmessage?: Resolver<Maybe<ResolversTypes[\"String\"]>, ParentType, ContextType>;\n\torganization?: Resolver<Maybe<ResolversTypes[\"Organization\"]>, ParentType, ContextType>;\n\tupdatedAt?: Resolver<ResolversTypes[\"DateTime\"], ParentType, ContextType>;\n\tuser?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserStatusConnectionResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserStatusConnection\"] = ResolversParentTypes[\"UserStatusConnection\"]\n> = {\n\tedges?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserStatusEdge\"]>>>, ParentType, ContextType>;\n\tnodes?: Resolver<Maybe<Array<Maybe<ResolversTypes[\"UserStatus\"]>>>, ParentType, ContextType>;\n\tpageInfo?: Resolver<ResolversTypes[\"PageInfo\"], ParentType, ContextType>;\n\ttotalCount?: Resolver<ResolversTypes[\"Int\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type UserStatusEdgeResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"UserStatusEdge\"] = ResolversParentTypes[\"UserStatusEdge\"]\n> = {\n\tcursor?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tnode?: Resolver<Maybe<ResolversTypes[\"UserStatus\"]>, ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport type ViewerHovercardContextResolvers<\n\tContextType = any,\n\tParentType extends ResolversParentTypes[\"ViewerHovercardContext\"] = ResolversParentTypes[\"ViewerHovercardContext\"]\n> = {\n\tmessage?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tocticon?: Resolver<ResolversTypes[\"String\"], ParentType, ContextType>;\n\tviewer?: Resolver<ResolversTypes[\"User\"], ParentType, ContextType>;\n\t__isTypeOf?: IsTypeOfResolverFn<ParentType>;\n};\n\nexport interface X509CertificateScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes[\"X509Certificate\"], any> {\n\tname: \"X509Certificate\";\n}\n\nexport type Resolvers<ContextType = any> = {\n\tAcceptEnterpriseAdministratorInvitationPayload?: AcceptEnterpriseAdministratorInvitationPayloadResolvers<ContextType>;\n\tAcceptTopicSuggestionPayload?: AcceptTopicSuggestionPayloadResolvers<ContextType>;\n\tActor?: ActorResolvers<ContextType>;\n\tActorLocation?: ActorLocationResolvers<ContextType>;\n\tAddAssigneesToAssignablePayload?: AddAssigneesToAssignablePayloadResolvers<ContextType>;\n\tAddCommentPayload?: AddCommentPayloadResolvers<ContextType>;\n\tAddLabelsToLabelablePayload?: AddLabelsToLabelablePayloadResolvers<ContextType>;\n\tAddProjectCardPayload?: AddProjectCardPayloadResolvers<ContextType>;\n\tAddProjectColumnPayload?: AddProjectColumnPayloadResolvers<ContextType>;\n\tAddPullRequestReviewCommentPayload?: AddPullRequestReviewCommentPayloadResolvers<ContextType>;\n\tAddPullRequestReviewPayload?: AddPullRequestReviewPayloadResolvers<ContextType>;\n\tAddPullRequestReviewThreadPayload?: AddPullRequestReviewThreadPayloadResolvers<ContextType>;\n\tAddReactionPayload?: AddReactionPayloadResolvers<ContextType>;\n\tAddStarPayload?: AddStarPayloadResolvers<ContextType>;\n\tAddedToProjectEvent?: AddedToProjectEventResolvers<ContextType>;\n\tApp?: AppResolvers<ContextType>;\n\tArchiveRepositoryPayload?: ArchiveRepositoryPayloadResolvers<ContextType>;\n\tAssignable?: AssignableResolvers<ContextType>;\n\tAssignedEvent?: AssignedEventResolvers<ContextType>;\n\tAssignee?: AssigneeResolvers<ContextType>;\n\tAuditEntry?: AuditEntryResolvers<ContextType>;\n\tAuditEntryActor?: AuditEntryActorResolvers<ContextType>;\n\tAutomaticBaseChangeFailedEvent?: AutomaticBaseChangeFailedEventResolvers<ContextType>;\n\tAutomaticBaseChangeSucceededEvent?: AutomaticBaseChangeSucceededEventResolvers<ContextType>;\n\tBaseRefChangedEvent?: BaseRefChangedEventResolvers<ContextType>;\n\tBaseRefForcePushedEvent?: BaseRefForcePushedEventResolvers<ContextType>;\n\tBlame?: BlameResolvers<ContextType>;\n\tBlameRange?: BlameRangeResolvers<ContextType>;\n\tBlob?: BlobResolvers<ContextType>;\n\tBot?: BotResolvers<ContextType>;\n\tBranchProtectionRule?: BranchProtectionRuleResolvers<ContextType>;\n\tBranchProtectionRuleConflict?: BranchProtectionRuleConflictResolvers<ContextType>;\n\tBranchProtectionRuleConflictConnection?: BranchProtectionRuleConflictConnectionResolvers<ContextType>;\n\tBranchProtectionRuleConflictEdge?: BranchProtectionRuleConflictEdgeResolvers<ContextType>;\n\tBranchProtectionRuleConnection?: BranchProtectionRuleConnectionResolvers<ContextType>;\n\tBranchProtectionRuleEdge?: BranchProtectionRuleEdgeResolvers<ContextType>;\n\tCancelEnterpriseAdminInvitationPayload?: CancelEnterpriseAdminInvitationPayloadResolvers<ContextType>;\n\tChangeUserStatusPayload?: ChangeUserStatusPayloadResolvers<ContextType>;\n\tClearLabelsFromLabelablePayload?: ClearLabelsFromLabelablePayloadResolvers<ContextType>;\n\tCloneProjectPayload?: CloneProjectPayloadResolvers<ContextType>;\n\tCloneTemplateRepositoryPayload?: CloneTemplateRepositoryPayloadResolvers<ContextType>;\n\tClosable?: ClosableResolvers<ContextType>;\n\tCloseIssuePayload?: CloseIssuePayloadResolvers<ContextType>;\n\tClosePullRequestPayload?: ClosePullRequestPayloadResolvers<ContextType>;\n\tClosedEvent?: ClosedEventResolvers<ContextType>;\n\tCloser?: CloserResolvers<ContextType>;\n\tCodeOfConduct?: CodeOfConductResolvers<ContextType>;\n\tComment?: CommentResolvers<ContextType>;\n\tCommentDeletedEvent?: CommentDeletedEventResolvers<ContextType>;\n\tCommit?: CommitResolvers<ContextType>;\n\tCommitComment?: CommitCommentResolvers<ContextType>;\n\tCommitCommentConnection?: CommitCommentConnectionResolvers<ContextType>;\n\tCommitCommentEdge?: CommitCommentEdgeResolvers<ContextType>;\n\tCommitCommentThread?: CommitCommentThreadResolvers<ContextType>;\n\tCommitConnection?: CommitConnectionResolvers<ContextType>;\n\tCommitContributionsByRepository?: CommitContributionsByRepositoryResolvers<ContextType>;\n\tCommitEdge?: CommitEdgeResolvers<ContextType>;\n\tCommitHistoryConnection?: CommitHistoryConnectionResolvers<ContextType>;\n\tConnectedEvent?: ConnectedEventResolvers<ContextType>;\n\tContribution?: ContributionResolvers<ContextType>;\n\tContributionCalendar?: ContributionCalendarResolvers<ContextType>;\n\tContributionCalendarDay?: ContributionCalendarDayResolvers<ContextType>;\n\tContributionCalendarMonth?: ContributionCalendarMonthResolvers<ContextType>;\n\tContributionCalendarWeek?: ContributionCalendarWeekResolvers<ContextType>;\n\tContributionsCollection?: ContributionsCollectionResolvers<ContextType>;\n\tConvertProjectCardNoteToIssuePayload?: ConvertProjectCardNoteToIssuePayloadResolvers<ContextType>;\n\tConvertToDraftEvent?: ConvertToDraftEventResolvers<ContextType>;\n\tConvertedNoteToIssueEvent?: ConvertedNoteToIssueEventResolvers<ContextType>;\n\tCreateBranchProtectionRulePayload?: CreateBranchProtectionRulePayloadResolvers<ContextType>;\n\tCreateEnterpriseOrganizationPayload?: CreateEnterpriseOrganizationPayloadResolvers<ContextType>;\n\tCreateIpAllowListEntryPayload?: CreateIpAllowListEntryPayloadResolvers<ContextType>;\n\tCreateIssuePayload?: CreateIssuePayloadResolvers<ContextType>;\n\tCreateProjectPayload?: CreateProjectPayloadResolvers<ContextType>;\n\tCreatePullRequestPayload?: CreatePullRequestPayloadResolvers<ContextType>;\n\tCreateRefPayload?: CreateRefPayloadResolvers<ContextType>;\n\tCreateRepositoryPayload?: CreateRepositoryPayloadResolvers<ContextType>;\n\tCreateTeamDiscussionCommentPayload?: CreateTeamDiscussionCommentPayloadResolvers<ContextType>;\n\tCreateTeamDiscussionPayload?: CreateTeamDiscussionPayloadResolvers<ContextType>;\n\tCreatedCommitContribution?: CreatedCommitContributionResolvers<ContextType>;\n\tCreatedCommitContributionConnection?: CreatedCommitContributionConnectionResolvers<ContextType>;\n\tCreatedCommitContributionEdge?: CreatedCommitContributionEdgeResolvers<ContextType>;\n\tCreatedIssueContribution?: CreatedIssueContributionResolvers<ContextType>;\n\tCreatedIssueContributionConnection?: CreatedIssueContributionConnectionResolvers<ContextType>;\n\tCreatedIssueContributionEdge?: CreatedIssueContributionEdgeResolvers<ContextType>;\n\tCreatedIssueOrRestrictedContribution?: CreatedIssueOrRestrictedContributionResolvers<ContextType>;\n\tCreatedPullRequestContribution?: CreatedPullRequestContributionResolvers<ContextType>;\n\tCreatedPullRequestContributionConnection?: CreatedPullRequestContributionConnectionResolvers<ContextType>;\n\tCreatedPullRequestContributionEdge?: CreatedPullRequestContributionEdgeResolvers<ContextType>;\n\tCreatedPullRequestOrRestrictedContribution?: CreatedPullRequestOrRestrictedContributionResolvers<ContextType>;\n\tCreatedPullRequestReviewContribution?: CreatedPullRequestReviewContributionResolvers<ContextType>;\n\tCreatedPullRequestReviewContributionConnection?: CreatedPullRequestReviewContributionConnectionResolvers<ContextType>;\n\tCreatedPullRequestReviewContributionEdge?: CreatedPullRequestReviewContributionEdgeResolvers<ContextType>;\n\tCreatedRepositoryContribution?: CreatedRepositoryContributionResolvers<ContextType>;\n\tCreatedRepositoryContributionConnection?: CreatedRepositoryContributionConnectionResolvers<ContextType>;\n\tCreatedRepositoryContributionEdge?: CreatedRepositoryContributionEdgeResolvers<ContextType>;\n\tCreatedRepositoryOrRestrictedContribution?: CreatedRepositoryOrRestrictedContributionResolvers<ContextType>;\n\tCrossReferencedEvent?: CrossReferencedEventResolvers<ContextType>;\n\tDate?: GraphQLScalarType;\n\tDateTime?: GraphQLScalarType;\n\tDeclineTopicSuggestionPayload?: DeclineTopicSuggestionPayloadResolvers<ContextType>;\n\tDeletable?: DeletableResolvers<ContextType>;\n\tDeleteBranchProtectionRulePayload?: DeleteBranchProtectionRulePayloadResolvers<ContextType>;\n\tDeleteDeploymentPayload?: DeleteDeploymentPayloadResolvers<ContextType>;\n\tDeleteIpAllowListEntryPayload?: DeleteIpAllowListEntryPayloadResolvers<ContextType>;\n\tDeleteIssueCommentPayload?: DeleteIssueCommentPayloadResolvers<ContextType>;\n\tDeleteIssuePayload?: DeleteIssuePayloadResolvers<ContextType>;\n\tDeleteProjectCardPayload?: DeleteProjectCardPayloadResolvers<ContextType>;\n\tDeleteProjectColumnPayload?: DeleteProjectColumnPayloadResolvers<ContextType>;\n\tDeleteProjectPayload?: DeleteProjectPayloadResolvers<ContextType>;\n\tDeletePullRequestReviewCommentPayload?: DeletePullRequestReviewCommentPayloadResolvers<ContextType>;\n\tDeletePullRequestReviewPayload?: DeletePullRequestReviewPayloadResolvers<ContextType>;\n\tDeleteRefPayload?: DeleteRefPayloadResolvers<ContextType>;\n\tDeleteTeamDiscussionCommentPayload?: DeleteTeamDiscussionCommentPayloadResolvers<ContextType>;\n\tDeleteTeamDiscussionPayload?: DeleteTeamDiscussionPayloadResolvers<ContextType>;\n\tDemilestonedEvent?: DemilestonedEventResolvers<ContextType>;\n\tDeployKey?: DeployKeyResolvers<ContextType>;\n\tDeployKeyConnection?: DeployKeyConnectionResolvers<ContextType>;\n\tDeployKeyEdge?: DeployKeyEdgeResolvers<ContextType>;\n\tDeployedEvent?: DeployedEventResolvers<ContextType>;\n\tDeployment?: DeploymentResolvers<ContextType>;\n\tDeploymentConnection?: DeploymentConnectionResolvers<ContextType>;\n\tDeploymentEdge?: DeploymentEdgeResolvers<ContextType>;\n\tDeploymentEnvironmentChangedEvent?: DeploymentEnvironmentChangedEventResolvers<ContextType>;\n\tDeploymentStatus?: DeploymentStatusResolvers<ContextType>;\n\tDeploymentStatusConnection?: DeploymentStatusConnectionResolvers<ContextType>;\n\tDeploymentStatusEdge?: DeploymentStatusEdgeResolvers<ContextType>;\n\tDisconnectedEvent?: DisconnectedEventResolvers<ContextType>;\n\tDismissPullRequestReviewPayload?: DismissPullRequestReviewPayloadResolvers<ContextType>;\n\tEnterprise?: EnterpriseResolvers<ContextType>;\n\tEnterpriseAdministratorConnection?: EnterpriseAdministratorConnectionResolvers<ContextType>;\n\tEnterpriseAdministratorEdge?: EnterpriseAdministratorEdgeResolvers<ContextType>;\n\tEnterpriseAdministratorInvitation?: EnterpriseAdministratorInvitationResolvers<ContextType>;\n\tEnterpriseAdministratorInvitationConnection?: EnterpriseAdministratorInvitationConnectionResolvers<ContextType>;\n\tEnterpriseAdministratorInvitationEdge?: EnterpriseAdministratorInvitationEdgeResolvers<ContextType>;\n\tEnterpriseAuditEntryData?: EnterpriseAuditEntryDataResolvers<ContextType>;\n\tEnterpriseBillingInfo?: EnterpriseBillingInfoResolvers<ContextType>;\n\tEnterpriseIdentityProvider?: EnterpriseIdentityProviderResolvers<ContextType>;\n\tEnterpriseMember?: EnterpriseMemberResolvers<ContextType>;\n\tEnterpriseMemberConnection?: EnterpriseMemberConnectionResolvers<ContextType>;\n\tEnterpriseMemberEdge?: EnterpriseMemberEdgeResolvers<ContextType>;\n\tEnterpriseOrganizationMembershipConnection?: EnterpriseOrganizationMembershipConnectionResolvers<ContextType>;\n\tEnterpriseOrganizationMembershipEdge?: EnterpriseOrganizationMembershipEdgeResolvers<ContextType>;\n\tEnterpriseOutsideCollaboratorConnection?: EnterpriseOutsideCollaboratorConnectionResolvers<ContextType>;\n\tEnterpriseOutsideCollaboratorEdge?: EnterpriseOutsideCollaboratorEdgeResolvers<ContextType>;\n\tEnterpriseOwnerInfo?: EnterpriseOwnerInfoResolvers<ContextType>;\n\tEnterprisePendingCollaboratorConnection?: EnterprisePendingCollaboratorConnectionResolvers<ContextType>;\n\tEnterprisePendingCollaboratorEdge?: EnterprisePendingCollaboratorEdgeResolvers<ContextType>;\n\tEnterprisePendingMemberInvitationConnection?: EnterprisePendingMemberInvitationConnectionResolvers<ContextType>;\n\tEnterprisePendingMemberInvitationEdge?: EnterprisePendingMemberInvitationEdgeResolvers<ContextType>;\n\tEnterpriseRepositoryInfo?: EnterpriseRepositoryInfoResolvers<ContextType>;\n\tEnterpriseRepositoryInfoConnection?: EnterpriseRepositoryInfoConnectionResolvers<ContextType>;\n\tEnterpriseRepositoryInfoEdge?: EnterpriseRepositoryInfoEdgeResolvers<ContextType>;\n\tEnterpriseServerInstallation?: EnterpriseServerInstallationResolvers<ContextType>;\n\tEnterpriseServerInstallationConnection?: EnterpriseServerInstallationConnectionResolvers<ContextType>;\n\tEnterpriseServerInstallationEdge?: EnterpriseServerInstallationEdgeResolvers<ContextType>;\n\tEnterpriseServerUserAccount?: EnterpriseServerUserAccountResolvers<ContextType>;\n\tEnterpriseServerUserAccountConnection?: EnterpriseServerUserAccountConnectionResolvers<ContextType>;\n\tEnterpriseServerUserAccountEdge?: EnterpriseServerUserAccountEdgeResolvers<ContextType>;\n\tEnterpriseServerUserAccountEmail?: EnterpriseServerUserAccountEmailResolvers<ContextType>;\n\tEnterpriseServerUserAccountEmailConnection?: EnterpriseServerUserAccountEmailConnectionResolvers<ContextType>;\n\tEnterpriseServerUserAccountEmailEdge?: EnterpriseServerUserAccountEmailEdgeResolvers<ContextType>;\n\tEnterpriseServerUserAccountsUpload?: EnterpriseServerUserAccountsUploadResolvers<ContextType>;\n\tEnterpriseServerUserAccountsUploadConnection?: EnterpriseServerUserAccountsUploadConnectionResolvers<ContextType>;\n\tEnterpriseServerUserAccountsUploadEdge?: EnterpriseServerUserAccountsUploadEdgeResolvers<ContextType>;\n\tEnterpriseUserAccount?: EnterpriseUserAccountResolvers<ContextType>;\n\tEnterpriseUserAccountConnection?: EnterpriseUserAccountConnectionResolvers<ContextType>;\n\tEnterpriseUserAccountEdge?: EnterpriseUserAccountEdgeResolvers<ContextType>;\n\tExternalIdentity?: ExternalIdentityResolvers<ContextType>;\n\tExternalIdentityConnection?: ExternalIdentityConnectionResolvers<ContextType>;\n\tExternalIdentityEdge?: ExternalIdentityEdgeResolvers<ContextType>;\n\tExternalIdentitySamlAttributes?: ExternalIdentitySamlAttributesResolvers<ContextType>;\n\tExternalIdentityScimAttributes?: ExternalIdentityScimAttributesResolvers<ContextType>;\n\tFollowUserPayload?: FollowUserPayloadResolvers<ContextType>;\n\tFollowerConnection?: FollowerConnectionResolvers<ContextType>;\n\tFollowingConnection?: FollowingConnectionResolvers<ContextType>;\n\tFundingLink?: FundingLinkResolvers<ContextType>;\n\tGenericHovercardContext?: GenericHovercardContextResolvers<ContextType>;\n\tGist?: GistResolvers<ContextType>;\n\tGistComment?: GistCommentResolvers<ContextType>;\n\tGistCommentConnection?: GistCommentConnectionResolvers<ContextType>;\n\tGistCommentEdge?: GistCommentEdgeResolvers<ContextType>;\n\tGistConnection?: GistConnectionResolvers<ContextType>;\n\tGistEdge?: GistEdgeResolvers<ContextType>;\n\tGistFile?: GistFileResolvers<ContextType>;\n\tGitActor?: GitActorResolvers<ContextType>;\n\tGitHubMetadata?: GitHubMetadataResolvers<ContextType>;\n\tGitObject?: GitObjectResolvers<ContextType>;\n\tGitObjectID?: GraphQLScalarType;\n\tGitSSHRemote?: GraphQLScalarType;\n\tGitSignature?: GitSignatureResolvers<ContextType>;\n\tGitTimestamp?: GraphQLScalarType;\n\tGpgSignature?: GpgSignatureResolvers<ContextType>;\n\tHTML?: GraphQLScalarType;\n\tHeadRefDeletedEvent?: HeadRefDeletedEventResolvers<ContextType>;\n\tHeadRefForcePushedEvent?: HeadRefForcePushedEventResolvers<ContextType>;\n\tHeadRefRestoredEvent?: HeadRefRestoredEventResolvers<ContextType>;\n\tHovercard?: HovercardResolvers<ContextType>;\n\tHovercardContext?: HovercardContextResolvers<ContextType>;\n\tInviteEnterpriseAdminPayload?: InviteEnterpriseAdminPayloadResolvers<ContextType>;\n\tIpAllowListEntry?: IpAllowListEntryResolvers<ContextType>;\n\tIpAllowListEntryConnection?: IpAllowListEntryConnectionResolvers<ContextType>;\n\tIpAllowListEntryEdge?: IpAllowListEntryEdgeResolvers<ContextType>;\n\tIpAllowListOwner?: IpAllowListOwnerResolvers<ContextType>;\n\tIssue?: IssueResolvers<ContextType>;\n\tIssueComment?: IssueCommentResolvers<ContextType>;\n\tIssueCommentConnection?: IssueCommentConnectionResolvers<ContextType>;\n\tIssueCommentEdge?: IssueCommentEdgeResolvers<ContextType>;\n\tIssueConnection?: IssueConnectionResolvers<ContextType>;\n\tIssueContributionsByRepository?: IssueContributionsByRepositoryResolvers<ContextType>;\n\tIssueEdge?: IssueEdgeResolvers<ContextType>;\n\tIssueOrPullRequest?: IssueOrPullRequestResolvers<ContextType>;\n\tIssueTimelineConnection?: IssueTimelineConnectionResolvers<ContextType>;\n\tIssueTimelineItem?: IssueTimelineItemResolvers<ContextType>;\n\tIssueTimelineItemEdge?: IssueTimelineItemEdgeResolvers<ContextType>;\n\tIssueTimelineItems?: IssueTimelineItemsResolvers<ContextType>;\n\tIssueTimelineItemsConnection?: IssueTimelineItemsConnectionResolvers<ContextType>;\n\tIssueTimelineItemsEdge?: IssueTimelineItemsEdgeResolvers<ContextType>;\n\tJoinedGitHubContribution?: JoinedGitHubContributionResolvers<ContextType>;\n\tLabel?: LabelResolvers<ContextType>;\n\tLabelConnection?: LabelConnectionResolvers<ContextType>;\n\tLabelEdge?: LabelEdgeResolvers<ContextType>;\n\tLabelable?: LabelableResolvers<ContextType>;\n\tLabeledEvent?: LabeledEventResolvers<ContextType>;\n\tLanguage?: LanguageResolvers<ContextType>;\n\tLanguageConnection?: LanguageConnectionResolvers<ContextType>;\n\tLanguageEdge?: LanguageEdgeResolvers<ContextType>;\n\tLicense?: LicenseResolvers<ContextType>;\n\tLicenseRule?: LicenseRuleResolvers<ContextType>;\n\tLinkRepositoryToProjectPayload?: LinkRepositoryToProjectPayloadResolvers<ContextType>;\n\tLockLockablePayload?: LockLockablePayloadResolvers<ContextType>;\n\tLockable?: LockableResolvers<ContextType>;\n\tLockedEvent?: LockedEventResolvers<ContextType>;\n\tMannequin?: MannequinResolvers<ContextType>;\n\tMarkPullRequestReadyForReviewPayload?: MarkPullRequestReadyForReviewPayloadResolvers<ContextType>;\n\tMarkedAsDuplicateEvent?: MarkedAsDuplicateEventResolvers<ContextType>;\n\tMarketplaceCategory?: MarketplaceCategoryResolvers<ContextType>;\n\tMarketplaceListing?: MarketplaceListingResolvers<ContextType>;\n\tMarketplaceListingConnection?: MarketplaceListingConnectionResolvers<ContextType>;\n\tMarketplaceListingEdge?: MarketplaceListingEdgeResolvers<ContextType>;\n\tMemberStatusable?: MemberStatusableResolvers<ContextType>;\n\tMembersCanDeleteReposClearAuditEntry?: MembersCanDeleteReposClearAuditEntryResolvers<ContextType>;\n\tMembersCanDeleteReposDisableAuditEntry?: MembersCanDeleteReposDisableAuditEntryResolvers<ContextType>;\n\tMembersCanDeleteReposEnableAuditEntry?: MembersCanDeleteReposEnableAuditEntryResolvers<ContextType>;\n\tMentionedEvent?: MentionedEventResolvers<ContextType>;\n\tMergeBranchPayload?: MergeBranchPayloadResolvers<ContextType>;\n\tMergePullRequestPayload?: MergePullRequestPayloadResolvers<ContextType>;\n\tMergedEvent?: MergedEventResolvers<ContextType>;\n\tMilestone?: MilestoneResolvers<ContextType>;\n\tMilestoneConnection?: MilestoneConnectionResolvers<ContextType>;\n\tMilestoneEdge?: MilestoneEdgeResolvers<ContextType>;\n\tMilestoneItem?: MilestoneItemResolvers<ContextType>;\n\tMilestonedEvent?: MilestonedEventResolvers<ContextType>;\n\tMinimizable?: MinimizableResolvers<ContextType>;\n\tMinimizeCommentPayload?: MinimizeCommentPayloadResolvers<ContextType>;\n\tMoveProjectCardPayload?: MoveProjectCardPayloadResolvers<ContextType>;\n\tMoveProjectColumnPayload?: MoveProjectColumnPayloadResolvers<ContextType>;\n\tMovedColumnsInProjectEvent?: MovedColumnsInProjectEventResolvers<ContextType>;\n\tMutation?: MutationResolvers<ContextType>;\n\tNode?: NodeResolvers<ContextType>;\n\tOauthApplicationAuditEntryData?: OauthApplicationAuditEntryDataResolvers<ContextType>;\n\tOauthApplicationCreateAuditEntry?: OauthApplicationCreateAuditEntryResolvers<ContextType>;\n\tOrgAddBillingManagerAuditEntry?: OrgAddBillingManagerAuditEntryResolvers<ContextType>;\n\tOrgAddMemberAuditEntry?: OrgAddMemberAuditEntryResolvers<ContextType>;\n\tOrgBlockUserAuditEntry?: OrgBlockUserAuditEntryResolvers<ContextType>;\n\tOrgConfigDisableCollaboratorsOnlyAuditEntry?: OrgConfigDisableCollaboratorsOnlyAuditEntryResolvers<ContextType>;\n\tOrgConfigEnableCollaboratorsOnlyAuditEntry?: OrgConfigEnableCollaboratorsOnlyAuditEntryResolvers<ContextType>;\n\tOrgCreateAuditEntry?: OrgCreateAuditEntryResolvers<ContextType>;\n\tOrgDisableOauthAppRestrictionsAuditEntry?: OrgDisableOauthAppRestrictionsAuditEntryResolvers<ContextType>;\n\tOrgDisableSamlAuditEntry?: OrgDisableSamlAuditEntryResolvers<ContextType>;\n\tOrgDisableTwoFactorRequirementAuditEntry?: OrgDisableTwoFactorRequirementAuditEntryResolvers<ContextType>;\n\tOrgEnableOauthAppRestrictionsAuditEntry?: OrgEnableOauthAppRestrictionsAuditEntryResolvers<ContextType>;\n\tOrgEnableSamlAuditEntry?: OrgEnableSamlAuditEntryResolvers<ContextType>;\n\tOrgEnableTwoFactorRequirementAuditEntry?: OrgEnableTwoFactorRequirementAuditEntryResolvers<ContextType>;\n\tOrgInviteMemberAuditEntry?: OrgInviteMemberAuditEntryResolvers<ContextType>;\n\tOrgInviteToBusinessAuditEntry?: OrgInviteToBusinessAuditEntryResolvers<ContextType>;\n\tOrgOauthAppAccessApprovedAuditEntry?: OrgOauthAppAccessApprovedAuditEntryResolvers<ContextType>;\n\tOrgOauthAppAccessDeniedAuditEntry?: OrgOauthAppAccessDeniedAuditEntryResolvers<ContextType>;\n\tOrgOauthAppAccessRequestedAuditEntry?: OrgOauthAppAccessRequestedAuditEntryResolvers<ContextType>;\n\tOrgRemoveBillingManagerAuditEntry?: OrgRemoveBillingManagerAuditEntryResolvers<ContextType>;\n\tOrgRemoveMemberAuditEntry?: OrgRemoveMemberAuditEntryResolvers<ContextType>;\n\tOrgRemoveOutsideCollaboratorAuditEntry?: OrgRemoveOutsideCollaboratorAuditEntryResolvers<ContextType>;\n\tOrgRestoreMemberAuditEntry?: OrgRestoreMemberAuditEntryResolvers<ContextType>;\n\tOrgRestoreMemberAuditEntryMembership?: OrgRestoreMemberAuditEntryMembershipResolvers<ContextType>;\n\tOrgRestoreMemberMembershipOrganizationAuditEntryData?: OrgRestoreMemberMembershipOrganizationAuditEntryDataResolvers<\n\t\tContextType\n\t>;\n\tOrgRestoreMemberMembershipRepositoryAuditEntryData?: OrgRestoreMemberMembershipRepositoryAuditEntryDataResolvers<\n\t\tContextType\n\t>;\n\tOrgRestoreMemberMembershipTeamAuditEntryData?: OrgRestoreMemberMembershipTeamAuditEntryDataResolvers<ContextType>;\n\tOrgUnblockUserAuditEntry?: OrgUnblockUserAuditEntryResolvers<ContextType>;\n\tOrgUpdateDefaultRepositoryPermissionAuditEntry?: OrgUpdateDefaultRepositoryPermissionAuditEntryResolvers<ContextType>;\n\tOrgUpdateMemberAuditEntry?: OrgUpdateMemberAuditEntryResolvers<ContextType>;\n\tOrgUpdateMemberRepositoryCreationPermissionAuditEntry?: OrgUpdateMemberRepositoryCreationPermissionAuditEntryResolvers<\n\t\tContextType\n\t>;\n\tOrgUpdateMemberRepositoryInvitationPermissionAuditEntry?: OrgUpdateMemberRepositoryInvitationPermissionAuditEntryResolvers<\n\t\tContextType\n\t>;\n\tOrganization?: OrganizationResolvers<ContextType>;\n\tOrganizationAuditEntry?: OrganizationAuditEntryResolvers<ContextType>;\n\tOrganizationAuditEntryConnection?: OrganizationAuditEntryConnectionResolvers<ContextType>;\n\tOrganizationAuditEntryData?: OrganizationAuditEntryDataResolvers<ContextType>;\n\tOrganizationAuditEntryEdge?: OrganizationAuditEntryEdgeResolvers<ContextType>;\n\tOrganizationConnection?: OrganizationConnectionResolvers<ContextType>;\n\tOrganizationEdge?: OrganizationEdgeResolvers<ContextType>;\n\tOrganizationIdentityProvider?: OrganizationIdentityProviderResolvers<ContextType>;\n\tOrganizationInvitation?: OrganizationInvitationResolvers<ContextType>;\n\tOrganizationInvitationConnection?: OrganizationInvitationConnectionResolvers<ContextType>;\n\tOrganizationInvitationEdge?: OrganizationInvitationEdgeResolvers<ContextType>;\n\tOrganizationMemberConnection?: OrganizationMemberConnectionResolvers<ContextType>;\n\tOrganizationMemberEdge?: OrganizationMemberEdgeResolvers<ContextType>;\n\tOrganizationTeamsHovercardContext?: OrganizationTeamsHovercardContextResolvers<ContextType>;\n\tOrganizationsHovercardContext?: OrganizationsHovercardContextResolvers<ContextType>;\n\tPackage?: PackageResolvers<ContextType>;\n\tPackageConnection?: PackageConnectionResolvers<ContextType>;\n\tPackageEdge?: PackageEdgeResolvers<ContextType>;\n\tPackageFile?: PackageFileResolvers<ContextType>;\n\tPackageFileConnection?: PackageFileConnectionResolvers<ContextType>;\n\tPackageFileEdge?: PackageFileEdgeResolvers<ContextType>;\n\tPackageOwner?: PackageOwnerResolvers<ContextType>;\n\tPackageStatistics?: PackageStatisticsResolvers<ContextType>;\n\tPackageTag?: PackageTagResolvers<ContextType>;\n\tPackageVersion?: PackageVersionResolvers<ContextType>;\n\tPackageVersionConnection?: PackageVersionConnectionResolvers<ContextType>;\n\tPackageVersionEdge?: PackageVersionEdgeResolvers<ContextType>;\n\tPackageVersionStatistics?: PackageVersionStatisticsResolvers<ContextType>;\n\tPageInfo?: PageInfoResolvers<ContextType>;\n\tPermissionGranter?: PermissionGranterResolvers<ContextType>;\n\tPermissionSource?: PermissionSourceResolvers<ContextType>;\n\tPinnableItem?: PinnableItemResolvers<ContextType>;\n\tPinnableItemConnection?: PinnableItemConnectionResolvers<ContextType>;\n\tPinnableItemEdge?: PinnableItemEdgeResolvers<ContextType>;\n\tPinnedEvent?: PinnedEventResolvers<ContextType>;\n\tPreciseDateTime?: GraphQLScalarType;\n\tPrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryResolvers<ContextType>;\n\tPrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryResolvers<ContextType>;\n\tProfileItemShowcase?: ProfileItemShowcaseResolvers<ContextType>;\n\tProfileOwner?: ProfileOwnerResolvers<ContextType>;\n\tProject?: ProjectResolvers<ContextType>;\n\tProjectCard?: ProjectCardResolvers<ContextType>;\n\tProjectCardConnection?: ProjectCardConnectionResolvers<ContextType>;\n\tProjectCardEdge?: ProjectCardEdgeResolvers<ContextType>;\n\tProjectCardItem?: ProjectCardItemResolvers<ContextType>;\n\tProjectColumn?: ProjectColumnResolvers<ContextType>;\n\tProjectColumnConnection?: ProjectColumnConnectionResolvers<ContextType>;\n\tProjectColumnEdge?: ProjectColumnEdgeResolvers<ContextType>;\n\tProjectConnection?: ProjectConnectionResolvers<ContextType>;\n\tProjectEdge?: ProjectEdgeResolvers<ContextType>;\n\tProjectOwner?: ProjectOwnerResolvers<ContextType>;\n\tPublicKey?: PublicKeyResolvers<ContextType>;\n\tPublicKeyConnection?: PublicKeyConnectionResolvers<ContextType>;\n\tPublicKeyEdge?: PublicKeyEdgeResolvers<ContextType>;\n\tPullRequest?: PullRequestResolvers<ContextType>;\n\tPullRequestChangedFile?: PullRequestChangedFileResolvers<ContextType>;\n\tPullRequestChangedFileConnection?: PullRequestChangedFileConnectionResolvers<ContextType>;\n\tPullRequestChangedFileEdge?: PullRequestChangedFileEdgeResolvers<ContextType>;\n\tPullRequestCommit?: PullRequestCommitResolvers<ContextType>;\n\tPullRequestCommitCommentThread?: PullRequestCommitCommentThreadResolvers<ContextType>;\n\tPullRequestCommitConnection?: PullRequestCommitConnectionResolvers<ContextType>;\n\tPullRequestCommitEdge?: PullRequestCommitEdgeResolvers<ContextType>;\n\tPullRequestConnection?: PullRequestConnectionResolvers<ContextType>;\n\tPullRequestContributionsByRepository?: PullRequestContributionsByRepositoryResolvers<ContextType>;\n\tPullRequestEdge?: PullRequestEdgeResolvers<ContextType>;\n\tPullRequestReview?: PullRequestReviewResolvers<ContextType>;\n\tPullRequestReviewComment?: PullRequestReviewCommentResolvers<ContextType>;\n\tPullRequestReviewCommentConnection?: PullRequestReviewCommentConnectionResolvers<ContextType>;\n\tPullRequestReviewCommentEdge?: PullRequestReviewCommentEdgeResolvers<ContextType>;\n\tPullRequestReviewConnection?: PullRequestReviewConnectionResolvers<ContextType>;\n\tPullRequestReviewContributionsByRepository?: PullRequestReviewContributionsByRepositoryResolvers<ContextType>;\n\tPullRequestReviewEdge?: PullRequestReviewEdgeResolvers<ContextType>;\n\tPullRequestReviewThread?: PullRequestReviewThreadResolvers<ContextType>;\n\tPullRequestReviewThreadConnection?: PullRequestReviewThreadConnectionResolvers<ContextType>;\n\tPullRequestReviewThreadEdge?: PullRequestReviewThreadEdgeResolvers<ContextType>;\n\tPullRequestRevisionMarker?: PullRequestRevisionMarkerResolvers<ContextType>;\n\tPullRequestTimelineConnection?: PullRequestTimelineConnectionResolvers<ContextType>;\n\tPullRequestTimelineItem?: PullRequestTimelineItemResolvers<ContextType>;\n\tPullRequestTimelineItemEdge?: PullRequestTimelineItemEdgeResolvers<ContextType>;\n\tPullRequestTimelineItems?: PullRequestTimelineItemsResolvers<ContextType>;\n\tPullRequestTimelineItemsConnection?: PullRequestTimelineItemsConnectionResolvers<ContextType>;\n\tPullRequestTimelineItemsEdge?: PullRequestTimelineItemsEdgeResolvers<ContextType>;\n\tPushAllowance?: PushAllowanceResolvers<ContextType>;\n\tPushAllowanceActor?: PushAllowanceActorResolvers<ContextType>;\n\tPushAllowanceConnection?: PushAllowanceConnectionResolvers<ContextType>;\n\tPushAllowanceEdge?: PushAllowanceEdgeResolvers<ContextType>;\n\tQuery?: QueryResolvers<ContextType>;\n\tRateLimit?: RateLimitResolvers<ContextType>;\n\tReactable?: ReactableResolvers<ContextType>;\n\tReactingUserConnection?: ReactingUserConnectionResolvers<ContextType>;\n\tReactingUserEdge?: ReactingUserEdgeResolvers<ContextType>;\n\tReaction?: ReactionResolvers<ContextType>;\n\tReactionConnection?: ReactionConnectionResolvers<ContextType>;\n\tReactionEdge?: ReactionEdgeResolvers<ContextType>;\n\tReactionGroup?: ReactionGroupResolvers<ContextType>;\n\tReadyForReviewEvent?: ReadyForReviewEventResolvers<ContextType>;\n\tRef?: RefResolvers<ContextType>;\n\tRefConnection?: RefConnectionResolvers<ContextType>;\n\tRefEdge?: RefEdgeResolvers<ContextType>;\n\tReferencedEvent?: ReferencedEventResolvers<ContextType>;\n\tReferencedSubject?: ReferencedSubjectResolvers<ContextType>;\n\tRegenerateEnterpriseIdentityProviderRecoveryCodesPayload?: RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadResolvers<\n\t\tContextType\n\t>;\n\tRelease?: ReleaseResolvers<ContextType>;\n\tReleaseAsset?: ReleaseAssetResolvers<ContextType>;\n\tReleaseAssetConnection?: ReleaseAssetConnectionResolvers<ContextType>;\n\tReleaseAssetEdge?: ReleaseAssetEdgeResolvers<ContextType>;\n\tReleaseConnection?: ReleaseConnectionResolvers<ContextType>;\n\tReleaseEdge?: ReleaseEdgeResolvers<ContextType>;\n\tRemoveAssigneesFromAssignablePayload?: RemoveAssigneesFromAssignablePayloadResolvers<ContextType>;\n\tRemoveEnterpriseAdminPayload?: RemoveEnterpriseAdminPayloadResolvers<ContextType>;\n\tRemoveEnterpriseIdentityProviderPayload?: RemoveEnterpriseIdentityProviderPayloadResolvers<ContextType>;\n\tRemoveEnterpriseOrganizationPayload?: RemoveEnterpriseOrganizationPayloadResolvers<ContextType>;\n\tRemoveLabelsFromLabelablePayload?: RemoveLabelsFromLabelablePayloadResolvers<ContextType>;\n\tRemoveOutsideCollaboratorPayload?: RemoveOutsideCollaboratorPayloadResolvers<ContextType>;\n\tRemoveReactionPayload?: RemoveReactionPayloadResolvers<ContextType>;\n\tRemoveStarPayload?: RemoveStarPayloadResolvers<ContextType>;\n\tRemovedFromProjectEvent?: RemovedFromProjectEventResolvers<ContextType>;\n\tRenamedTitleEvent?: RenamedTitleEventResolvers<ContextType>;\n\tRenamedTitleSubject?: RenamedTitleSubjectResolvers<ContextType>;\n\tReopenIssuePayload?: ReopenIssuePayloadResolvers<ContextType>;\n\tReopenPullRequestPayload?: ReopenPullRequestPayloadResolvers<ContextType>;\n\tReopenedEvent?: ReopenedEventResolvers<ContextType>;\n\tRepoAccessAuditEntry?: RepoAccessAuditEntryResolvers<ContextType>;\n\tRepoAddMemberAuditEntry?: RepoAddMemberAuditEntryResolvers<ContextType>;\n\tRepoAddTopicAuditEntry?: RepoAddTopicAuditEntryResolvers<ContextType>;\n\tRepoArchivedAuditEntry?: RepoArchivedAuditEntryResolvers<ContextType>;\n\tRepoChangeMergeSettingAuditEntry?: RepoChangeMergeSettingAuditEntryResolvers<ContextType>;\n\tRepoConfigDisableAnonymousGitAccessAuditEntry?: RepoConfigDisableAnonymousGitAccessAuditEntryResolvers<ContextType>;\n\tRepoConfigDisableCollaboratorsOnlyAuditEntry?: RepoConfigDisableCollaboratorsOnlyAuditEntryResolvers<ContextType>;\n\tRepoConfigDisableContributorsOnlyAuditEntry?: RepoConfigDisableContributorsOnlyAuditEntryResolvers<ContextType>;\n\tRepoConfigDisableSockpuppetDisallowedAuditEntry?: RepoConfigDisableSockpuppetDisallowedAuditEntryResolvers<ContextType>;\n\tRepoConfigEnableAnonymousGitAccessAuditEntry?: RepoConfigEnableAnonymousGitAccessAuditEntryResolvers<ContextType>;\n\tRepoConfigEnableCollaboratorsOnlyAuditEntry?: RepoConfigEnableCollaboratorsOnlyAuditEntryResolvers<ContextType>;\n\tRepoConfigEnableContributorsOnlyAuditEntry?: RepoConfigEnableContributorsOnlyAuditEntryResolvers<ContextType>;\n\tRepoConfigEnableSockpuppetDisallowedAuditEntry?: RepoConfigEnableSockpuppetDisallowedAuditEntryResolvers<ContextType>;\n\tRepoConfigLockAnonymousGitAccessAuditEntry?: RepoConfigLockAnonymousGitAccessAuditEntryResolvers<ContextType>;\n\tRepoConfigUnlockAnonymousGitAccessAuditEntry?: RepoConfigUnlockAnonymousGitAccessAuditEntryResolvers<ContextType>;\n\tRepoCreateAuditEntry?: RepoCreateAuditEntryResolvers<ContextType>;\n\tRepoDestroyAuditEntry?: RepoDestroyAuditEntryResolvers<ContextType>;\n\tRepoRemoveMemberAuditEntry?: RepoRemoveMemberAuditEntryResolvers<ContextType>;\n\tRepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryResolvers<ContextType>;\n\tRepository?: RepositoryResolvers<ContextType>;\n\tRepositoryAuditEntryData?: RepositoryAuditEntryDataResolvers<ContextType>;\n\tRepositoryCollaboratorConnection?: RepositoryCollaboratorConnectionResolvers<ContextType>;\n\tRepositoryCollaboratorEdge?: RepositoryCollaboratorEdgeResolvers<ContextType>;\n\tRepositoryConnection?: RepositoryConnectionResolvers<ContextType>;\n\tRepositoryEdge?: RepositoryEdgeResolvers<ContextType>;\n\tRepositoryInfo?: RepositoryInfoResolvers<ContextType>;\n\tRepositoryInvitation?: RepositoryInvitationResolvers<ContextType>;\n\tRepositoryInvitationConnection?: RepositoryInvitationConnectionResolvers<ContextType>;\n\tRepositoryInvitationEdge?: RepositoryInvitationEdgeResolvers<ContextType>;\n\tRepositoryNode?: RepositoryNodeResolvers<ContextType>;\n\tRepositoryOwner?: RepositoryOwnerResolvers<ContextType>;\n\tRepositoryTopic?: RepositoryTopicResolvers<ContextType>;\n\tRepositoryTopicConnection?: RepositoryTopicConnectionResolvers<ContextType>;\n\tRepositoryTopicEdge?: RepositoryTopicEdgeResolvers<ContextType>;\n\tRepositoryVisibilityChangeDisableAuditEntry?: RepositoryVisibilityChangeDisableAuditEntryResolvers<ContextType>;\n\tRepositoryVisibilityChangeEnableAuditEntry?: RepositoryVisibilityChangeEnableAuditEntryResolvers<ContextType>;\n\tRepositoryVulnerabilityAlert?: RepositoryVulnerabilityAlertResolvers<ContextType>;\n\tRepositoryVulnerabilityAlertConnection?: RepositoryVulnerabilityAlertConnectionResolvers<ContextType>;\n\tRepositoryVulnerabilityAlertEdge?: RepositoryVulnerabilityAlertEdgeResolvers<ContextType>;\n\tRequestReviewsPayload?: RequestReviewsPayloadResolvers<ContextType>;\n\tRequestedReviewer?: RequestedReviewerResolvers<ContextType>;\n\tResolveReviewThreadPayload?: ResolveReviewThreadPayloadResolvers<ContextType>;\n\tRestrictedContribution?: RestrictedContributionResolvers<ContextType>;\n\tReviewDismissalAllowance?: ReviewDismissalAllowanceResolvers<ContextType>;\n\tReviewDismissalAllowanceActor?: ReviewDismissalAllowanceActorResolvers<ContextType>;\n\tReviewDismissalAllowanceConnection?: ReviewDismissalAllowanceConnectionResolvers<ContextType>;\n\tReviewDismissalAllowanceEdge?: ReviewDismissalAllowanceEdgeResolvers<ContextType>;\n\tReviewDismissedEvent?: ReviewDismissedEventResolvers<ContextType>;\n\tReviewRequest?: ReviewRequestResolvers<ContextType>;\n\tReviewRequestConnection?: ReviewRequestConnectionResolvers<ContextType>;\n\tReviewRequestEdge?: ReviewRequestEdgeResolvers<ContextType>;\n\tReviewRequestRemovedEvent?: ReviewRequestRemovedEventResolvers<ContextType>;\n\tReviewRequestedEvent?: ReviewRequestedEventResolvers<ContextType>;\n\tReviewStatusHovercardContext?: ReviewStatusHovercardContextResolvers<ContextType>;\n\tSavedReply?: SavedReplyResolvers<ContextType>;\n\tSavedReplyConnection?: SavedReplyConnectionResolvers<ContextType>;\n\tSavedReplyEdge?: SavedReplyEdgeResolvers<ContextType>;\n\tSearchResultItem?: SearchResultItemResolvers<ContextType>;\n\tSearchResultItemConnection?: SearchResultItemConnectionResolvers<ContextType>;\n\tSearchResultItemEdge?: SearchResultItemEdgeResolvers<ContextType>;\n\tSecurityAdvisory?: SecurityAdvisoryResolvers<ContextType>;\n\tSecurityAdvisoryConnection?: SecurityAdvisoryConnectionResolvers<ContextType>;\n\tSecurityAdvisoryEdge?: SecurityAdvisoryEdgeResolvers<ContextType>;\n\tSecurityAdvisoryIdentifier?: SecurityAdvisoryIdentifierResolvers<ContextType>;\n\tSecurityAdvisoryPackage?: SecurityAdvisoryPackageResolvers<ContextType>;\n\tSecurityAdvisoryPackageVersion?: SecurityAdvisoryPackageVersionResolvers<ContextType>;\n\tSecurityAdvisoryReference?: SecurityAdvisoryReferenceResolvers<ContextType>;\n\tSecurityVulnerability?: SecurityVulnerabilityResolvers<ContextType>;\n\tSecurityVulnerabilityConnection?: SecurityVulnerabilityConnectionResolvers<ContextType>;\n\tSecurityVulnerabilityEdge?: SecurityVulnerabilityEdgeResolvers<ContextType>;\n\tSetEnterpriseIdentityProviderPayload?: SetEnterpriseIdentityProviderPayloadResolvers<ContextType>;\n\tSmimeSignature?: SmimeSignatureResolvers<ContextType>;\n\tSponsor?: SponsorResolvers<ContextType>;\n\tSponsorable?: SponsorableResolvers<ContextType>;\n\tSponsorsListing?: SponsorsListingResolvers<ContextType>;\n\tSponsorsTier?: SponsorsTierResolvers<ContextType>;\n\tSponsorsTierAdminInfo?: SponsorsTierAdminInfoResolvers<ContextType>;\n\tSponsorsTierConnection?: SponsorsTierConnectionResolvers<ContextType>;\n\tSponsorsTierEdge?: SponsorsTierEdgeResolvers<ContextType>;\n\tSponsorship?: SponsorshipResolvers<ContextType>;\n\tSponsorshipConnection?: SponsorshipConnectionResolvers<ContextType>;\n\tSponsorshipEdge?: SponsorshipEdgeResolvers<ContextType>;\n\tStargazerConnection?: StargazerConnectionResolvers<ContextType>;\n\tStargazerEdge?: StargazerEdgeResolvers<ContextType>;\n\tStarrable?: StarrableResolvers<ContextType>;\n\tStarredRepositoryConnection?: StarredRepositoryConnectionResolvers<ContextType>;\n\tStarredRepositoryEdge?: StarredRepositoryEdgeResolvers<ContextType>;\n\tStatus?: StatusResolvers<ContextType>;\n\tStatusCheckRollup?: StatusCheckRollupResolvers<ContextType>;\n\tStatusCheckRollupContext?: StatusCheckRollupContextResolvers<ContextType>;\n\tStatusCheckRollupContextConnection?: StatusCheckRollupContextConnectionResolvers<ContextType>;\n\tStatusCheckRollupContextEdge?: StatusCheckRollupContextEdgeResolvers<ContextType>;\n\tStatusContext?: StatusContextResolvers<ContextType>;\n\tSubmitPullRequestReviewPayload?: SubmitPullRequestReviewPayloadResolvers<ContextType>;\n\tSubmodule?: SubmoduleResolvers<ContextType>;\n\tSubmoduleConnection?: SubmoduleConnectionResolvers<ContextType>;\n\tSubmoduleEdge?: SubmoduleEdgeResolvers<ContextType>;\n\tSubscribable?: SubscribableResolvers<ContextType>;\n\tSubscribedEvent?: SubscribedEventResolvers<ContextType>;\n\tSuggestedReviewer?: SuggestedReviewerResolvers<ContextType>;\n\tTag?: TagResolvers<ContextType>;\n\tTeam?: TeamResolvers<ContextType>;\n\tTeamAddMemberAuditEntry?: TeamAddMemberAuditEntryResolvers<ContextType>;\n\tTeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryResolvers<ContextType>;\n\tTeamAuditEntryData?: TeamAuditEntryDataResolvers<ContextType>;\n\tTeamChangeParentTeamAuditEntry?: TeamChangeParentTeamAuditEntryResolvers<ContextType>;\n\tTeamConnection?: TeamConnectionResolvers<ContextType>;\n\tTeamDiscussion?: TeamDiscussionResolvers<ContextType>;\n\tTeamDiscussionComment?: TeamDiscussionCommentResolvers<ContextType>;\n\tTeamDiscussionCommentConnection?: TeamDiscussionCommentConnectionResolvers<ContextType>;\n\tTeamDiscussionCommentEdge?: TeamDiscussionCommentEdgeResolvers<ContextType>;\n\tTeamDiscussionConnection?: TeamDiscussionConnectionResolvers<ContextType>;\n\tTeamDiscussionEdge?: TeamDiscussionEdgeResolvers<ContextType>;\n\tTeamEdge?: TeamEdgeResolvers<ContextType>;\n\tTeamMemberConnection?: TeamMemberConnectionResolvers<ContextType>;\n\tTeamMemberEdge?: TeamMemberEdgeResolvers<ContextType>;\n\tTeamRemoveMemberAuditEntry?: TeamRemoveMemberAuditEntryResolvers<ContextType>;\n\tTeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryResolvers<ContextType>;\n\tTeamRepositoryConnection?: TeamRepositoryConnectionResolvers<ContextType>;\n\tTeamRepositoryEdge?: TeamRepositoryEdgeResolvers<ContextType>;\n\tTextMatch?: TextMatchResolvers<ContextType>;\n\tTextMatchHighlight?: TextMatchHighlightResolvers<ContextType>;\n\tTopic?: TopicResolvers<ContextType>;\n\tTopicAuditEntryData?: TopicAuditEntryDataResolvers<ContextType>;\n\tTransferIssuePayload?: TransferIssuePayloadResolvers<ContextType>;\n\tTransferredEvent?: TransferredEventResolvers<ContextType>;\n\tTree?: TreeResolvers<ContextType>;\n\tTreeEntry?: TreeEntryResolvers<ContextType>;\n\tURI?: GraphQLScalarType;\n\tUnarchiveRepositoryPayload?: UnarchiveRepositoryPayloadResolvers<ContextType>;\n\tUnassignedEvent?: UnassignedEventResolvers<ContextType>;\n\tUnfollowUserPayload?: UnfollowUserPayloadResolvers<ContextType>;\n\tUniformResourceLocatable?: UniformResourceLocatableResolvers<ContextType>;\n\tUnknownSignature?: UnknownSignatureResolvers<ContextType>;\n\tUnlabeledEvent?: UnlabeledEventResolvers<ContextType>;\n\tUnlinkRepositoryFromProjectPayload?: UnlinkRepositoryFromProjectPayloadResolvers<ContextType>;\n\tUnlockLockablePayload?: UnlockLockablePayloadResolvers<ContextType>;\n\tUnlockedEvent?: UnlockedEventResolvers<ContextType>;\n\tUnmarkIssueAsDuplicatePayload?: UnmarkIssueAsDuplicatePayloadResolvers<ContextType>;\n\tUnmarkedAsDuplicateEvent?: UnmarkedAsDuplicateEventResolvers<ContextType>;\n\tUnminimizeCommentPayload?: UnminimizeCommentPayloadResolvers<ContextType>;\n\tUnpinnedEvent?: UnpinnedEventResolvers<ContextType>;\n\tUnresolveReviewThreadPayload?: UnresolveReviewThreadPayloadResolvers<ContextType>;\n\tUnsubscribedEvent?: UnsubscribedEventResolvers<ContextType>;\n\tUpdatable?: UpdatableResolvers<ContextType>;\n\tUpdatableComment?: UpdatableCommentResolvers<ContextType>;\n\tUpdateBranchProtectionRulePayload?: UpdateBranchProtectionRulePayloadResolvers<ContextType>;\n\tUpdateEnterpriseActionExecutionCapabilitySettingPayload?: UpdateEnterpriseActionExecutionCapabilitySettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseAdministratorRolePayload?: UpdateEnterpriseAdministratorRolePayloadResolvers<ContextType>;\n\tUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload?: UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseDefaultRepositoryPermissionSettingPayload?: UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload?: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload?: UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanDeleteIssuesSettingPayload?: UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload?: UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload?: UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanMakePurchasesSettingPayload?: UpdateEnterpriseMembersCanMakePurchasesSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload?: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload?: UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseOrganizationProjectsSettingPayload?: UpdateEnterpriseOrganizationProjectsSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateEnterpriseProfilePayload?: UpdateEnterpriseProfilePayloadResolvers<ContextType>;\n\tUpdateEnterpriseRepositoryProjectsSettingPayload?: UpdateEnterpriseRepositoryProjectsSettingPayloadResolvers<ContextType>;\n\tUpdateEnterpriseTeamDiscussionsSettingPayload?: UpdateEnterpriseTeamDiscussionsSettingPayloadResolvers<ContextType>;\n\tUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload?: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadResolvers<\n\t\tContextType\n\t>;\n\tUpdateIpAllowListEnabledSettingPayload?: UpdateIpAllowListEnabledSettingPayloadResolvers<ContextType>;\n\tUpdateIpAllowListEntryPayload?: UpdateIpAllowListEntryPayloadResolvers<ContextType>;\n\tUpdateIssueCommentPayload?: UpdateIssueCommentPayloadResolvers<ContextType>;\n\tUpdateIssuePayload?: UpdateIssuePayloadResolvers<ContextType>;\n\tUpdateProjectCardPayload?: UpdateProjectCardPayloadResolvers<ContextType>;\n\tUpdateProjectColumnPayload?: UpdateProjectColumnPayloadResolvers<ContextType>;\n\tUpdateProjectPayload?: UpdateProjectPayloadResolvers<ContextType>;\n\tUpdatePullRequestPayload?: UpdatePullRequestPayloadResolvers<ContextType>;\n\tUpdatePullRequestReviewCommentPayload?: UpdatePullRequestReviewCommentPayloadResolvers<ContextType>;\n\tUpdatePullRequestReviewPayload?: UpdatePullRequestReviewPayloadResolvers<ContextType>;\n\tUpdateRefPayload?: UpdateRefPayloadResolvers<ContextType>;\n\tUpdateRepositoryPayload?: UpdateRepositoryPayloadResolvers<ContextType>;\n\tUpdateSubscriptionPayload?: UpdateSubscriptionPayloadResolvers<ContextType>;\n\tUpdateTeamDiscussionCommentPayload?: UpdateTeamDiscussionCommentPayloadResolvers<ContextType>;\n\tUpdateTeamDiscussionPayload?: UpdateTeamDiscussionPayloadResolvers<ContextType>;\n\tUpdateTopicsPayload?: UpdateTopicsPayloadResolvers<ContextType>;\n\tUser?: UserResolvers<ContextType>;\n\tUserBlockedEvent?: UserBlockedEventResolvers<ContextType>;\n\tUserConnection?: UserConnectionResolvers<ContextType>;\n\tUserContentEdit?: UserContentEditResolvers<ContextType>;\n\tUserContentEditConnection?: UserContentEditConnectionResolvers<ContextType>;\n\tUserContentEditEdge?: UserContentEditEdgeResolvers<ContextType>;\n\tUserEdge?: UserEdgeResolvers<ContextType>;\n\tUserStatus?: UserStatusResolvers<ContextType>;\n\tUserStatusConnection?: UserStatusConnectionResolvers<ContextType>;\n\tUserStatusEdge?: UserStatusEdgeResolvers<ContextType>;\n\tViewerHovercardContext?: ViewerHovercardContextResolvers<ContextType>;\n\tX509Certificate?: GraphQLScalarType;\n};\n\n/**\n * @deprecated\n * Use \"Resolvers\" root object instead. If you wish to get \"IResolvers\", add \"typesPrefix: I\" to your config.\n */\nexport type IResolvers<ContextType = any> = Resolvers<ContextType>;\n\nexport const CdkReleases = gql`\n\tquery CDKReleases {\n\t\trepository(owner: \"aws\", name: \"aws-cdk\") {\n\t\t\treleases(last: 100) {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\ttag {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const CdkReleaseAssets = gql`\n\tquery CDKReleaseAssets($tagName: String!) {\n\t\trepository(owner: \"aws\", name: \"aws-cdk\") {\n\t\t\trelease(tagName: $tagName) {\n\t\t\t\treleaseAssets(first: 100) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const MyReleases = gql`\n\tquery MyReleases($owner: String!, $name: String!) {\n\t\trepository(owner: $owner, name: $name) {\n\t\t\treleases(last: 100) {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\ttag {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport type CdkReleasesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CdkReleasesQuery = { __typename?: \"Query\" } & {\n\trepository?: Maybe<\n\t\t{ __typename?: \"Repository\" } & {\n\t\t\treleases: { __typename?: \"ReleaseConnection\" } & {\n\t\t\t\tedges?: Maybe<\n\t\t\t\t\tArray<\n\t\t\t\t\t\tMaybe<\n\t\t\t\t\t\t\t{ __typename?: \"ReleaseEdge\" } & {\n\t\t\t\t\t\t\t\tnode?: Maybe<{ __typename?: \"Release\" } & { tag?: Maybe<{ __typename?: \"Ref\" } & Pick<Ref, \"name\">> }>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t>\n\t\t\t\t>;\n\t\t\t};\n\t\t}\n\t>;\n};\n\nexport type CdkReleaseAssetsQueryVariables = Exact<{\n\ttagName: Scalars[\"String\"];\n}>;\n\nexport type CdkReleaseAssetsQuery = { __typename?: \"Query\" } & {\n\trepository?: Maybe<\n\t\t{ __typename?: \"Repository\" } & {\n\t\t\trelease?: Maybe<\n\t\t\t\t{ __typename?: \"Release\" } & {\n\t\t\t\t\treleaseAssets: { __typename?: \"ReleaseAssetConnection\" } & {\n\t\t\t\t\t\tedges?: Maybe<\n\t\t\t\t\t\t\tArray<\n\t\t\t\t\t\t\t\tMaybe<\n\t\t\t\t\t\t\t\t\t{ __typename?: \"ReleaseAssetEdge\" } & {\n\t\t\t\t\t\t\t\t\t\tnode?: Maybe<{ __typename?: \"ReleaseAsset\" } & Pick<ReleaseAsset, \"id\" | \"name\" | \"url\">>;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t>;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t>;\n\t\t}\n\t>;\n};\n\nexport type MyReleasesQueryVariables = Exact<{\n\towner: Scalars[\"String\"];\n\tname: Scalars[\"String\"];\n}>;\n\nexport type MyReleasesQuery = { __typename?: \"Query\" } & {\n\trepository?: Maybe<\n\t\t{ __typename?: \"Repository\" } & {\n\t\t\treleases: { __typename?: \"ReleaseConnection\" } & {\n\t\t\t\tedges?: Maybe<\n\t\t\t\t\tArray<\n\t\t\t\t\t\tMaybe<\n\t\t\t\t\t\t\t{ __typename?: \"ReleaseEdge\" } & {\n\t\t\t\t\t\t\t\tnode?: Maybe<{ __typename?: \"Release\" } & { tag?: Maybe<{ __typename?: \"Ref\" } & Pick<Ref, \"name\">> }>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t>\n\t\t\t\t>;\n\t\t\t};\n\t\t}\n\t>;\n};\n","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        fn.apply(\n          this,\n          args.concat([(err, res) => err ? reject(err) : resolve(res)])\n        )\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    read.__proto__ = fs$read\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = clone\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n","'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchmod',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.opendir was added in Node.js v12.12.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read(), fs.write(), & fs.writev() need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// fs.writev only available in Node v12.9.0+\nif (typeof fs.writev === 'function') {\n  // Function signature is\n  // s.writev(fd, buffers[, position], callback)\n  // We need to handle the optional arg, so we use ...args\n  exports.writev = function (fd, buffers, ...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      return fs.writev(fd, buffers, ...args)\n    }\n\n    return new Promise((resolve, reject) => {\n      fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {\n        if (err) return reject(err)\n        resolve({ bytesWritten, buffers })\n      })\n    })\n  }\n}\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n}\n","module.exports = r => {\n  const n = process.versions.node.split('.').map(x => parseInt(x, 10))\n  r = r.split('.').map(x => parseInt(x, 10))\n  return n[0] > r[0] || (n[0] === r[0] && (n[1] > r[1] || (n[1] === r[1] && n[2] >= r[2])))\n}\n","// Adapted from https://github.com/sindresorhus/make-dir\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'\nconst fs = require('../fs')\nconst path = require('path')\nconst atLeastNode = require('at-least-node')\n\nconst useNativeRecursiveOption = atLeastNode('10.12.0')\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''))\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`)\n      error.code = 'EINVAL'\n      throw error\n    }\n  }\n}\n\nconst processOptions = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') options = { mode: options }\n  return { ...defaults, ...options }\n}\n\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`)\n  error.code = 'EPERM'\n  error.errno = -4048\n  error.path = pth\n  error.syscall = 'mkdir'\n  return error\n}\n\nmodule.exports.makeDir = async (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdir(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = async pth => {\n    try {\n      await fs.mkdir(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        await make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        const stats = await fs.stat(pth)\n        if (!stats.isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n\nmodule.exports.makeDirSync = (input, options) => {\n  checkPath(input)\n  options = processOptions(options)\n\n  if (useNativeRecursiveOption) {\n    const pth = path.resolve(input)\n\n    return fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    })\n  }\n\n  const make = pth => {\n    try {\n      fs.mkdirSync(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        make(path.dirname(pth))\n        return make(pth)\n      }\n\n      try {\n        if (!fs.statSync(pth).isDirectory()) {\n          // This error is never exposed to the user\n          // it is caught below, and the original error is thrown\n          throw new Error('The path is not a directory')\n        }\n      } catch {\n        throw error\n      }\n    }\n  }\n\n  return make(path.resolve(input))\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst { makeDir: _makeDir, makeDirSync } = require('./make-dir')\nconst makeDir = u(_makeDir)\n\nmodule.exports = {\n  mkdirs: makeDir,\n  mkdirsSync: makeDirSync,\n  // alias\n  mkdirp: makeDir,\n  mkdirpSync: makeDirSync,\n  ensureDir: makeDir,\n  ensureDirSync: makeDirSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction utimesMillis (path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err)\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr)\n      })\n    })\n  })\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  utimesMillis,\n  utimesMillisSync\n}\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\nconst atLeastNode = require('at-least-node')\n\nconst nodeSupportsBigInt = atLeastNode('10.5.0')\nconst stat = (file) => nodeSupportsBigInt ? fs.stat(file, { bigint: true }) : fs.stat(file)\nconst statSync = (file) => nodeSupportsBigInt ? fs.statSync(file, { bigint: true }) : fs.statSync(file)\n\nfunction getStats (src, dest) {\n  return Promise.all([\n    stat(src),\n    stat(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest) {\n  let destStat\n  const srcStat = statSync(src)\n  try {\n    destStat = statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  const callback = (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  }\n  if (nodeSupportsBigInt) fs.stat(destParent, { bigint: true }, callback)\n  else fs.stat(destParent, callback)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = statSync(destParent)\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true\n    }\n    // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n    if (destStat.size === srcStat.size &&\n        destStat.mode === srcStat.mode &&\n        destStat.nlink === srcStat.nlink &&\n        destStat.atimeMs === srcStat.atimeMs &&\n        destStat.mtimeMs === srcStat.mtimeMs &&\n        destStat.ctimeMs === srcStat.ctimeMs &&\n        destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true\n    }\n  }\n  return false\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n","'use strict'\n\nmodule.exports = {\n  copySync: require('./copy-sync')\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirs = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimesMillis = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n      return checkParentDir(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb)\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { destStat } = stats\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  copy: u(require('./copy'))\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst assert = require('assert')\n\nconst isWindows = (process.platform === 'win32')\n\nfunction defaults (options) {\n  const methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(m => {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n}\n\nfunction rimraf (p, options, cb) {\n  let busyTries = 0\n\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&\n          busyTries < options.maxBusyTries) {\n        busyTries++\n        const time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(() => rimraf_(p, options, CB), time)\n      }\n\n      // already gone\n      if (er.code === 'ENOENT') er = null\n    }\n\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, (er, st) => {\n    if (er && er.code === 'ENOENT') {\n      return cb(null)\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === 'EPERM' && isWindows) {\n      return fixWinEPERM(p, options, er, cb)\n    }\n\n    if (st && st.isDirectory()) {\n      return rmdir(p, options, er, cb)\n    }\n\n    options.unlink(p, er => {\n      if (er) {\n        if (er.code === 'ENOENT') {\n          return cb(null)\n        }\n        if (er.code === 'EPERM') {\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        }\n        if (er.code === 'EISDIR') {\n          return rmdir(p, options, er, cb)\n        }\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.chmod(p, 0o666, er2 => {\n    if (er2) {\n      cb(er2.code === 'ENOENT' ? null : er)\n    } else {\n      options.stat(p, (er3, stats) => {\n        if (er3) {\n          cb(er3.code === 'ENOENT' ? null : er)\n        } else if (stats.isDirectory()) {\n          rmdir(p, options, er, cb)\n        } else {\n          options.unlink(p, cb)\n        }\n      })\n    }\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  let stats\n\n  assert(p)\n  assert(options)\n\n  try {\n    options.chmodSync(p, 0o666)\n  } catch (er2) {\n    if (er2.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  try {\n    stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  if (stats.isDirectory()) {\n    rmdirSync(p, options, er)\n  } else {\n    options.unlinkSync(p)\n  }\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, er => {\n    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {\n      rmkids(p, options, cb)\n    } else if (er && er.code === 'ENOTDIR') {\n      cb(originalEr)\n    } else {\n      cb(er)\n    }\n  })\n}\n\nfunction rmkids (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, (er, files) => {\n    if (er) return cb(er)\n\n    let n = files.length\n    let errState\n\n    if (n === 0) return options.rmdir(p, cb)\n\n    files.forEach(f => {\n      rimraf(path.join(p, f), options, er => {\n        if (errState) {\n          return\n        }\n        if (er) return cb(errState = er)\n        if (--n === 0) {\n          options.rmdir(p, cb)\n        }\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  let st\n\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  try {\n    st = options.lstatSync(p)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er.code === 'EPERM' && isWindows) {\n      fixWinEPERMSync(p, options, er)\n    }\n  }\n\n  try {\n    // sunos lets the root user unlink directories, which is... weird.\n    if (st && st.isDirectory()) {\n      rmdirSync(p, options, null)\n    } else {\n      options.unlinkSync(p)\n    }\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    } else if (er.code === 'EPERM') {\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    } else if (er.code !== 'EISDIR') {\n      throw er\n    }\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === 'ENOTDIR') {\n      throw originalEr\n    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {\n      rmkidsSync(p, options)\n    } else if (er.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))\n\n  if (isWindows) {\n    // We only end up here once we got ENOTEMPTY at least once, and\n    // at this point, we are guaranteed to have removed all the kids.\n    // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n    // try really hard to delete stuff on windows, because it has a\n    // PROFOUNDLY annoying habit of not closing handles promptly when\n    // files are deleted, resulting in spurious ENOTEMPTY errors.\n    const startTime = Date.now()\n    do {\n      try {\n        const ret = options.rmdirSync(p, options)\n        return ret\n      } catch {}\n    } while (Date.now() - startTime < 500) // give up after 500ms\n  } else {\n    const ret = options.rmdirSync(p, options)\n    return ret\n  }\n}\n\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst rimraf = require('./rimraf')\n\nmodule.exports = {\n  remove: u(rimraf),\n  removeSync: rimraf.sync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n","'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst pathExists = require('../path-exists').pathExists\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nfunction symlinkPaths (srcpath, dstpath, callback) {\n  if (path.isAbsolute(srcpath)) {\n    return fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureSymlink')\n        return callback(err)\n      }\n      return callback(null, {\n        toCwd: srcpath,\n        toDst: srcpath\n      })\n    })\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    return pathExists(relativeToDst, (err, exists) => {\n      if (err) return callback(err)\n      if (exists) {\n        return callback(null, {\n          toCwd: relativeToDst,\n          toDst: srcpath\n        })\n      } else {\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            toCwd: srcpath,\n            toDst: path.relative(dstdir, srcpath)\n          })\n        })\n      }\n    })\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  let exists\n  if (path.isAbsolute(srcpath)) {\n    exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    exists = fs.existsSync(relativeToDst)\n    if (exists) {\n      return {\n        toCwd: relativeToDst,\n        toDst: srcpath\n      }\n    } else {\n      exists = fs.existsSync(srcpath)\n      if (!exists) throw new Error('relative srcpath does not exist')\n      return {\n        toCwd: srcpath,\n        toDst: path.relative(dstdir, srcpath)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  symlinkPaths,\n  symlinkPathsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n","'use strict'\n\nconst file = require('./file')\nconst link = require('./link')\nconst symlink = require('./symlink')\n\nmodule.exports = {\n  // file\n  createFile: file.createFile,\n  createFileSync: file.createFileSync,\n  ensureFile: file.createFile,\n  ensureFileSync: file.createFileSync,\n  // link\n  createLink: link.createLink,\n  createLinkSync: link.createLinkSync,\n  ensureLink: link.createLink,\n  ensureLinkSync: link.createLinkSync,\n  // symlink\n  createSymlink: symlink.createSymlink,\n  createSymlinkSync: symlink.createSymlinkSync,\n  ensureSymlink: symlink.createSymlink,\n  ensureSymlinkSync: symlink.createSymlinkSync\n}\n","function stringify (obj, options = {}) {\n  const EOL = options.EOL || '\\n'\n\n  const str = JSON.stringify(obj, options ? options.replacer : null, options.spaces)\n\n  return str.replace(/\\n/g, EOL) + EOL\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n","let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n","'use strict'\n\nconst jsonFile = require('jsonfile')\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: jsonFile.readFile,\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: jsonFile.writeFile,\n  writeJsonSync: jsonFile.writeFileSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFile } = require('../output')\n\nasync function outputJson (file, data, options = {}) {\n  const str = stringify(data, options)\n\n  await outputFile(file, str, options)\n}\n\nmodule.exports = outputJson\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFileSync } = require('../output')\n\nfunction outputJsonSync (file, data, options) {\n  const str = stringify(data, options)\n\n  outputFileSync(file, str, options)\n}\n\nmodule.exports = outputJsonSync\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst jsonFile = require('./jsonfile')\n\njsonFile.outputJson = u(require('./output-json'))\njsonFile.outputJsonSync = require('./output-json-sync')\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy-sync').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat } = stat.checkPathsSync(src, dest, 'move')\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite)\n}\n\nfunction doRename (src, dest, overwrite) {\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n","'use strict'\n\nmodule.exports = {\n  moveSync: require('./move-sync')\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copy = require('../copy').copy\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirp\nconst pathExists = require('../path-exists').pathExists\nconst stat = require('../util/stat')\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  stat.checkPaths(src, dest, 'move', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'move', err => {\n      if (err) return cb(err)\n      mkdirp(path.dirname(dest), err => {\n        if (err) return cb(err)\n        return doRename(src, dest, overwrite, cb)\n      })\n    })\n  })\n}\n\nfunction doRename (src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nmodule.exports = move\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  move: u(require('./move'))\n}\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict'\n\nmodule.exports = {\n  // Export promiseified graceful-fs:\n  ...require('./fs'),\n  // Export extra methods:\n  ...require('./copy-sync'),\n  ...require('./copy'),\n  ...require('./empty'),\n  ...require('./ensure'),\n  ...require('./json'),\n  ...require('./mkdirs'),\n  ...require('./move-sync'),\n  ...require('./move'),\n  ...require('./output'),\n  ...require('./path-exists'),\n  ...require('./remove')\n}\n\n// Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\nconst fs = require('fs')\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, 'promises', {\n    get () { return fs.promises }\n  })\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","\"use strict\";\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst qs = require(\"qs\");\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst zlib = require(\"zlib\");\r\n/**\r\n * creates an url from a request url and optional base url (http://server:8080)\r\n * @param {string} resource - a fully qualified url or relative path\r\n * @param {string} baseUrl - an optional baseUrl (http://server:8080)\r\n * @param {IRequestOptions} options - an optional options object, could include QueryParameters e.g.\r\n * @return {string} - resultant url\r\n */\r\nfunction getUrl(resource, baseUrl, queryParams) {\r\n    const pathApi = path.posix || path;\r\n    let requestUrl = '';\r\n    if (!baseUrl) {\r\n        requestUrl = resource;\r\n    }\r\n    else if (!resource) {\r\n        requestUrl = baseUrl;\r\n    }\r\n    else {\r\n        const base = url.parse(baseUrl);\r\n        const resultantUrl = url.parse(resource);\r\n        // resource (specific per request) elements take priority\r\n        resultantUrl.protocol = resultantUrl.protocol || base.protocol;\r\n        resultantUrl.auth = resultantUrl.auth || base.auth;\r\n        resultantUrl.host = resultantUrl.host || base.host;\r\n        resultantUrl.pathname = pathApi.resolve(base.pathname, resultantUrl.pathname);\r\n        if (!resultantUrl.pathname.endsWith('/') && resource.endsWith('/')) {\r\n            resultantUrl.pathname += '/';\r\n        }\r\n        requestUrl = url.format(resultantUrl);\r\n    }\r\n    return queryParams ?\r\n        getUrlWithParsedQueryParams(requestUrl, queryParams) :\r\n        requestUrl;\r\n}\r\nexports.getUrl = getUrl;\r\n/**\r\n *\r\n * @param {string} requestUrl\r\n * @param {IRequestQueryParams} queryParams\r\n * @return {string} - Request's URL with Query Parameters appended/parsed.\r\n */\r\nfunction getUrlWithParsedQueryParams(requestUrl, queryParams) {\r\n    const url = requestUrl.replace(/\\?$/g, ''); // Clean any extra end-of-string \"?\" character\r\n    const parsedQueryParams = qs.stringify(queryParams.params, buildParamsStringifyOptions(queryParams));\r\n    return `${url}${parsedQueryParams}`;\r\n}\r\n/**\r\n * Build options for QueryParams Stringifying.\r\n *\r\n * @param {IRequestQueryParams} queryParams\r\n * @return {object}\r\n */\r\nfunction buildParamsStringifyOptions(queryParams) {\r\n    let options = {\r\n        addQueryPrefix: true,\r\n        delimiter: (queryParams.options || {}).separator || '&',\r\n        allowDots: (queryParams.options || {}).shouldAllowDots || false,\r\n        arrayFormat: (queryParams.options || {}).arrayFormat || 'repeat',\r\n        encodeValuesOnly: (queryParams.options || {}).shouldOnlyEncodeValues || true\r\n    };\r\n    return options;\r\n}\r\n/**\r\n * Decompress/Decode gzip encoded JSON\r\n * Using Node.js built-in zlib module\r\n *\r\n * @param {Buffer} buffer\r\n * @param {string} charset? - optional; defaults to 'utf-8'\r\n * @return {Promise<string>}\r\n */\r\nfunction decompressGzippedContent(buffer, charset) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n            zlib.gunzip(buffer, function (error, buffer) {\r\n                if (error) {\r\n                    reject(error);\r\n                }\r\n                resolve(buffer.toString(charset || 'utf-8'));\r\n            });\r\n        }));\r\n    });\r\n}\r\nexports.decompressGzippedContent = decompressGzippedContent;\r\n/**\r\n * Obtain Response's Content Charset.\r\n * Through inspecting `content-type` response header.\r\n * It Returns 'utf-8' if NO charset specified/matched.\r\n *\r\n * @param {IHttpClientResponse} response\r\n * @return {string} - Content Encoding Charset; Default=utf-8\r\n */\r\nfunction obtainContentCharset(response) {\r\n    // Find the charset, if specified.\r\n    // Search for the `charset=CHARSET` string, not including `;,\\r\\n`\r\n    // Example: content-type: 'application/json;charset=utf-8'\r\n    // |__ matches would be ['charset=utf-8', 'utf-8', index: 18, input: 'application/json; charset=utf-8']\r\n    // |_____ matches[1] would have the charset :tada: , in our example it's utf-8\r\n    // However, if the matches Array was empty or no charset found, 'utf-8' would be returned by default.\r\n    const nodeSupportedEncodings = ['ascii', 'utf8', 'utf16le', 'ucs2', 'base64', 'binary', 'hex'];\r\n    const contentType = response.message.headers['content-type'] || '';\r\n    const matches = contentType.match(/charset=([^;,\\r\\n]+)/i);\r\n    return (matches && matches[1] && nodeSupportedEncodings.indexOf(matches[1]) != -1) ? matches[1] : 'utf-8';\r\n}\r\nexports.obtainContentCharset = obtainContentCharset;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst http = require(\"http\");\r\nconst https = require(\"https\");\r\nconst util = require(\"./Util\");\r\nlet fs;\r\nlet tunnel;\r\nvar HttpCodes;\r\n(function (HttpCodes) {\r\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\r\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\r\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\r\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\r\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\r\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\r\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\r\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\r\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\r\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\r\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\r\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\r\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\r\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\r\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\r\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\r\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\r\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\r\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\r\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\r\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\r\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\r\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\r\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\r\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\r\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\r\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\r\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\r\nconst HttpRedirectCodes = [HttpCodes.MovedPermanently, HttpCodes.ResourceMoved, HttpCodes.SeeOther, HttpCodes.TemporaryRedirect, HttpCodes.PermanentRedirect];\r\nconst HttpResponseRetryCodes = [HttpCodes.BadGateway, HttpCodes.ServiceUnavailable, HttpCodes.GatewayTimeout];\r\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\r\nconst ExponentialBackoffCeiling = 10;\r\nconst ExponentialBackoffTimeSlice = 5;\r\nclass HttpClientResponse {\r\n    constructor(message) {\r\n        this.message = message;\r\n    }\r\n    readBody() {\r\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n            let buffer = Buffer.alloc(0);\r\n            const encodingCharset = util.obtainContentCharset(this);\r\n            // Extract Encoding from header: 'content-encoding'\r\n            // Match `gzip`, `gzip, deflate` variations of GZIP encoding\r\n            const contentEncoding = this.message.headers['content-encoding'] || '';\r\n            const isGzippedEncoded = new RegExp('(gzip$)|(gzip, *deflate)').test(contentEncoding);\r\n            this.message.on('data', function (data) {\r\n                const chunk = (typeof data === 'string') ? Buffer.from(data, encodingCharset) : data;\r\n                buffer = Buffer.concat([buffer, chunk]);\r\n            }).on('end', function () {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (isGzippedEncoded) { // Process GZipped Response Body HERE\r\n                        const gunzippedBody = yield util.decompressGzippedContent(buffer, encodingCharset);\r\n                        resolve(gunzippedBody);\r\n                    }\r\n                    else {\r\n                        resolve(buffer.toString(encodingCharset));\r\n                    }\r\n                });\r\n            }).on('error', function (err) {\r\n                reject(err);\r\n            });\r\n        }));\r\n    }\r\n}\r\nexports.HttpClientResponse = HttpClientResponse;\r\nfunction isHttps(requestUrl) {\r\n    let parsedUrl = url.parse(requestUrl);\r\n    return parsedUrl.protocol === 'https:';\r\n}\r\nexports.isHttps = isHttps;\r\nvar EnvironmentVariables;\r\n(function (EnvironmentVariables) {\r\n    EnvironmentVariables[\"HTTP_PROXY\"] = \"HTTP_PROXY\";\r\n    EnvironmentVariables[\"HTTPS_PROXY\"] = \"HTTPS_PROXY\";\r\n    EnvironmentVariables[\"NO_PROXY\"] = \"NO_PROXY\";\r\n})(EnvironmentVariables || (EnvironmentVariables = {}));\r\nclass HttpClient {\r\n    constructor(userAgent, handlers, requestOptions) {\r\n        this._ignoreSslError = false;\r\n        this._allowRedirects = true;\r\n        this._allowRedirectDowngrade = false;\r\n        this._maxRedirects = 50;\r\n        this._allowRetries = false;\r\n        this._maxRetries = 1;\r\n        this._keepAlive = false;\r\n        this._disposed = false;\r\n        this.userAgent = userAgent;\r\n        this.handlers = handlers || [];\r\n        let no_proxy = process.env[EnvironmentVariables.NO_PROXY];\r\n        if (no_proxy) {\r\n            this._httpProxyBypassHosts = [];\r\n            no_proxy.split(',').forEach(bypass => {\r\n                this._httpProxyBypassHosts.push(new RegExp(bypass, 'i'));\r\n            });\r\n        }\r\n        this.requestOptions = requestOptions;\r\n        if (requestOptions) {\r\n            if (requestOptions.ignoreSslError != null) {\r\n                this._ignoreSslError = requestOptions.ignoreSslError;\r\n            }\r\n            this._socketTimeout = requestOptions.socketTimeout;\r\n            this._httpProxy = requestOptions.proxy;\r\n            if (requestOptions.proxy && requestOptions.proxy.proxyBypassHosts) {\r\n                this._httpProxyBypassHosts = [];\r\n                requestOptions.proxy.proxyBypassHosts.forEach(bypass => {\r\n                    this._httpProxyBypassHosts.push(new RegExp(bypass, 'i'));\r\n                });\r\n            }\r\n            this._certConfig = requestOptions.cert;\r\n            if (this._certConfig) {\r\n                // If using cert, need fs\r\n                fs = require('fs');\r\n                // cache the cert content into memory, so we don't have to read it from disk every time\r\n                if (this._certConfig.caFile && fs.existsSync(this._certConfig.caFile)) {\r\n                    this._ca = fs.readFileSync(this._certConfig.caFile, 'utf8');\r\n                }\r\n                if (this._certConfig.certFile && fs.existsSync(this._certConfig.certFile)) {\r\n                    this._cert = fs.readFileSync(this._certConfig.certFile, 'utf8');\r\n                }\r\n                if (this._certConfig.keyFile && fs.existsSync(this._certConfig.keyFile)) {\r\n                    this._key = fs.readFileSync(this._certConfig.keyFile, 'utf8');\r\n                }\r\n            }\r\n            if (requestOptions.allowRedirects != null) {\r\n                this._allowRedirects = requestOptions.allowRedirects;\r\n            }\r\n            if (requestOptions.allowRedirectDowngrade != null) {\r\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\r\n            }\r\n            if (requestOptions.maxRedirects != null) {\r\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\r\n            }\r\n            if (requestOptions.keepAlive != null) {\r\n                this._keepAlive = requestOptions.keepAlive;\r\n            }\r\n            if (requestOptions.allowRetries != null) {\r\n                this._allowRetries = requestOptions.allowRetries;\r\n            }\r\n            if (requestOptions.maxRetries != null) {\r\n                this._maxRetries = requestOptions.maxRetries;\r\n            }\r\n        }\r\n    }\r\n    options(requestUrl, additionalHeaders) {\r\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\r\n    }\r\n    get(requestUrl, additionalHeaders) {\r\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\r\n    }\r\n    del(requestUrl, additionalHeaders) {\r\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\r\n    }\r\n    post(requestUrl, data, additionalHeaders) {\r\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\r\n    }\r\n    patch(requestUrl, data, additionalHeaders) {\r\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\r\n    }\r\n    put(requestUrl, data, additionalHeaders) {\r\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\r\n    }\r\n    head(requestUrl, additionalHeaders) {\r\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\r\n    }\r\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\r\n        return this.request(verb, requestUrl, stream, additionalHeaders);\r\n    }\r\n    /**\r\n     * Makes a raw http request.\r\n     * All other methods such as get, post, patch, and request ultimately call this.\r\n     * Prefer get, del, post and patch\r\n     */\r\n    request(verb, requestUrl, data, headers) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._disposed) {\r\n                throw new Error(\"Client has already been disposed.\");\r\n            }\r\n            let parsedUrl = url.parse(requestUrl);\r\n            let info = this._prepareRequest(verb, parsedUrl, headers);\r\n            // Only perform retries on reads since writes may not be idempotent.\r\n            let maxTries = (this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1) ? this._maxRetries + 1 : 1;\r\n            let numTries = 0;\r\n            let response;\r\n            while (numTries < maxTries) {\r\n                response = yield this.requestRaw(info, data);\r\n                // Check if it's an authentication challenge\r\n                if (response && response.message && response.message.statusCode === HttpCodes.Unauthorized) {\r\n                    let authenticationHandler;\r\n                    for (let i = 0; i < this.handlers.length; i++) {\r\n                        if (this.handlers[i].canHandleAuthentication(response)) {\r\n                            authenticationHandler = this.handlers[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (authenticationHandler) {\r\n                        return authenticationHandler.handleAuthentication(this, info, data);\r\n                    }\r\n                    else {\r\n                        // We have received an unauthorized response but have no handlers to handle it.\r\n                        // Let the response return to the caller.\r\n                        return response;\r\n                    }\r\n                }\r\n                let redirectsRemaining = this._maxRedirects;\r\n                while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1\r\n                    && this._allowRedirects\r\n                    && redirectsRemaining > 0) {\r\n                    const redirectUrl = response.message.headers[\"location\"];\r\n                    if (!redirectUrl) {\r\n                        // if there's no location to redirect to, we won't\r\n                        break;\r\n                    }\r\n                    let parsedRedirectUrl = url.parse(redirectUrl);\r\n                    if (parsedUrl.protocol == 'https:' && parsedUrl.protocol != parsedRedirectUrl.protocol && !this._allowRedirectDowngrade) {\r\n                        throw new Error(\"Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.\");\r\n                    }\r\n                    // we need to finish reading the response before reassigning response\r\n                    // which will leak the open socket.\r\n                    yield response.readBody();\r\n                    // let's make the request with the new redirectUrl\r\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\r\n                    response = yield this.requestRaw(info, data);\r\n                    redirectsRemaining--;\r\n                }\r\n                if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\r\n                    // If not a retry code, return immediately instead of retrying\r\n                    return response;\r\n                }\r\n                numTries += 1;\r\n                if (numTries < maxTries) {\r\n                    yield response.readBody();\r\n                    yield this._performExponentialBackoff(numTries);\r\n                }\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n    /**\r\n     * Needs to be called if keepAlive is set to true in request options.\r\n     */\r\n    dispose() {\r\n        if (this._agent) {\r\n            this._agent.destroy();\r\n        }\r\n        this._disposed = true;\r\n    }\r\n    /**\r\n     * Raw request.\r\n     * @param info\r\n     * @param data\r\n     */\r\n    requestRaw(info, data) {\r\n        return new Promise((resolve, reject) => {\r\n            let callbackForResult = function (err, res) {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                resolve(res);\r\n            };\r\n            this.requestRawWithCallback(info, data, callbackForResult);\r\n        });\r\n    }\r\n    /**\r\n     * Raw request with callback.\r\n     * @param info\r\n     * @param data\r\n     * @param onResult\r\n     */\r\n    requestRawWithCallback(info, data, onResult) {\r\n        let socket;\r\n        if (typeof (data) === 'string') {\r\n            info.options.headers[\"Content-Length\"] = Buffer.byteLength(data, 'utf8');\r\n        }\r\n        let callbackCalled = false;\r\n        let handleResult = (err, res) => {\r\n            if (!callbackCalled) {\r\n                callbackCalled = true;\r\n                onResult(err, res);\r\n            }\r\n        };\r\n        let req = info.httpModule.request(info.options, (msg) => {\r\n            let res = new HttpClientResponse(msg);\r\n            handleResult(null, res);\r\n        });\r\n        req.on('socket', (sock) => {\r\n            socket = sock;\r\n        });\r\n        // If we ever get disconnected, we want the socket to timeout eventually\r\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\r\n            if (socket) {\r\n                socket.destroy();\r\n            }\r\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\r\n        });\r\n        req.on('error', function (err) {\r\n            // err has statusCode property\r\n            // res should have headers\r\n            handleResult(err, null);\r\n        });\r\n        if (data && typeof (data) === 'string') {\r\n            req.write(data, 'utf8');\r\n        }\r\n        if (data && typeof (data) !== 'string') {\r\n            data.on('close', function () {\r\n                req.end();\r\n            });\r\n            data.pipe(req);\r\n        }\r\n        else {\r\n            req.end();\r\n        }\r\n    }\r\n    _prepareRequest(method, requestUrl, headers) {\r\n        const info = {};\r\n        info.parsedUrl = requestUrl;\r\n        const usingSsl = info.parsedUrl.protocol === 'https:';\r\n        info.httpModule = usingSsl ? https : http;\r\n        const defaultPort = usingSsl ? 443 : 80;\r\n        info.options = {};\r\n        info.options.host = info.parsedUrl.hostname;\r\n        info.options.port = info.parsedUrl.port ? parseInt(info.parsedUrl.port) : defaultPort;\r\n        info.options.path = (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\r\n        info.options.method = method;\r\n        info.options.headers = this._mergeHeaders(headers);\r\n        if (this.userAgent != null) {\r\n            info.options.headers[\"user-agent\"] = this.userAgent;\r\n        }\r\n        info.options.agent = this._getAgent(info.parsedUrl);\r\n        // gives handlers an opportunity to participate\r\n        if (this.handlers && !this._isPresigned(url.format(requestUrl))) {\r\n            this.handlers.forEach((handler) => {\r\n                handler.prepareRequest(info.options);\r\n            });\r\n        }\r\n        return info;\r\n    }\r\n    _isPresigned(requestUrl) {\r\n        if (this.requestOptions && this.requestOptions.presignedUrlPatterns) {\r\n            const patterns = this.requestOptions.presignedUrlPatterns;\r\n            for (let i = 0; i < patterns.length; i++) {\r\n                if (requestUrl.match(patterns[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _mergeHeaders(headers) {\r\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => (c[k.toLowerCase()] = obj[k], c), {});\r\n        if (this.requestOptions && this.requestOptions.headers) {\r\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\r\n        }\r\n        return lowercaseKeys(headers || {});\r\n    }\r\n    _getAgent(parsedUrl) {\r\n        let agent;\r\n        let proxy = this._getProxy(parsedUrl);\r\n        let useProxy = proxy.proxyUrl && proxy.proxyUrl.hostname && !this._isMatchInBypassProxyList(parsedUrl);\r\n        if (this._keepAlive && useProxy) {\r\n            agent = this._proxyAgent;\r\n        }\r\n        if (this._keepAlive && !useProxy) {\r\n            agent = this._agent;\r\n        }\r\n        // if agent is already assigned use that agent.\r\n        if (!!agent) {\r\n            return agent;\r\n        }\r\n        const usingSsl = parsedUrl.protocol === 'https:';\r\n        let maxSockets = 100;\r\n        if (!!this.requestOptions) {\r\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\r\n        }\r\n        if (useProxy) {\r\n            // If using proxy, need tunnel\r\n            if (!tunnel) {\r\n                tunnel = require('tunnel');\r\n            }\r\n            const agentOptions = {\r\n                maxSockets: maxSockets,\r\n                keepAlive: this._keepAlive,\r\n                proxy: {\r\n                    proxyAuth: proxy.proxyAuth,\r\n                    host: proxy.proxyUrl.hostname,\r\n                    port: proxy.proxyUrl.port\r\n                },\r\n            };\r\n            let tunnelAgent;\r\n            const overHttps = proxy.proxyUrl.protocol === 'https:';\r\n            if (usingSsl) {\r\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\r\n            }\r\n            else {\r\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\r\n            }\r\n            agent = tunnelAgent(agentOptions);\r\n            this._proxyAgent = agent;\r\n        }\r\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\r\n        if (this._keepAlive && !agent) {\r\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\r\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\r\n            this._agent = agent;\r\n        }\r\n        // if not using private agent and tunnel agent isn't setup then use global agent\r\n        if (!agent) {\r\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\r\n        }\r\n        if (usingSsl && this._ignoreSslError) {\r\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\r\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\r\n            // we have to cast it to any and change it directly\r\n            agent.options = Object.assign(agent.options || {}, { rejectUnauthorized: false });\r\n        }\r\n        if (usingSsl && this._certConfig) {\r\n            agent.options = Object.assign(agent.options || {}, { ca: this._ca, cert: this._cert, key: this._key, passphrase: this._certConfig.passphrase });\r\n        }\r\n        return agent;\r\n    }\r\n    _getProxy(parsedUrl) {\r\n        let usingSsl = parsedUrl.protocol === 'https:';\r\n        let proxyConfig = this._httpProxy;\r\n        // fallback to http_proxy and https_proxy env\r\n        let https_proxy = process.env[EnvironmentVariables.HTTPS_PROXY];\r\n        let http_proxy = process.env[EnvironmentVariables.HTTP_PROXY];\r\n        if (!proxyConfig) {\r\n            if (https_proxy && usingSsl) {\r\n                proxyConfig = {\r\n                    proxyUrl: https_proxy\r\n                };\r\n            }\r\n            else if (http_proxy) {\r\n                proxyConfig = {\r\n                    proxyUrl: http_proxy\r\n                };\r\n            }\r\n        }\r\n        let proxyUrl;\r\n        let proxyAuth;\r\n        if (proxyConfig) {\r\n            if (proxyConfig.proxyUrl.length > 0) {\r\n                proxyUrl = url.parse(proxyConfig.proxyUrl);\r\n            }\r\n            if (proxyConfig.proxyUsername || proxyConfig.proxyPassword) {\r\n                proxyAuth = proxyConfig.proxyUsername + \":\" + proxyConfig.proxyPassword;\r\n            }\r\n        }\r\n        return { proxyUrl: proxyUrl, proxyAuth: proxyAuth };\r\n    }\r\n    _isMatchInBypassProxyList(parsedUrl) {\r\n        if (!this._httpProxyBypassHosts) {\r\n            return false;\r\n        }\r\n        let bypass = false;\r\n        this._httpProxyBypassHosts.forEach(bypassHost => {\r\n            if (bypassHost.test(parsedUrl.href)) {\r\n                bypass = true;\r\n            }\r\n        });\r\n        return bypass;\r\n    }\r\n    _performExponentialBackoff(retryNumber) {\r\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\r\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\r\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\r\n    }\r\n}\r\nexports.HttpClient = HttpClient;\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","var nodeFetch = require('node-fetch')\nvar realFetch = nodeFetch.default || nodeFetch\n\nvar fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","var fetchNode = require('./node-ponyfill')\nvar fetch = fetchNode.fetch.bind({})\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Response = fetchNode.Response\n  global.Headers = fetchNode.Headers\n  global.Request = fetchNode.Request\n}\n","import \"cross-fetch/polyfill\";\n\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\n\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { env } from \"process\";\nimport { getInput } from \"@actions/core\";\n\nfunction makeClient(): ApolloClient<NormalizedCacheObject> {\n\tconst token = env.GITHUB_TOKEN ?? getInput(\"token\", { required: true });\n\n\tif (!token) {\n\t\tthrow new Error(\n\t\t\t\"You need to provide a Github personal access token as `GITHUB_TOKEN` env variable. See README for more info.\",\n\t\t);\n\t}\n\n\treturn new ApolloClient({\n\t\tlink: new HttpLink({\n\t\t\turi: \"https://api.github.com/graphql\",\n\t\t\theaders: {\n\t\t\t\tauthorization: `token ${token}`,\n\t\t\t},\n\t\t}),\n\t\tcache: new InMemoryCache(),\n\t});\n}\n\nexport const client = makeClient();\n","\"use strict\";\n\nfunction _(message, opts) {\n    return `${opts && opts.context ? opts.context : \"Value\"} ${message}.`;\n}\n\nfunction type(V) {\n    if (V === null) {\n        return \"Null\";\n    }\n    switch (typeof V) {\n        case \"undefined\":\n            return \"Undefined\";\n        case \"boolean\":\n            return \"Boolean\";\n        case \"number\":\n            return \"Number\";\n        case \"string\":\n            return \"String\";\n        case \"symbol\":\n            return \"Symbol\";\n        case \"object\":\n            // Falls through\n        case \"function\":\n            // Falls through\n        default:\n            // Per ES spec, typeof returns an implemention-defined value that is not any of the existing ones for\n            // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n            // such cases. So treat the default case as an object.\n            return \"Object\";\n    }\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n    // There are four cases for numbers with fractional part being .5:\n    //\n    // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n    //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n    //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n    //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n    //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n    // (where n is a non-negative integer)\n    //\n    // Branch here for cases 1 and 4\n    if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n        return censorNegativeZero(Math.floor(x));\n    }\n\n    return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n    return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n    // https://tc39.github.io/ecma262/#eqn-modulo\n    // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n    const signMightNotMatch = x % y;\n    if (sign(y) !== sign(signMightNotMatch)) {\n        return signMightNotMatch + y;\n    }\n    return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n    return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, typeOpts) {\n    const isSigned = !typeOpts.unsigned;\n\n    let lowerBound;\n    let upperBound;\n    if (bitLength === 64) {\n        upperBound = Math.pow(2, 53) - 1;\n        lowerBound = !isSigned ? 0 : -Math.pow(2, 53) + 1;\n    } else if (!isSigned) {\n        lowerBound = 0;\n        upperBound = Math.pow(2, bitLength) - 1;\n    } else {\n        lowerBound = -Math.pow(2, bitLength - 1);\n        upperBound = Math.pow(2, bitLength - 1) - 1;\n    }\n\n    const twoToTheBitLength = Math.pow(2, bitLength);\n    const twoToOneLessThanTheBitLength = Math.pow(2, bitLength - 1);\n\n    return (V, opts) => {\n        if (opts === undefined) {\n            opts = {};\n        }\n\n        let x = +V;\n        x = censorNegativeZero(x); // Spec discussion ongoing: https://github.com/heycam/webidl/issues/306\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(_(\"is not a finite number\", opts));\n            }\n\n            x = integerPart(x);\n\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(_(\n                    `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts));\n            }\n\n            return x;\n        }\n\n        if (!Number.isNaN(x) && opts.clamp) {\n            x = Math.min(Math.max(x, lowerBound), upperBound);\n            x = evenRound(x);\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n        x = integerPart(x);\n\n        // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n        // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n        if (x >= lowerBound && x <= upperBound) {\n            return x;\n        }\n\n        // These will not work great for bitLength of 64, but oh well. See the README for more details.\n        x = modulo(x, twoToTheBitLength);\n        if (isSigned && x >= twoToOneLessThanTheBitLength) {\n            return x - twoToTheBitLength;\n        }\n        return x;\n    };\n}\n\nexports.any = V => {\n    return V;\n};\n\nexports.void = function () {\n    return undefined;\n};\n\nexports.boolean = function (val) {\n    return !!val;\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createIntegerConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createIntegerConversion(64, { unsigned: true });\n\nexports.double = (V, opts) => {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(_(\"is not a finite floating-point value\", opts));\n    }\n\n    return x;\n};\n\nexports[\"unrestricted double\"] = V => {\n    const x = +V;\n\n    return x;\n};\n\nexports.float = (V, opts) => {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(_(\"is not a finite floating-point value\", opts));\n    }\n\n    if (Object.is(x, -0)) {\n        return x;\n    }\n\n    const y = Math.fround(x);\n\n    if (!Number.isFinite(y)) {\n        throw new TypeError(_(\"is outside the range of a single-precision floating-point value\", opts));\n    }\n\n    return y;\n};\n\nexports[\"unrestricted float\"] = V => {\n    const x = +V;\n\n    if (isNaN(x)) {\n        return x;\n    }\n\n    if (Object.is(x, -0)) {\n        return x;\n    }\n\n    return Math.fround(x);\n};\n\nexports.DOMString = function (V, opts) {\n    if (opts === undefined) {\n        opts = {};\n    }\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    if (typeof V === \"symbol\") {\n        throw new TypeError(_(\"is a symbol, which cannot be converted to a string\", opts));\n    }\n\n    return String(V);\n};\n\nexports.ByteString = (V, opts) => {\n    const x = exports.DOMString(V, opts);\n    let c;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(_(\"is not a valid ByteString\", opts));\n        }\n    }\n\n    return x;\n};\n\nexports.USVString = (V, opts) => {\n    const S = exports.DOMString(V, opts);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else if (i === n - 1) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            const d = S.charCodeAt(i + 1);\n            if (0xDC00 <= d && d <= 0xDFFF) {\n                const a = c & 0x3FF;\n                const b = d & 0x3FF;\n                U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n                ++i;\n            } else {\n                U.push(String.fromCodePoint(0xFFFD));\n            }\n        }\n    }\n\n    return U.join(\"\");\n};\n\nexports.object = (V, opts) => {\n    if (type(V) !== \"Object\") {\n        throw new TypeError(_(\"is not an object\", opts));\n    }\n\n    return V;\n};\n\n// Not exported, but used in Function and VoidFunction.\n\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull], so\n// handling for that is omitted.\nfunction convertCallbackFunction(V, opts) {\n    if (typeof V !== \"function\") {\n        throw new TypeError(_(\"is not a function\", opts));\n    }\n    return V;\n}\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\n\nfunction isArrayBuffer(V) {\n    try {\n        abByteLengthGetter.call(V);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// I don't think we can reliably detect detached ArrayBuffers.\nexports.ArrayBuffer = (V, opts) => {\n    if (!isArrayBuffer(V)) {\n        throw new TypeError(_(\"is not a view on an ArrayBuffer object\", opts));\n    }\n    return V;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (V, opts) => {\n    try {\n        dvByteLengthGetter.call(V);\n        return V;\n    } catch (e) {\n        throw new TypeError(_(\"is not a view on an DataView object\", opts));\n    }\n};\n\n[\n    Int8Array, Int16Array, Int32Array, Uint8Array,\n    Uint16Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array\n].forEach(func => {\n    const name = func.name;\n    const article = /^[AEIOU]/.test(name) ? \"an\" : \"a\";\n    exports[name] = (V, opts) => {\n        if (!ArrayBuffer.isView(V) || V.constructor.name !== name) {\n            throw new TypeError(_(`is not ${article} ${name} object`, opts));\n        }\n\n        return V;\n    };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (V, opts) => {\n    if (!ArrayBuffer.isView(V)) {\n        throw new TypeError(_(\"is not a view on an ArrayBuffer object\", opts));\n    }\n\n    return V;\n};\n\nexports.BufferSource = (V, opts) => {\n    if (!ArrayBuffer.isView(V) && !isArrayBuffer(V)) {\n        throw new TypeError(_(\"is not an ArrayBuffer object or a view on one\", opts));\n    }\n\n    return V;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n\nexports.Function = convertCallbackFunction;\n\nexports.VoidFunction = convertCallbackFunction;\n","\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null || typeof value === \"function\";\n}\n\nfunction hasOwn(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js]  constructor registry\");\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\nconst IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === Math.pow(2, 32) - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  IteratorPrototype,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete\n};\n","\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B\\u061C\\u061E-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1735\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4B\\u1B50-\\u1B6A\\u1B74-\\u1B7C\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BA\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB67\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11146}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{11459}\\u{1145B}\\u{1145D}\\u{1145F}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{1173F}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AC0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}\\u{16A6F}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18AF2}\\u{1B000}-\\u{1B11E}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6D6}\\u{2A700}-\\u{2B734}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B\\u061C\\u061E-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u061C\\u061E-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180E\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BF\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E4F\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82B\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC1\\uFBD3-\\uFD3F\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE00-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019B}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10C}\\u{1F12F}\\u{1F16A}-\\u{1F16C}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D5}\\u{1F6E0}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FA}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F900}-\\u{1F90B}\\u{1F90D}-\\u{1F971}\\u{1F973}-\\u{1F976}\\u{1F97A}-\\u{1F9A2}\\u{1F9A5}-\\u{1F9AA}\\u{1F9AE}-\\u{1F9CA}\\u{1F9CD}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA73}\\u{1FA78}-\\u{1FA7A}\\u{1FA80}-\\u{1FA82}\\u{1FA90}-\\u{1FA95}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B\\u061C\\u061E-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u180E\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ABE\\u1B00-\\u1B4B\\u1B50-\\u1B7C\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20BF\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E4F\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BA\\u31C0-\\u31E3\\u31F0-\\u321E\\u3220-\\u4DB5\\u4DC0-\\u9FEF\\uA000-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA82B\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB67\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E\\uFD3F\\uFDFD\\uFE00-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019B}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11000}-\\u{1104D}\\u{11052}-\\u{1106F}\\u{1107F}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11146}\\u{11150}-\\u{11176}\\u{11180}-\\u{111CD}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{11459}\\u{1145B}\\u{1145D}-\\u{1145F}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B8}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{1173F}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AC0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}\\u{16A6F}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE3}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18AF2}\\u{1B000}-\\u{1B11E}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1E8}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10C}\\u{1F110}-\\u{1F16C}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D5}\\u{1F6E0}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FA}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F900}-\\u{1F90B}\\u{1F90D}-\\u{1F971}\\u{1F973}-\\u{1F976}\\u{1F97A}-\\u{1F9A2}\\u{1F9A5}-\\u{1F9AA}\\u{1F9AE}-\\u{1F9CA}\\u{1F9CD}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA73}\\u{1FA78}-\\u{1FA7A}\\u{1FA80}-\\u{1FA82}\\u{1FA90}-\\u{1FA95}\\u{20000}-\\u{2A6D6}\\u{2A700}-\\u{2B734}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1735\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4B\\u1B50-\\u1B6A\\u1B74-\\u1B7C\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BA\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB67\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11146}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{11459}\\u{1145B}\\u{1145D}\\u{1145F}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{1173F}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AC0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}\\u{16A6F}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18AF2}\\u{1B000}-\\u{1B11E}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6D6}\\u{2A700}-\\u{2B734}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n","\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4, // eslint-disable-line camelcase\n  disallowed_STD3_mapped: 5, // eslint-disable-line camelcase\n  deviation: 6,\n  ignored: 7\n};\n","\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, Object.assign({}, options, {\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    }));\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return \"xn--\" + punycode.encode(l);\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n","\"use strict\";\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n","\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = \"0\" + hex;\n  }\n\n  return \"%\" + hex;\n}\n\nfunction percentDecode(input) {\n  const output = Buffer.alloc(input.byteLength);\n  let ptr = 0;\n  for (let i = 0; i < input.length; ++i) {\n    if (input[i] !== 37 || !isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2])) {\n      output[ptr++] = input[i];\n    } else {\n      output[ptr++] = parseInt(input.slice(i + 1, i + 3).toString(), 16);\n      i += 2;\n    }\n  }\n  return output.slice(0, ptr);\n}\n\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, 38);\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name;\n    let value;\n    const indexOfEqual = bytes.indexOf(61);\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = Buffer.alloc(0);\n    }\n\n    name = replaceByteInByteSequence(Buffer.from(name), 43, 32);\n    value = replaceByteInByteSequence(Buffer.from(value), 43, 32);\n\n    output.push([percentDecode(name).toString(), percentDecode(value).toString()]);\n  }\n  return output;\n}\n\nfunction serializeUrlencodedByte(input) {\n  let output = \"\";\n  for (const byte of input) {\n    if (byte === 32) {\n      output += \"+\";\n    } else if (byte === 42 ||\n               byte === 45 ||\n               byte === 46 ||\n               (byte >= 48 && byte <= 57) ||\n               (byte >= 65 && byte <= 90) ||\n               byte === 95 ||\n               (byte >= 97 && byte <= 122)) {\n      output += String.fromCodePoint(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n  return output;\n}\n\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n    const name = serializeUrlencodedByte(Buffer.from(tuple[0]));\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n    value = serializeUrlencodedByte(Buffer.from(value));\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nmodule.exports = {\n  percentEncode,\n  percentDecode,\n\n  // application/x-www-form-urlencoded string parser\n  parseUrlencoded(input) {\n    return parseUrlencoded(Buffer.from(input));\n  },\n\n  // application/x-www-form-urlencoded serializer\n  serializeUrlencoded\n};\n","\"use strict\";\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { percentEncode, percentDecode } = require(\"./urlencoded\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction utf8PercentEncode(c) {\n  const buf = Buffer.from(c);\n\n  let str = \"\";\n\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n\n  return str;\n}\n\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\nconst extraUserinfoPercentEncodeSet =\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\nfunction isPathPercentEncode(c) {\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n\n  return cStr;\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/;\n  if (R === 10) {\n    regex = /[^0-9]/;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = percentDecode(Buffer.from(input)).toString();\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n  return output;\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n\n      cannotBeABaseURL: false\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[\"parse \" + this.state](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\" &&\n        !startsWithWindowsDriveLetter(this.input, this.pointer)) {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\n      (!this.stateOverride && (c === 63 || c === 35))) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\n               !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n        this.buffer = this.buffer[0] + \":\";\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] += percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 ||\n          buffer[i] > 0x7E ||\n          buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E ||\n          (buffer[i] === 0x27 && isSpecial(this.url))) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n\n    this.buffer = \"\";\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, function(o) { return o.user; });\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n *\n * _.sortBy(users, 'user', function(o) {\n *   return Math.floor(o.age / 10);\n * });\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = sortBy;\n","\"use strict\";\nconst stableSortBy = require(\"lodash.sortby\");\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencoded(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list = stableSortBy(this._list, [0]);\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst ctorRegistry = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const { target, kind, index } = internal;\n      const values = Array.from(target[impl]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"URLSearchParams Iterator\",\n    configurable: true\n  }\n});\n\n/**\n * When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n * method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n * implementing this mixin interface.\n */\nexports._mixedIntoPredicates = [];\nexports.is = function is(obj) {\n  if (obj) {\n    if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n      return true;\n    }\n    for (const isMixedInto of exports._mixedIntoPredicates) {\n      if (isMixedInto(obj)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexports.isImpl = function isImpl(obj) {\n  if (obj) {\n    if (obj instanceof Impl.implementation) {\n      return true;\n    }\n\n    const wrapper = utils.wrapperForImpl(obj);\n    for (const isMixedInto of exports._mixedIntoPredicates) {\n      if (isMixedInto(wrapper)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexports.convert = function convert(obj, { context = \"The provided value\" } = {}) {\n  if (exports.is(obj)) {\n    return utils.implForWrapper(obj);\n  }\n  throw new TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = function createDefaultIterator(target, kind) {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nexports.create = function create(globalObject, constructorArgs, privateData) {\n  if (globalObject[ctorRegistry] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistry][\"URLSearchParams\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor URLSearchParams is not installed on the passed global object\");\n  }\n\n  let obj = Object.create(ctor.prototype);\n  obj = exports.setup(obj, globalObject, constructorArgs, privateData);\n  return obj;\n};\nexports.createImpl = function createImpl(globalObject, constructorArgs, privateData) {\n  const obj = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(obj);\n};\nexports._internalSetup = function _internalSetup(obj) {};\nexports.setup = function setup(obj, globalObject, constructorArgs = [], privateData = {}) {\n  privateData.wrapper = obj;\n\n  exports._internalSetup(obj);\n  Object.defineProperty(obj, impl, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  obj[impl][utils.wrapperSymbol] = obj;\n  if (Impl.init) {\n    Impl.init(obj[impl], privateData);\n  }\n  return obj;\n};\n\nexports.install = function install(globalObject) {\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\"\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\"\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\"\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\"\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return this[impl].append(...args);\n    }\n\n    delete(name) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return this[impl].delete(...args);\n    }\n\n    get(name) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return this[impl].get(...args);\n    }\n\n    getAll(name) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(this[impl].getAll(...args));\n    }\n\n    has(name) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return this[impl].has(...args);\n    }\n\n    set(name, value) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return this[impl].set(...args);\n    }\n\n    sort() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl].sort();\n    }\n\n    toString() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl].toString();\n    }\n\n    keys() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key\");\n    }\n\n    values() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"value\");\n    }\n\n    entries() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\n          \"Failed to execute 'forEach' on 'iterable': The callback provided \" + \"as parameter 1 is not a function.\"\n        );\n      }\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[impl]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[impl]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  if (globalObject[ctorRegistry] === undefined) {\n    globalObject[ctorRegistry] = Object.create(null);\n  }\n  globalObject[ctorRegistry][interfaceName] = URLSearchParams;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencoded(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencoded(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst ctorRegistry = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\n/**\n * When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n * method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n * implementing this mixin interface.\n */\nexports._mixedIntoPredicates = [];\nexports.is = function is(obj) {\n  if (obj) {\n    if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n      return true;\n    }\n    for (const isMixedInto of exports._mixedIntoPredicates) {\n      if (isMixedInto(obj)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexports.isImpl = function isImpl(obj) {\n  if (obj) {\n    if (obj instanceof Impl.implementation) {\n      return true;\n    }\n\n    const wrapper = utils.wrapperForImpl(obj);\n    for (const isMixedInto of exports._mixedIntoPredicates) {\n      if (isMixedInto(wrapper)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexports.convert = function convert(obj, { context = \"The provided value\" } = {}) {\n  if (exports.is(obj)) {\n    return utils.implForWrapper(obj);\n  }\n  throw new TypeError(`${context} is not of type 'URL'.`);\n};\n\nexports.create = function create(globalObject, constructorArgs, privateData) {\n  if (globalObject[ctorRegistry] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistry][\"URL\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor URL is not installed on the passed global object\");\n  }\n\n  let obj = Object.create(ctor.prototype);\n  obj = exports.setup(obj, globalObject, constructorArgs, privateData);\n  return obj;\n};\nexports.createImpl = function createImpl(globalObject, constructorArgs, privateData) {\n  const obj = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(obj);\n};\nexports._internalSetup = function _internalSetup(obj) {};\nexports.setup = function setup(obj, globalObject, constructorArgs = [], privateData = {}) {\n  privateData.wrapper = obj;\n\n  exports._internalSetup(obj);\n  Object.defineProperty(obj, impl, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  obj[impl][utils.wrapperSymbol] = obj;\n  if (Impl.init) {\n    Impl.init(obj[impl], privateData);\n  }\n  return obj;\n};\n\nexports.install = function install(globalObject) {\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to construct 'URL': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, { context: \"Failed to construct 'URL': parameter 2\" });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl].toJSON();\n    }\n\n    get href() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"href\"];\n    }\n\n    set href(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, { context: \"Failed to set the 'href' property on 'URL': The provided value\" });\n\n      this[impl][\"href\"] = V;\n    }\n\n    toString() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return this[impl][\"href\"];\n    }\n\n    get origin() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"origin\"];\n    }\n\n    get protocol() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"protocol\"];\n    }\n\n    set protocol(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\"\n      });\n\n      this[impl][\"protocol\"] = V;\n    }\n\n    get username() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"username\"];\n    }\n\n    set username(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\"\n      });\n\n      this[impl][\"username\"] = V;\n    }\n\n    get password() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"password\"];\n    }\n\n    set password(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\"\n      });\n\n      this[impl][\"password\"] = V;\n    }\n\n    get host() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"host\"];\n    }\n\n    set host(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, { context: \"Failed to set the 'host' property on 'URL': The provided value\" });\n\n      this[impl][\"host\"] = V;\n    }\n\n    get hostname() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"hostname\"];\n    }\n\n    set hostname(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\"\n      });\n\n      this[impl][\"hostname\"] = V;\n    }\n\n    get port() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"port\"];\n    }\n\n    set port(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, { context: \"Failed to set the 'port' property on 'URL': The provided value\" });\n\n      this[impl][\"port\"] = V;\n    }\n\n    get pathname() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"pathname\"];\n    }\n\n    set pathname(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\"\n      });\n\n      this[impl][\"pathname\"] = V;\n    }\n\n    get search() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"search\"];\n    }\n\n    set search(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, { context: \"Failed to set the 'search' property on 'URL': The provided value\" });\n\n      this[impl][\"search\"] = V;\n    }\n\n    get searchParams() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(this[impl][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"hash\"];\n    }\n\n    set hash(V) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"USVString\"](V, { context: \"Failed to set the 'hash' property on 'URL': The provided value\" });\n\n      this[impl][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  if (globalObject[ctorRegistry] === undefined) {\n    globalObject[ctorRegistry] = Object.create(null);\n  }\n  globalObject[ctorRegistry][interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n};\n\nconst Impl = require(\"./URL-impl.js\");\n","\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n","\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst urlEncoded = require(\"./lib/urlencoded\");\n\nconst sharedGlobalObject = {};\nURL.install(sharedGlobalObject);\nURLSearchParams.install(sharedGlobalObject);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\n\nexports.percentDecode = urlEncoded.percentDecode;\n","import { CdkReleaseAssets, CdkReleaseAssetsQuery, CdkReleaseAssetsQueryVariables, ReleaseAsset } from \"./generated/graphql\";\nimport { ParsedUrlQuery, parse as parseQuery } from \"querystring\";\nimport { clean, gt, intersects, minVersion } from \"semver\";\nimport { createWriteStream, promises } from \"fs\";\nimport { ensureDir, pathExists } from \"fs-extra\";\nimport { getInput, setFailed, setOutput } from \"@actions/core\";\n\nimport { HttpClient } from \"typed-rest-client/HttpClient\";\nimport JSZip from \"jszip\";\nimport { client } from \"./client\";\nimport { env } from \"process\";\nimport { extract } from \"tar-stream\";\nimport gunzip from \"gunzip-maybe\";\nimport { inspect } from \"util\";\nimport { join } from \"path\";\nimport { parseURL } from \"whatwg-url\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction log(obj: any) {\n\tconsole.log(inspect(obj, false, 7, true));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction debug(obj: any): void {\n\tif (env.APP_ENV === \"debug\") {\n\t\tif (Array.isArray(obj)) {\n\t\t\tobj.forEach((item) => log(item));\n\t\t} else if (obj !== null && typeof obj === \"object\") {\n\t\t\tlog(obj);\n\t\t} else if (typeof obj === \"string\") {\n\t\t\tconsole.log(obj);\n\t\t}\n\t}\n}\n\nasync function getReleaseDownloadUrl(tagName: string): Promise<string> {\n\tconst version = clean(tagName);\n\tconst result = await client.query<CdkReleaseAssetsQuery, CdkReleaseAssetsQueryVariables>({\n\t\tquery: CdkReleaseAssets,\n\t\tvariables: {\n\t\t\ttagName,\n\t\t},\n\t});\n\tconst assets = result.data.repository.release.releaseAssets.edges.map((edge) => edge.node as ReleaseAsset);\n\treturn assets.reduce((acc: string, asset): string => {\n\t\tif (asset.name === `aws-cdk-${version}.zip`) {\n\t\t\tacc = asset.url;\n\t\t}\n\t\treturn acc;\n\t}, null);\n}\n\ninterface AssetQuery extends ParsedUrlQuery {\n\t\"X-Amz-Algorithm\": string;\n\t\"X-Amz-Credential\": string;\n\t\"X-Amz-Date\": string;\n\t\"X-Amz-Expires\": string;\n\t\"X-Amz-Signature\": string;\n\t\"X-Amz-SignedHeaders\": string;\n\tactor_id: string;\n\trepo_id: string;\n\t\"response-content-disposition\": string;\n\t\"response-content-type\": string;\n}\n\nfunction getFilename(url: string): string {\n\tconst { query } = parseURL(url);\n\tconst { \"response-content-disposition\": param } = parseQuery(query) as AssetQuery;\n\tif (!param) {\n\t\tthrow new Error(\"response-content-disposition query string not found\");\n\t}\n\treturn param.split(\"filename=\").pop();\n}\n\nasync function download(url) {\n\tconst filename = getFilename(url);\n\tconst dirPath = join(process.cwd(), \"tmp\");\n\tconst filePath = join(process.cwd(), `tmp/${filename}`);\n\tawait ensureDir(dirPath);\n\tif (await pathExists(filePath)) {\n\t\treturn filePath;\n\t}\n\treturn new Promise<string>(async (resolve) => {\n\t\tconst client = new HttpClient(\"download\");\n\t\tconst stream: NodeJS.WritableStream = createWriteStream(filePath);\n\t\t(await client.get(url)).message.pipe(stream).on(\"close\", () => {\n\t\t\tstream.end();\n\t\t\tresolve(filePath);\n\t\t});\n\t});\n}\n\ntype PackageJson = Record<string, unknown>;\n\nasync function getPackages(filePath: string) {\n\tconst data = await promises.readFile(filePath);\n\tconst zip = await JSZip.loadAsync(data);\n\treturn Promise.all(\n\t\tzip\n\t\t\t.folder(\"js\")\n\t\t\t.filter((relativePath) => {\n\t\t\t\treturn relativePath.endsWith(\".tgz\");\n\t\t\t})\n\t\t\t.map((file) => {\n\t\t\t\treturn new Promise<PackageJson[]>((resolve) => {\n\t\t\t\t\tconst pkgs: PackageJson[] = [];\n\t\t\t\t\tfile\n\t\t\t\t\t\t.nodeStream()\n\t\t\t\t\t\t.pipe(gunzip())\n\t\t\t\t\t\t.pipe(extract())\n\t\t\t\t\t\t.on(\"entry\", function (header, stream, next) {\n\t\t\t\t\t\t\tstream.on(\"end\", function () {\n\t\t\t\t\t\t\t\tnext(); // ready for next entry\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (header.name === \"package/package.json\") {\n\t\t\t\t\t\t\t\tconst data = [];\n\t\t\t\t\t\t\t\tstream\n\t\t\t\t\t\t\t\t\t.on(\"data\", (chunk) => data.push(chunk))\n\t\t\t\t\t\t\t\t\t.on(\"finish\", function () {\n\t\t\t\t\t\t\t\t\t\tconst json = Buffer.concat(data).toString();\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tconst pkg = JSON.parse(json);\n\t\t\t\t\t\t\t\t\t\t\tpkgs.push(pkg);\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.on(\"error\", (err) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstream.resume();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on(\"finish\", () => resolve(pkgs));\n\t\t\t\t});\n\t\t\t}),\n\t).then((arr) => {\n\t\treturn Promise.resolve([].concat([], ...arr).filter((item) => Boolean(item)));\n\t});\n}\n\nfunction normalizeVersions(pkg: string, v1: string, v2: string): string {\n\tif (!intersects(v1, v2)) {\n\t\tdebug(`${pkg}@${v1} and ${pkg}@${v2} do not intersect`);\n\t}\n\tconst { version: v1Min } = minVersion(v1);\n\tconst { version: v2Min } = minVersion(v2);\n\treturn gt(v1Min, v2Min) ? v1 : v2;\n}\n\nexport async function main(): Promise<void> {\n\ttry {\n\t\tconst tagName = env.RELEASE ?? getInput(\"release\");\n\t\tconst url = await getReleaseDownloadUrl(tagName);\n\t\tconst source = await download(url);\n\t\tconst packages = await getPackages(source);\n\t\tconst { stable, experimental, deprecated, unknown } = Object.values(packages).reduce(\n\t\t\t(acc, pkg) => {\n\t\t\t\tswitch (pkg.stability) {\n\t\t\t\t\tcase \"stable\":\n\t\t\t\t\t\tacc.stable.push(pkg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"experimental\":\n\t\t\t\t\t\tacc.experimental.push(pkg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"deprecated\":\n\t\t\t\t\t\tacc.deprecated.push(pkg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tacc.unknown.push(pkg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{ stable: [], experimental: [], deprecated: [], unknown: [] },\n\t\t);\n\t\tdebug(`stable packages: ${stable.length}`);\n\t\tdebug(`experimental packages: ${experimental.length}`);\n\t\tdebug(`deprecated packages: ${deprecated.length}`);\n\t\tdebug(`unknown packages: ${unknown.length}`);\n\t\tconst output = [stable, experimental].flat().reduce((acc, { name, version, peerDependencies = {} }) => {\n\t\t\tconst current = acc[name];\n\t\t\tif (current && current !== version) {\n\t\t\t\tversion = normalizeVersions(name, current, version);\n\t\t\t}\n\t\t\tacc[name] = version;\n\t\t\tObject.entries(peerDependencies).forEach(([peerName, peerVersion]) => {\n\t\t\t\tconst currentPeer = acc[peerName];\n\t\t\t\tif (currentPeer && currentPeer !== peerVersion) {\n\t\t\t\t\tpeerVersion = normalizeVersions(name, currentPeer, peerVersion as string);\n\t\t\t\t}\n\t\t\t\tacc[peerName] = peerVersion;\n\t\t\t});\n\t\t\tacc = Object.fromEntries(Object.entries(acc).sort());\n\t\t\treturn acc;\n\t\t}, {});\n\t\tif (env.APP_ENV === \"debug\") {\n\t\t\tdebug(output);\n\t\t\tprocess.exit(0);\n\t\t} else {\n\t\t\tsetOutput(\"dependencies\", JSON.stringify(output));\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tsetFailed(`Action failed with error ${err}`);\n\t}\n}\n","import { main } from \"./main\";\nmain();\n"],"names":["nodejsCustomInspectSymbol","Symbol","for","undefined","_typeof","obj","iterator","constructor","prototype","formatValue","value","seenValues","JSON","stringify","name","concat","previouslySeenValues","indexOf","customInspectFn","object","String","inspect","getCustomFn","customValue","call","Array","isArray","array","length","len","Math","min","remaining","items","i","push","join","formatArray","keys","Object","tag","toString","replace","getObjectTag","map","key","formatObject","formatObjectValue","devAssert","condition","message","Boolean","Error","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","split","locationLine","subLineIndex","floor","subLineColumnNum","subLines","slice","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","fn","Function","TypeError","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","this","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","instance","bind","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Constructor","protoProps","staticProps","_super","result","Super","NewTarget","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","_source","loc","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","defineProperties","locations","stack","captureStackTrace","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","defineInspect","classObject","toJSON","invariant","Location","startToken","endToken","end","Token","kind","prev","next","Source","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","dedentBlockStringValue","rawString","commonIndent","indent","leadingWhitespace","getBlockStringIndentation","isBlank","shift","pop","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","readBlockString","charCode","uniCharCode","invalidSequence","readString","unexpectedCharacterMessage","b","c","d","char2hex","Parser","options","sourceObj","_lexer","_options","parseName","expectToken","parseDocument","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","type","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind","parse","parser","normalize","string","trim","docCache","fragmentSourceMap","printFragmentWarnings","doc","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","valueType","hasOwnProperty","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","console","warn","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","ActionExecutionCapabilitySetting","AuditLogOrderField","CollaboratorAffiliation","CommentAuthorAssociation","CommentCannotUpdateReason","CommitContributionOrderField","DefaultRepositoryPermissionField","DeploymentOrderField","DeploymentState","DeploymentStatusState","DiffSide","EnterpriseAdministratorInvitationOrderField","EnterpriseAdministratorRole","EnterpriseDefaultRepositoryPermissionSettingValue","EnterpriseEnabledDisabledSettingValue","EnterpriseEnabledSettingValue","EnterpriseMemberOrderField","EnterpriseMembersCanCreateRepositoriesSettingValue","EnterpriseMembersCanMakePurchasesSettingValue","EnterpriseServerInstallationOrderField","EnterpriseServerUserAccountEmailOrderField","EnterpriseServerUserAccountOrderField","EnterpriseServerUserAccountsUploadOrderField","EnterpriseServerUserAccountsUploadSyncState","EnterpriseUserAccountMembershipRole","EnterpriseUserDeployment","FundingPlatform","GistOrderField","GistPrivacy","GitSignatureState","IdentityProviderConfigurationState","IpAllowListEnabledSettingValue","IpAllowListEntryOrderField","IssueOrderField","IssueState","IssueTimelineItemsItemType","LabelOrderField","LanguageOrderField","LockReason","MergeableState","MilestoneOrderField","MilestoneState","OauthApplicationCreateAuditEntryState","OperationType","OrderDirection","OrgAddMemberAuditEntryPermission","OrgCreateAuditEntryBillingPlan","OrgRemoveBillingManagerAuditEntryReason","OrgRemoveMemberAuditEntryMembershipType","OrgRemoveMemberAuditEntryReason","OrgRemoveOutsideCollaboratorAuditEntryMembershipType","OrgRemoveOutsideCollaboratorAuditEntryReason","OrgUpdateDefaultRepositoryPermissionAuditEntryPermission","OrgUpdateMemberAuditEntryPermission","OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility","OrganizationInvitationRole","OrganizationInvitationType","OrganizationMemberRole","OrganizationMembersCanCreateRepositoriesSettingValue","OrganizationOrderField","PackageFileOrderField","PackageOrderField","PackageType","PackageVersionOrderField","PinnableItemType","ProjectCardArchivedState","ProjectCardState","ProjectColumnPurpose","ProjectOrderField","ProjectState","ProjectTemplate","PullRequestMergeMethod","PullRequestOrderField","PullRequestReviewCommentState","PullRequestReviewDecision","PullRequestReviewEvent","PullRequestReviewState","PullRequestState","PullRequestTimelineItemsItemType","PullRequestUpdateState","ReactionContent","ReactionOrderField","RefOrderField","ReleaseOrderField","RepoAccessAuditEntryVisibility","RepoAddMemberAuditEntryVisibility","RepoArchivedAuditEntryVisibility","RepoChangeMergeSettingAuditEntryMergeType","RepoCreateAuditEntryVisibility","RepoDestroyAuditEntryVisibility","RepoRemoveMemberAuditEntryVisibility","ReportedContentClassifiers","RepositoryAffiliation","RepositoryContributionType","RepositoryInvitationOrderField","RepositoryLockReason","RepositoryOrderField","RepositoryPermission","RepositoryPrivacy","RepositoryVisibility","SamlDigestAlgorithm","SamlSignatureAlgorithm","SavedReplyOrderField","SearchType","SecurityAdvisoryEcosystem","SecurityAdvisoryIdentifierType","SecurityAdvisoryOrderField","SecurityAdvisorySeverity","SecurityVulnerabilityOrderField","SponsorsTierOrderField","SponsorshipOrderField","SponsorshipPrivacy","StarOrderField","StatusState","SubscriptionState","TeamDiscussionCommentOrderField","TeamDiscussionOrderField","TeamMemberOrderField","TeamMemberRole","TeamMembershipType","TeamOrderField","TeamPrivacy","TeamRepositoryOrderField","TeamRole","TopicSuggestionDeclineReason","UserBlockDuration","UserStatusOrderField","CdkReleaseAssets","Promise","resolve","reject","err","res","cb","then","r","origCwd","process","cwd","platform","env","GRACEFUL_FS_PLATFORM","er","chdir","fs","constants","version","lchmod","mode","callback","open","O_WRONLY","O_SYMLINK","fd","fchmod","close","err2","lchmodSync","ret","openSync","threw","fchmodSync","closeSync","patchLchmod","lutimes","at","mt","futimes","er2","lutimesSync","futimesSync","_a","_b","_c","nextTick","patchLutimes","chown","chownFix","fchown","lchown","chmod","chmodFix","chownSync","chownFixSync","fchownSync","lchownSync","chmodSync","chmodFixSync","stat","statFix","fstat","lstat","statSync","statFixSync","fstatSync","lstatSync","uid","gid","rename","fs$rename","from","to","now","backoff","CB","setTimeout","stater","st","orig","chownErOk","stats","getuid","read","fs$read","buffer","offset","callback_","eagCounter","_","__","readSync","fs$readSync","Stream","require$$0","ReadStream","readable","paused","flags","bufferSize","encoding","setEncoding","Infinity","_read","emit","WriteStream","bytesWritten","busy","_queue","_open","flush","copy","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","gracefulQueue","previousSymbol","publishQueue","context","queue","debug","util","debuglog","test","NODE_DEBUG","m","format","global","fs$close","retry","fs$closeSync","on","equal","patch","polyfills","gracefulify","createReadStream","createWriteStream","fs$readFile","readFile","go$readFile","enqueue","fs$writeFile","writeFile","data","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$readdir","readdir","go$readdir","files","sort","substr","legStreams","legacy","fs$ReadStream","that","autoClose","destroy","fs$WriteStream","val","FileReadStream","FileWriteStream","fs$open","go$open","elem","module","clone","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","u","api","exports","method","filename","exists","bytesRead","write","writev","buffers","realpath","native","n","versions","x","parseInt","useNativeRecursiveOption","atLeastNode","checkPath","pth","root","processOptions","permissionError","errno","syscall","async","input","mkdir","recursive","make","dirname","includes","isDirectory","mkdirSync","makeDir","_makeDir","makeDirSync","require$$1","mkdirs","mkdirsSync","mkdirp","mkdirpSync","ensureDir","ensureDirSync","atime","mtime","futimesErr","closeErr","nodeSupportsBigInt","file","bigint","getStats","src","dest","all","catch","srcStat","destStat","areIdentical","ino","dev","Number","MAX_SAFE_INTEGER","size","nlink","atimeMs","mtimeMs","ctimeMs","birthtimeMs","isSrcSubdir","srcArr","sep","destArr","acc","cur","errMsg","funcName","checkPaths","callbackify","checkPathsSync","getStatsSync","checkParentPaths","srcParent","destParent","checkParentPathsSync","utimesMillisSync","startCopy","opts","dereference","srcMode","copyDir","setDestMode","mkDirAndCopy","onDir","isFile","isCharacterDevice","isBlockDevice","overwrite","unlinkSync","copyFile","errorOnExist","mayCopyFile","onFile","isSymbolicLink","resolvedSrc","readlinkSync","resolvedDest","symlinkSync","copyLink","onLink","copyFileSync","preserveTimestamps","fileIsNotWritable","makeFileWritable","updatedSrcStat","setDestTimestamps","handleTimestamps","readdirSync","srcItem","destItem","copyDirItem","copySync","clobber","arch","existsSync","handleFilterAndCopy","pathExists","access","pathExistsSync","utimesMillis","require$$2","checkParentDir","dirExists","handleFilter","onInclude","include","unlink","readlink","symlink","setDestTimestampsAndMode","handleTimestampsAndMode","copyDirItems","isWindows","defaults","maxBusyTries","rimraf","busyTries","assert","strictEqual","rimraf_","fixWinEPERM","rmdir","er3","fixWinEPERMSync","rmdirSync","originalEr","errState","f","rmkids","rimrafSync","startTime","rmkidsSync","sync","remove","removeSync","emptyDir","dir","deleteItem","emptyDirSync","emptydirSync","emptydir","createFile","makeFile","createFileSync","writeFileSync","createLink","srcpath","dstpath","makeLink","link","destinationExists","createLinkSync","linkSync","isAbsolute","toCwd","toDst","dstdir","relativeToDst","relative","_mkdirs","symlinkPaths","_symlinkPaths","symlinkPathsSync","symlinkType","_symlinkType","symlinkTypeSync","createSymlink","createSymlinkSync","ensureFile","ensureFileSync","ensureLink","ensureLinkSync","ensureSymlink","ensureSymlinkSync","EOL","replacer","spaces","stripBom","content","Buffer","isBuffer","_fs","jsonfile","universalify","shouldThrow","throws","reviver","readFileSync","readJson","readJsonSync","writeJson","writeJsonSync","outputFile","itDoes","outputFileSync","jsonFile","outputJson","outputJsonSync","outputJSON","outputJSONSync","writeJSON","writeJSONSync","readJSON","readJSONSync","renameSync","moveAcrossDevice","moveSync","doRename","require$$3","move","destExists","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","promises","hexTable","arrayToObject","plainObjects","assign","combine","compact","prop","refs","j","compacted","compactQueue","decode","decoder","charset","strWithoutPlus","unescape","decodeURIComponent","encode","defaultEncoder","escape","$0","out","charAt","isRegExp","maybeMap","mapped","merge","allowPrototypes","mergeTarget","targetItem","percentTwenties","Format","RFC1738","RFC3986","formatters","arrayPrefixGenerators","brackets","comma","indices","repeat","pushToArray","arr","valueOrArray","toISO","toISOString","defaultFormat","formats","addQueryPrefix","allowDots","charsetSentinel","delimiter","encoder","utils","encodeValuesOnly","formatter","serializeDate","date","skipNulls","strictNullHandling","generateArrayPrefix","v","objKeys","keyPrefix","normalizeStringifyOptions","arrayFormat","joined","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","resource","baseUrl","queryParams","pathApi","posix","requestUrl","base","url","resultantUrl","protocol","auth","host","pathname","endsWith","parsedQueryParams","qs","params","separator","shouldAllowDots","shouldOnlyEncodeValues","buildParamsStringifyOptions","getUrlWithParsedQueryParams","zlib","gunzip","response","matches","headers","agent","TunnelingAgent","request","http","createSocket","createSecureSocket","defaultPort","https","proxyOptions","proxy","maxSockets","Agent","defaultMaxSockets","requests","sockets","socket","port","localAddress","toOptions","pending","splice","onSocket","removeSocket","hostHeader","getHeader","tlsOptions","mergeOptions","servername","secureSocket","tls","connect","overrides","keyLen","k","inherits","events","EventEmitter","addRequest","req","onFree","onCloseOrRemove","removeListener","placeholder","connectOptions","proxyAuth","connectReq","onConnect","head","removeAllListeners","statusCode","useChunkedEncodingByDefault","once","upgrade","cause","unshift","tunnel","HttpCodes","HttpRedirectCodes","MovedPermanently","ResourceMoved","SeeOther","TemporaryRedirect","PermanentRedirect","HttpResponseRetryCodes","BadGateway","ServiceUnavailable","GatewayTimeout","RetryableHttpVerbs","HttpClientResponse","[object Object]","alloc","encodingCharset","obtainContentCharset","contentEncoding","isGzippedEncoded","RegExp","chunk","gunzippedBody","decompressGzippedContent","EnvironmentVariables","userAgent","handlers","requestOptions","_ignoreSslError","_allowRedirects","_allowRedirectDowngrade","_maxRedirects","_allowRetries","_maxRetries","_keepAlive","_disposed","no_proxy","NO_PROXY","_httpProxyBypassHosts","bypass","ignoreSslError","_socketTimeout","socketTimeout","_httpProxy","proxyBypassHosts","_certConfig","cert","caFile","_ca","certFile","_cert","keyFile","_key","allowRedirects","allowRedirectDowngrade","maxRedirects","keepAlive","allowRetries","maxRetries","additionalHeaders","verb","stream","parsedUrl","info","_prepareRequest","maxTries","numTries","requestRaw","Unauthorized","authenticationHandler","canHandleAuthentication","handleAuthentication","redirectsRemaining","redirectUrl","parsedRedirectUrl","readBody","_performExponentialBackoff","_agent","requestRawWithCallback","onResult","byteLength","callbackCalled","handleResult","httpModule","msg","sock","pipe","usingSsl","hostname","search","_mergeHeaders","_getAgent","_isPresigned","handler","prepareRequest","presignedUrlPatterns","patterns","lowercaseKeys","toLowerCase","_getProxy","useProxy","proxyUrl","_isMatchInBypassProxyList","_proxyAgent","globalAgent","agentOptions","tunnelAgent","overHttps","httpsOverHttps","httpsOverHttp","httpOverHttps","httpOverHttp","rejectUnauthorized","ca","passphrase","proxyConfig","https_proxy","HTTPS_PROXY","http_proxy","HTTP_PROXY","proxyUsername","proxyPassword","bypassHost","href","retryNumber","ms","pow","_interopDefault","ex","Url","Readable","BUFFER","TYPE","Blob","blobParts","element","ArrayBuffer","isView","byteOffset","buf","ab","relativeStart","relativeEnd","span","slicedBuffer","blob","FetchError","systemError","convert","commonjsHelpers.commonjsRequire","INTERNALS","PassThrough","Body","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","disturbed","consumeBody","_this4","accum","accumBytes","abort","resTimeout","clearTimeout","append","delete","getAll","arrayBuffer","p1","p2","bodyUsed","getBoundary","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","ct","_this3","convertBody","json","text","mixIn","proto","desc","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","pairs","pair","getHeaders","_pairs$i","createHeadersIterator","entries","INTERNAL","HeadersIteratorPrototype","_INTERNAL","exportNodeCompatibleHeaders","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","status","contentType","statusText","counter","ok","redirected","INTERNALS$2","parse_url","format_url","streamDestructionSupported","isRequest","Request","parsedURL","inputBody","signal","isAbortSignal","redirect","follow","compress","AbortError","PassThrough$1","resolve_url","fetch","contentLengthValue","totalBytes","getNodeRequestOptions","send","aborted","abortAndFinalize","finalize","reqTimeout","removeEventListener","addEventListener","createHeadersLenient","isRedirect","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","writeToStream","realFetch","nodeFetch","fetchNode","polyfill","client","GITHUB_TOKEN","getInput","required","ApolloClient","HttpLink","uri","authorization","cache","InMemoryCache","makeClient","integerPart","censorNegativeZero","trunc","sign","createIntegerConversion","bitLength","typeOpts","isSigned","unsigned","lowerBound","upperBound","twoToTheBitLength","twoToOneLessThanTheBitLength","V","enforceRange","isFinite","clamp","round","evenRound","y","signMightNotMatch","modulo","convertCallbackFunction","is","fround","treatNullAsEmptyString","DOMString","codePointAt","S","U","fromCodePoint","abByteLengthGetter","isArrayBuffer","dvByteLengthGetter","DataView","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Uint8ClampedArray","Float32Array","Float64Array","func","article","wrapperSymbol","implSymbol","sameObjectCaches","ctorRegistrySymbol","wrapperForImpl","impl","implForWrapper","wrapper","iterInternalSymbol","IteratorPrototype","byteLengthGetter","supportsPropertyIndex","supportedPropertyIndices","supportsPropertyName","supportedPropertyNames","indexedGet","indexedSetNew","indexedSetExisting","namedGet","namedSetNew","namedSetExisting","namedDelete","isObject","hasOwn","getSameObject","creator","tryWrapperForImpl","tryImplForWrapper","isArrayIndexPropName","combiningMarks","combiningClassVirama","validZWNJ","bidiDomain","bidiS1LTR","bidiS1RTL","bidiS2","bidiS3","bidiS4EN","bidiS4AN","bidiS5","bidiS6","valid","disallowed","disallowed_STD3_valid","disallowed_STD3_mapped","deviation","ignored","STATUS_MAPPING","findStatus","useSTD3ASCIIRules","mappingTable","mid","validateLabel","label","checkHyphens","checkBidi","checkJoiners","processingOption","codePoints","startsWith","regexes","ch","last","rtl","processing","domainName","hasError","processed","mapping","mapChars","labels","isBidi","domain","punycode","isBidiDomain","origLabel","curProcessing","toASCII","verifyDNSLength","RangeError","l","total","toUnicode","isASCIIDigit","isASCIIAlpha","isASCIIAlphanumeric","isASCIIHex","replaceByteInByteSequence","percentEncode","hex","percentDecode","ptr","serializeUrlencodedByte","byte","parseUrlencoded","sequences","cp","strictlySplitByteSequence","bytes","indexOfEqual","serializeUrlencoded","tuples","encodingOverride","tuple","specialSchemes","ftp","ws","wss","failure","countSymbols","ucs2","idx","isSingleDot","isWindowsDriveLetterString","infra","isSpecialScheme","scheme","isSpecial","isNotSpecial","isC0ControlPercentEncode","extraUserinfoPercentEncodeSet","Set","isUserinfoPercentEncode","isPathPercentEncode","extraFragmentPercentEncodeSet","isFragmentPercentEncode","extraPathPercentEncodeSet","percentEncodeChar","encodeSetPredicate","cStr","utf8PercentEncode","parseIPv4Number","R","regex","parseHost","isNotSpecialArg","address","pieceIndex","pointer","numbersSeen","ipv4Piece","number","swaps","temp","parseIPv6","decoded","parseOpaqueHost","asciiDomain","beStrict","tr46","domainToASCII","ipv4Host","parts","numbers","part","ipv4","parseIPv4","serializeHost","serializeIPv4","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","username","password","URLStateMachine","stateOverride","parseError","query","fragment","cannotBeABaseURL","trimControlChars","trimTabAndNewline","state","atFlag","arrFlag","passwordTokenSeenFlag","codePoint","encodedCodePoints","fileOtherwiseCodePoints","startsWithWindowsDriveLetter","cp1","cp2","excludeFragment","serializeURLOrigin","parseURL","serializeOrigin","usm","baseURL","integer","basicURLParse","HASH_UNDEFINED","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","nodeType","freeModule","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arrayMap","iteratee","arrayPush","arraySome","predicate","baseUnary","isHostObject","mapToArray","setToArray","transform","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","IE_PROTO","funcToString","objectToString","reIsNative","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","nativeKeys","arg","nativeMax","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","Hash","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArguments","baseTimes","skipIndexes","isIndex","assocIndexOf","eq","hash","getMapData","LARGE_ARRAY_SIZE","eachFunc","fromRight","baseEach","baseFor","collection","isArrayLike","iterable","keysFunc","createBaseFor","baseGet","isKey","castPath","toKey","baseHasIn","baseIsEqual","other","customizer","bitmask","isObjectLike","equalFunc","objIsArr","othIsArr","objTag","othTag","getTag","objIsObj","othIsObj","isSameTag","equalArrays","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isMasked","isFunction","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","hasFunc","isLength","hasPath","hasIn","UNORDERED_COMPARE_FLAG","baseMatchesProperty","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","property","baseKeys","Ctor","baseOrderBy","iteratees","orders","comparer","baseSortBy","baseMap","criteria","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","stringToPath","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","isSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","arrLength","seen","arrValue","othIndex","getValue","isFlattenable","isIterateeCall","ctorString","memoize","baseToString","quote","sortBy","otherArgs","baseRest","baseFlatten","depth","isStrict","resolver","memoized","Cache","isArrayLikeObject","globalObject","constructorArgs","doNotStripQMark","_list","_url","urlencoded","_updateSteps","found","stableSortBy","ctorRegistry","interfaceName","internal","Impl","implementation","isMixedInto","_mixedIntoPredicates","privateData","ctor","setup","_internalSetup","URLSearchParams","curArg","tmp","nextItem","conversions","ownKeys","typedKey","typedValue","createDefaultIterator","parsedBase","_query","createImpl","serializeURL","origin","cannotHaveAUsernamePasswordPort","setTheUsername","setThePassword","serializeInteger","searchParams","URL","sharedGlobalObject","install","urlStateMachine","log","APP_ENV","download","param","parseQuery","getFilename","dirPath","filePath","HttpClient","normalizeVersions","pkg","v1","v2","intersects","v1Min","minVersion","v2Min","gt","tagName","RELEASE","clean","variables","repository","release","releaseAssets","edges","edge","asset","getReleaseDownloadUrl","packages","zip","JSZip","loadAsync","folder","relativePath","pkgs","nodeStream","extract","header","resume","getPackages","stable","experimental","deprecated","unknown","stability","flat","peerDependencies","current","peerName","peerVersion","currentPeer","fromEntries","exit","setOutput","setFailed","main"],"mappings":"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"}