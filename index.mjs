/**
 * MIT License
 *
 * Copyright (c) 2020 C. Spencer Beggs
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import{getInput as e,setOutput as t,exportVariable as n,setFailed as i}from"@actions/core";import{createWriteStream as a,promises as r}from"fs";import{ensureDir as o,pathExists as s}from"fs-extra";import l from"gunzip-maybe";import{loadAsync as c}from"jszip";import{join as d}from"path";import{parse as m}from"querystring";import{gt as u,clean as p,intersects as f,minVersion as k}from"semver";import{extract as g}from"tar-stream";import{RestClient as v}from"typed-rest-client";import{parseURL as w}from"whatwg-url";import{createHttpLink as h,ApolloClient as y,InMemoryCache as b}from"@apollo/client/core";import N from"cross-fetch";import{inspect as S}from"util";const A=e("token",{required:!0});if(!A)throw new Error("You need to provide a Github personal access token as `GITHUB_TOKEN` env variable. See README for more info.");const q=new y({link:h({uri:"https://api.github.com/graphql",headers:{authorization:"token "+A},fetch:N}),cache:new b});function j(e){console.log(S(e,!1,7,!0))}function F(t){"true"===e("debug")&&(Array.isArray(t)?t.forEach(e=>j(e)):null!==t&&"object"==typeof t?j(t):"string"==typeof t&&console.log(t))}const O={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetReleaseAssets"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"tagName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[{kind:"Argument",name:{kind:"Name",value:"owner"},value:{kind:"StringValue",value:"aws",block:!1}},{kind:"Argument",name:{kind:"Name",value:"name"},value:{kind:"StringValue",value:"aws-cdk",block:!1}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"release"},arguments:[{kind:"Argument",name:{kind:"Name",value:"tagName"},value:{kind:"Variable",name:{kind:"Name",value:"tagName"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"releaseAssets"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"100"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:248,source:{body:'\n\tquery GetReleaseAssets($tagName: String!) {\n\t\trepository(owner: "aws", name: "aws-cdk") {\n\t\t\trelease(tagName: $tagName) {\n\t\t\t\treleaseAssets(first: 100) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n',name:"GraphQL request",locationOffset:{line:1,column:1}}}};async function E(e){F("downloading: "+e);const t=function(e){const{query:t}=w(e),{"response-content-disposition":n}=m(t);if(!n)throw new Error("response-content-disposition query string not found");return n.split("filename=").pop()}(e),n=d(process.cwd(),"tmp"),i=d(process.cwd(),"tmp/"+t);if(await o(n),await s(i))return F("source file already downloaded: "+i),i;const r=new v("download"),l=a(i),{message:c}=await r.client.get(e);return new Promise(e=>{c.pipe(l).on("close",()=>{l.end(),F("downloaded source to: "+i),e(i)})})}function $(e,t,n){f(t,n)||F(`${e}@${t} and ${e}@${n} do not intersect`);const{version:i}=k(t),{version:a}=k(n);return u(i,a)?t:n}var x=async function(){try{const i=e("release"),a=await async function(e){F("getting download url for AWS CDK relase: "+e);const t=p(e);return(await q.query({query:O,variables:{tagName:e}})).data.repository.release.releaseAssets.edges.map(e=>e.node).reduce((e,n)=>(n.name===`aws-cdk-${t}.zip`&&(e=n.url),e),null)}(i),o=await E(a),s=await async function(e){F("parsing packages from: "+e);const t=await r.readFile(e),n=await c(t);return Promise.all(n.folder("js").filter(e=>e.endsWith(".tgz")).map(e=>new Promise(t=>{const n=[];e.nodeStream().pipe(l()).pipe(g()).on("entry",(function(e,t,i){if(t.on("end",(function(){i()})),"package/package.json"===e.name){const e=[];t.on("data",t=>e.push(t)).on("finish",(function(){const t=Buffer.concat(e).toString();try{const e=JSON.parse(t);n.push(e)}catch(e){F(e)}})).on("error",e=>{F(e)})}t.resume()})).on("finish",()=>t(n))}))).then(e=>{const t=[].concat([],...e).filter(e=>Boolean(e));return F(`parsed ${Object.values(t).length} packages`),Promise.resolve(t)})}(o),{stable:d,experimental:m,deprecated:u,unknown:f}=Object.values(s).reduce((e,t)=>{switch(t.stability){case"stable":e.stable.push(t);break;case"experimental":e.experimental.push(t);break;case"deprecated":e.deprecated.push(t);break;default:e.unknown.push(t)}return e},{stable:[],experimental:[],deprecated:[],unknown:[]});F("  — stable: "+d.length),F("  — experimental: "+m.length),F("  — deprecated: "+u.length),F("  — unknown: "+f.length);const k=[d,m].flat().reduce((e,{name:t,version:n,peerDependencies:i={}})=>{const a=e[t];return a&&a!==n&&(n=$(t,a,n)),e[t]=n,Object.entries(i).forEach(([n,i])=>{const a=e[n];a&&a!==i&&(i=$(t,a,i)),e[n]=i}),e=Object.fromEntries(Object.entries(e).sort())},{});F(k),t("dependencies",k),n("dependencies",k)}catch(e){j(e),i("Action failed with error "+e)}}();export default x;
